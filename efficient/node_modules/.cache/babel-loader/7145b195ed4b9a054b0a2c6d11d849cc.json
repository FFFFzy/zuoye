{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCoordSysInfoBySeries = getCoordSysInfoBySeries;\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar _model = require(\"../util/model.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @class\n * For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // The index of the first category axis in `coordSysDims`.\n *     // `null/undefined` means no category axis exists.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nvar CoordSysInfo =\n/** @class */\nfunction () {\n  function CoordSysInfo(coordSysName) {\n    this.coordSysDims = [];\n    this.axisMap = (0, _util.createHashMap)();\n    this.categoryAxisMap = (0, _util.createHashMap)();\n    this.coordSysName = coordSysName;\n  }\n\n  return CoordSysInfo;\n}();\n\nfunction getCoordSysInfoBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = new CoordSysInfo(coordSysName);\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis', _model.SINGLE_REFERRING).models[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis', _model.SINGLE_REFERRING).models[0];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!xAxisModel) {\n        throw new Error('xAxis \"' + (0, _util.retrieve)(seriesModel.get('xAxisIndex'), seriesModel.get('xAxisId'), 0) + '\" not found');\n      }\n\n      if (!yAxisModel) {\n        throw new Error('yAxis \"' + (0, _util.retrieve)(seriesModel.get('xAxisIndex'), seriesModel.get('yAxisId'), 0) + '\" not found');\n      }\n    }\n\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis', _model.SINGLE_REFERRING).models[0];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!singleAxisModel) {\n        throw new Error('singleAxis should be specified.');\n      }\n    }\n\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar', _model.SINGLE_REFERRING).models[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!angleAxisModel) {\n        throw new Error('angleAxis option not found');\n      }\n\n      if (!radiusAxisModel) {\n        throw new Error('radiusAxis option not found');\n      }\n    }\n\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    (0, _util.each)(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel)) {\n        categoryAxisMap.set(axisDim, axisModel);\n\n        if (result.firstCategoryDimIndex == null) {\n          result.firstCategoryDimIndex = index;\n        }\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}","map":{"version":3,"names":["CoordSysInfo","coordSysName","coordSysDims","axisMap","createHashMap","categoryAxisMap","getCoordSysInfoBySeries","seriesModel","get","result","fetch","fetchers","cartesian2d","xAxisModel","getReferringComponents","SINGLE_REFERRING","models","yAxisModel","process","env","NODE_ENV","Error","retrieve","set","isCategory","firstCategoryDimIndex","singleAxis","singleAxisModel","polar","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","geo","parallel","ecModel","parallelModel","getComponent","dimensions","slice","each","parallelAxisIndex","axisIndex","index","axisModel","axisDim"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/model/referHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\nimport { createHashMap, retrieve, each } from 'zrender/lib/core/util.js';\nimport { SINGLE_REFERRING } from '../util/model.js';\n/**\n * @class\n * For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // The index of the first category axis in `coordSysDims`.\n *     // `null/undefined` means no category axis exists.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\n\nvar CoordSysInfo =\n/** @class */\nfunction () {\n  function CoordSysInfo(coordSysName) {\n    this.coordSysDims = [];\n    this.axisMap = createHashMap();\n    this.categoryAxisMap = createHashMap();\n    this.coordSysName = coordSysName;\n  }\n\n  return CoordSysInfo;\n}();\n\nexport function getCoordSysInfoBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = new CoordSysInfo(coordSysName);\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis', SINGLE_REFERRING).models[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis', SINGLE_REFERRING).models[0];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!xAxisModel) {\n        throw new Error('xAxis \"' + retrieve(seriesModel.get('xAxisIndex'), seriesModel.get('xAxisId'), 0) + '\" not found');\n      }\n\n      if (!yAxisModel) {\n        throw new Error('yAxis \"' + retrieve(seriesModel.get('xAxisIndex'), seriesModel.get('yAxisId'), 0) + '\" not found');\n      }\n    }\n\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis', SINGLE_REFERRING).models[0];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!singleAxisModel) {\n        throw new Error('singleAxis should be specified.');\n      }\n    }\n\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar', SINGLE_REFERRING).models[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!angleAxisModel) {\n        throw new Error('angleAxis option not found');\n      }\n\n      if (!radiusAxisModel) {\n        throw new Error('radiusAxis option not found');\n      }\n    }\n\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel)) {\n        categoryAxisMap.set(axisDim, axisModel);\n\n        if (result.firstCategoryDimIndex == null) {\n          result.firstCategoryDimIndex = index;\n        }\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}