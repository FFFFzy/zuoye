{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _tslib = require(\"tslib\");\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar graphic = _interopRequireWildcard(require(\"../../util/graphic.js\"));\n\nvar _states = require(\"../../util/states.js\");\n\nvar _Chart = _interopRequireDefault(require(\"../../view/Chart.js\"));\n\nvar _labelLayout = _interopRequireDefault(require(\"./labelLayout.js\"));\n\nvar _labelGuideHelper = require(\"../../label/labelGuideHelper.js\");\n\nvar _labelStyle = require(\"../../label/labelStyle.js\");\n\nvar _pieHelper = require(\"../helper/pieHelper.js\");\n\nvar _basicTrasition = require(\"../../animation/basicTrasition.js\");\n\nvar _pieLayout = require(\"./pieLayout.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n */\nvar PiePiece =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(PiePiece, _super);\n\n  function PiePiece(data, idx, startAngle) {\n    var _this = _super.call(this) || this;\n\n    _this.z2 = 2;\n    var text = new graphic.Text();\n\n    _this.setTextContent(text);\n\n    _this.updateData(data, idx, startAngle, true);\n\n    return _this;\n  }\n\n  PiePiece.prototype.updateData = function (data, idx, startAngle, firstCreate) {\n    var sector = this;\n    var seriesModel = data.hostModel;\n    var itemModel = data.getItemModel(idx);\n    var emphasisModel = itemModel.getModel('emphasis');\n    var layout = data.getItemLayout(idx); // cornerRadius & innerCornerRadius doesn't exist in the item layout. Use `0` if null value is specified.\n    // see `setItemLayout` in `pieLayout.ts`.\n\n    var sectorShape = (0, _util.extend)((0, _pieHelper.getSectorCornerRadius)(itemModel.getModel('itemStyle'), layout, true), layout); // Ignore NaN data.\n\n    if (isNaN(sectorShape.startAngle)) {\n      // Use NaN shape to avoid drawing shape.\n      sector.setShape(sectorShape);\n      return;\n    }\n\n    if (firstCreate) {\n      sector.setShape(sectorShape);\n      var animationType = seriesModel.getShallow('animationType');\n\n      if (seriesModel.ecModel.ssr) {\n        // Use scale animation in SSR mode(opacity?)\n        // Because CSS SVG animation doesn't support very customized shape animation.\n        graphic.initProps(sector, {\n          scaleX: 0,\n          scaleY: 0\n        }, seriesModel, {\n          dataIndex: idx,\n          isFrom: true\n        });\n        sector.originX = sectorShape.cx;\n        sector.originY = sectorShape.cy;\n      } else if (animationType === 'scale') {\n        sector.shape.r = layout.r0;\n        graphic.initProps(sector, {\n          shape: {\n            r: layout.r\n          }\n        }, seriesModel, idx);\n      } // Expansion\n      else {\n        if (startAngle != null) {\n          sector.setShape({\n            startAngle: startAngle,\n            endAngle: startAngle\n          });\n          graphic.initProps(sector, {\n            shape: {\n              startAngle: layout.startAngle,\n              endAngle: layout.endAngle\n            }\n          }, seriesModel, idx);\n        } else {\n          sector.shape.endAngle = layout.startAngle;\n          graphic.updateProps(sector, {\n            shape: {\n              endAngle: layout.endAngle\n            }\n          }, seriesModel, idx);\n        }\n      }\n    } else {\n      (0, _basicTrasition.saveOldStyle)(sector); // Transition animation from the old shape\n\n      graphic.updateProps(sector, {\n        shape: sectorShape\n      }, seriesModel, idx);\n    }\n\n    sector.useStyle(data.getItemVisual(idx, 'style'));\n    (0, _states.setStatesStylesFromModel)(sector, itemModel);\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var offset = seriesModel.get('selectedOffset');\n    var dx = Math.cos(midAngle) * offset;\n    var dy = Math.sin(midAngle) * offset;\n    var cursorStyle = itemModel.getShallow('cursor');\n    cursorStyle && sector.attr('cursor', cursorStyle);\n\n    this._updateLabel(seriesModel, data, idx);\n\n    sector.ensureState('emphasis').shape = (0, _util.extend)({\n      r: layout.r + (emphasisModel.get('scale') ? emphasisModel.get('scaleSize') || 0 : 0)\n    }, (0, _pieHelper.getSectorCornerRadius)(emphasisModel.getModel('itemStyle'), layout));\n    (0, _util.extend)(sector.ensureState('select'), {\n      x: dx,\n      y: dy,\n      shape: (0, _pieHelper.getSectorCornerRadius)(itemModel.getModel(['select', 'itemStyle']), layout)\n    });\n    (0, _util.extend)(sector.ensureState('blur'), {\n      shape: (0, _pieHelper.getSectorCornerRadius)(itemModel.getModel(['blur', 'itemStyle']), layout)\n    });\n    var labelLine = sector.getTextGuideLine();\n    var labelText = sector.getTextContent();\n    labelLine && (0, _util.extend)(labelLine.ensureState('select'), {\n      x: dx,\n      y: dy\n    }); // TODO: needs dx, dy in zrender?\n\n    (0, _util.extend)(labelText.ensureState('select'), {\n      x: dx,\n      y: dy\n    });\n    (0, _states.toggleHoverEmphasis)(this, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  };\n\n  PiePiece.prototype._updateLabel = function (seriesModel, data, idx) {\n    var sector = this;\n    var itemModel = data.getItemModel(idx);\n    var labelLineModel = itemModel.getModel('labelLine');\n    var style = data.getItemVisual(idx, 'style');\n    var visualColor = style && style.fill;\n    var visualOpacity = style && style.opacity;\n    (0, _labelStyle.setLabelStyle)(sector, (0, _labelStyle.getLabelStatesModels)(itemModel), {\n      labelFetcher: data.hostModel,\n      labelDataIndex: idx,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      defaultText: seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx)\n    });\n    var labelText = sector.getTextContent(); // Set textConfig on sector.\n\n    sector.setTextConfig({\n      // reset position, rotation\n      position: null,\n      rotation: null\n    }); // Make sure update style on labelText after setLabelStyle.\n    // Because setLabelStyle will replace a new style on it.\n\n    labelText.attr({\n      z2: 10\n    });\n    var labelPosition = seriesModel.get(['label', 'position']);\n\n    if (labelPosition !== 'outside' && labelPosition !== 'outer') {\n      sector.removeTextGuideLine();\n    } else {\n      var polyline = this.getTextGuideLine();\n\n      if (!polyline) {\n        polyline = new graphic.Polyline();\n        this.setTextGuideLine(polyline);\n      } // Default use item visual color\n\n\n      (0, _labelGuideHelper.setLabelLineStyle)(this, (0, _labelGuideHelper.getLabelLineStatesModels)(itemModel), {\n        stroke: visualColor,\n        opacity: (0, _util.retrieve3)(labelLineModel.get(['lineStyle', 'opacity']), visualOpacity, 1)\n      });\n    }\n  };\n\n  return PiePiece;\n}(graphic.Sector); // Pie view\n\n\nvar PieView =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(PieView, _super);\n\n  function PieView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ignoreLabelLineUpdate = true;\n    return _this;\n  }\n\n  PieView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var startAngle; // First render\n\n    if (!oldData && data.count() > 0) {\n      var shape = data.getItemLayout(0);\n\n      for (var s = 1; isNaN(shape && shape.startAngle) && s < data.count(); ++s) {\n        shape = data.getItemLayout(s);\n      }\n\n      if (shape) {\n        startAngle = shape.startAngle;\n      }\n    } // remove empty-circle if it exists\n\n\n    if (this._emptyCircleSector) {\n      group.remove(this._emptyCircleSector);\n    } // when all data are filtered, show lightgray empty circle\n\n\n    if (data.count() === 0 && seriesModel.get('showEmptyCircle')) {\n      var sector = new graphic.Sector({\n        shape: (0, _pieLayout.getBasicPieLayout)(seriesModel, api)\n      });\n      sector.useStyle(seriesModel.getModel('emptyCircleStyle').getItemStyle());\n      this._emptyCircleSector = sector;\n      group.add(sector);\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx, startAngle);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx, startAngle);\n      piePiece.off('click');\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      graphic.removeElementWithFadeOut(piePiece, seriesModel, idx);\n    }).execute();\n    (0, _labelLayout.default)(seriesModel); // Always use initial animation.\n\n    if (seriesModel.get('animationTypeUpdate') !== 'expansion') {\n      this._data = data;\n    }\n  };\n\n  PieView.prototype.dispose = function () {};\n\n  PieView.prototype.containPoint = function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  };\n\n  PieView.type = 'pie';\n  return PieView;\n}(_Chart.default);\n\nvar _default = PieView;\nexports.default = _default;","map":{"version":3,"names":["PiePiece","_super","__extends","data","idx","startAngle","_this","call","z2","text","graphic","Text","setTextContent","updateData","prototype","firstCreate","sector","seriesModel","hostModel","itemModel","getItemModel","emphasisModel","getModel","layout","getItemLayout","sectorShape","extend","getSectorCornerRadius","isNaN","setShape","animationType","getShallow","ecModel","ssr","initProps","scaleX","scaleY","dataIndex","isFrom","originX","cx","originY","cy","shape","r","r0","endAngle","updateProps","saveOldStyle","useStyle","getItemVisual","setStatesStylesFromModel","midAngle","offset","get","dx","Math","cos","dy","sin","cursorStyle","attr","_updateLabel","ensureState","x","y","labelLine","getTextGuideLine","labelText","getTextContent","toggleHoverEmphasis","labelLineModel","style","visualColor","fill","visualOpacity","opacity","setLabelStyle","getLabelStatesModels","labelFetcher","labelDataIndex","inheritColor","defaultOpacity","defaultText","getFormattedLabel","getName","setTextConfig","position","rotation","labelPosition","removeTextGuideLine","polyline","Polyline","setTextGuideLine","setLabelLineStyle","getLabelLineStatesModels","stroke","retrieve3","Sector","PieView","apply","arguments","ignoreLabelLineUpdate","render","api","payload","getData","oldData","_data","group","count","s","_emptyCircleSector","remove","getBasicPieLayout","getItemStyle","add","diff","piePiece","setItemGraphicEl","update","newIdx","oldIdx","getItemGraphicEl","off","removeElementWithFadeOut","execute","labelLayout","dispose","containPoint","point","itemLayout","radius","sqrt","type","ChartView"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/chart/pie/PieView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { extend, retrieve3 } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport labelLayout from './labelLayout.js';\nimport { setLabelLineStyle, getLabelLineStatesModels } from '../../label/labelGuideHelper.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getSectorCornerRadius } from '../helper/pieHelper.js';\nimport { saveOldStyle } from '../../animation/basicTrasition.js';\nimport { getBasicPieLayout } from './pieLayout.js';\n/**\n * Piece of pie including Sector, Label, LabelLine\n */\n\nvar PiePiece =\n/** @class */\nfunction (_super) {\n  __extends(PiePiece, _super);\n\n  function PiePiece(data, idx, startAngle) {\n    var _this = _super.call(this) || this;\n\n    _this.z2 = 2;\n    var text = new graphic.Text();\n\n    _this.setTextContent(text);\n\n    _this.updateData(data, idx, startAngle, true);\n\n    return _this;\n  }\n\n  PiePiece.prototype.updateData = function (data, idx, startAngle, firstCreate) {\n    var sector = this;\n    var seriesModel = data.hostModel;\n    var itemModel = data.getItemModel(idx);\n    var emphasisModel = itemModel.getModel('emphasis');\n    var layout = data.getItemLayout(idx); // cornerRadius & innerCornerRadius doesn't exist in the item layout. Use `0` if null value is specified.\n    // see `setItemLayout` in `pieLayout.ts`.\n\n    var sectorShape = extend(getSectorCornerRadius(itemModel.getModel('itemStyle'), layout, true), layout); // Ignore NaN data.\n\n    if (isNaN(sectorShape.startAngle)) {\n      // Use NaN shape to avoid drawing shape.\n      sector.setShape(sectorShape);\n      return;\n    }\n\n    if (firstCreate) {\n      sector.setShape(sectorShape);\n      var animationType = seriesModel.getShallow('animationType');\n\n      if (seriesModel.ecModel.ssr) {\n        // Use scale animation in SSR mode(opacity?)\n        // Because CSS SVG animation doesn't support very customized shape animation.\n        graphic.initProps(sector, {\n          scaleX: 0,\n          scaleY: 0\n        }, seriesModel, {\n          dataIndex: idx,\n          isFrom: true\n        });\n        sector.originX = sectorShape.cx;\n        sector.originY = sectorShape.cy;\n      } else if (animationType === 'scale') {\n        sector.shape.r = layout.r0;\n        graphic.initProps(sector, {\n          shape: {\n            r: layout.r\n          }\n        }, seriesModel, idx);\n      } // Expansion\n      else {\n          if (startAngle != null) {\n            sector.setShape({\n              startAngle: startAngle,\n              endAngle: startAngle\n            });\n            graphic.initProps(sector, {\n              shape: {\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n              }\n            }, seriesModel, idx);\n          } else {\n            sector.shape.endAngle = layout.startAngle;\n            graphic.updateProps(sector, {\n              shape: {\n                endAngle: layout.endAngle\n              }\n            }, seriesModel, idx);\n          }\n        }\n    } else {\n      saveOldStyle(sector); // Transition animation from the old shape\n\n      graphic.updateProps(sector, {\n        shape: sectorShape\n      }, seriesModel, idx);\n    }\n\n    sector.useStyle(data.getItemVisual(idx, 'style'));\n    setStatesStylesFromModel(sector, itemModel);\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var offset = seriesModel.get('selectedOffset');\n    var dx = Math.cos(midAngle) * offset;\n    var dy = Math.sin(midAngle) * offset;\n    var cursorStyle = itemModel.getShallow('cursor');\n    cursorStyle && sector.attr('cursor', cursorStyle);\n\n    this._updateLabel(seriesModel, data, idx);\n\n    sector.ensureState('emphasis').shape = extend({\n      r: layout.r + (emphasisModel.get('scale') ? emphasisModel.get('scaleSize') || 0 : 0)\n    }, getSectorCornerRadius(emphasisModel.getModel('itemStyle'), layout));\n    extend(sector.ensureState('select'), {\n      x: dx,\n      y: dy,\n      shape: getSectorCornerRadius(itemModel.getModel(['select', 'itemStyle']), layout)\n    });\n    extend(sector.ensureState('blur'), {\n      shape: getSectorCornerRadius(itemModel.getModel(['blur', 'itemStyle']), layout)\n    });\n    var labelLine = sector.getTextGuideLine();\n    var labelText = sector.getTextContent();\n    labelLine && extend(labelLine.ensureState('select'), {\n      x: dx,\n      y: dy\n    }); // TODO: needs dx, dy in zrender?\n\n    extend(labelText.ensureState('select'), {\n      x: dx,\n      y: dy\n    });\n    toggleHoverEmphasis(this, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  };\n\n  PiePiece.prototype._updateLabel = function (seriesModel, data, idx) {\n    var sector = this;\n    var itemModel = data.getItemModel(idx);\n    var labelLineModel = itemModel.getModel('labelLine');\n    var style = data.getItemVisual(idx, 'style');\n    var visualColor = style && style.fill;\n    var visualOpacity = style && style.opacity;\n    setLabelStyle(sector, getLabelStatesModels(itemModel), {\n      labelFetcher: data.hostModel,\n      labelDataIndex: idx,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      defaultText: seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx)\n    });\n    var labelText = sector.getTextContent(); // Set textConfig on sector.\n\n    sector.setTextConfig({\n      // reset position, rotation\n      position: null,\n      rotation: null\n    }); // Make sure update style on labelText after setLabelStyle.\n    // Because setLabelStyle will replace a new style on it.\n\n    labelText.attr({\n      z2: 10\n    });\n    var labelPosition = seriesModel.get(['label', 'position']);\n\n    if (labelPosition !== 'outside' && labelPosition !== 'outer') {\n      sector.removeTextGuideLine();\n    } else {\n      var polyline = this.getTextGuideLine();\n\n      if (!polyline) {\n        polyline = new graphic.Polyline();\n        this.setTextGuideLine(polyline);\n      } // Default use item visual color\n\n\n      setLabelLineStyle(this, getLabelLineStatesModels(itemModel), {\n        stroke: visualColor,\n        opacity: retrieve3(labelLineModel.get(['lineStyle', 'opacity']), visualOpacity, 1)\n      });\n    }\n  };\n\n  return PiePiece;\n}(graphic.Sector); // Pie view\n\n\nvar PieView =\n/** @class */\nfunction (_super) {\n  __extends(PieView, _super);\n\n  function PieView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ignoreLabelLineUpdate = true;\n    return _this;\n  }\n\n  PieView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var startAngle; // First render\n\n    if (!oldData && data.count() > 0) {\n      var shape = data.getItemLayout(0);\n\n      for (var s = 1; isNaN(shape && shape.startAngle) && s < data.count(); ++s) {\n        shape = data.getItemLayout(s);\n      }\n\n      if (shape) {\n        startAngle = shape.startAngle;\n      }\n    } // remove empty-circle if it exists\n\n\n    if (this._emptyCircleSector) {\n      group.remove(this._emptyCircleSector);\n    } // when all data are filtered, show lightgray empty circle\n\n\n    if (data.count() === 0 && seriesModel.get('showEmptyCircle')) {\n      var sector = new graphic.Sector({\n        shape: getBasicPieLayout(seriesModel, api)\n      });\n      sector.useStyle(seriesModel.getModel('emptyCircleStyle').getItemStyle());\n      this._emptyCircleSector = sector;\n      group.add(sector);\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx, startAngle);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx, startAngle);\n      piePiece.off('click');\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      graphic.removeElementWithFadeOut(piePiece, seriesModel, idx);\n    }).execute();\n    labelLayout(seriesModel); // Always use initial animation.\n\n    if (seriesModel.get('animationTypeUpdate') !== 'expansion') {\n      this._data = data;\n    }\n  };\n\n  PieView.prototype.dispose = function () {};\n\n  PieView.prototype.containPoint = function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  };\n\n  PieView.type = 'pie';\n  return PieView;\n}(ChartView);\n\nexport default PieView;"],"mappings":";;;;;;;;;;;AA2CA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AApDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA;AACA;AACA;AAEA,IAAIA,QAAQ;AACZ;AACA,UAAUC,MAAV,EAAkB;EAChB,IAAAC,gBAAA,EAAUF,QAAV,EAAoBC,MAApB;;EAEA,SAASD,QAAT,CAAkBG,IAAlB,EAAwBC,GAAxB,EAA6BC,UAA7B,EAAyC;IACvC,IAAIC,KAAK,GAAGL,MAAM,CAACM,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IAEAD,KAAK,CAACE,EAAN,GAAW,CAAX;IACA,IAAIC,IAAI,GAAG,IAAIC,OAAO,CAACC,IAAZ,EAAX;;IAEAL,KAAK,CAACM,cAAN,CAAqBH,IAArB;;IAEAH,KAAK,CAACO,UAAN,CAAiBV,IAAjB,EAAuBC,GAAvB,EAA4BC,UAA5B,EAAwC,IAAxC;;IAEA,OAAOC,KAAP;EACD;;EAEDN,QAAQ,CAACc,SAAT,CAAmBD,UAAnB,GAAgC,UAAUV,IAAV,EAAgBC,GAAhB,EAAqBC,UAArB,EAAiCU,WAAjC,EAA8C;IAC5E,IAAIC,MAAM,GAAG,IAAb;IACA,IAAIC,WAAW,GAAGd,IAAI,CAACe,SAAvB;IACA,IAAIC,SAAS,GAAGhB,IAAI,CAACiB,YAAL,CAAkBhB,GAAlB,CAAhB;IACA,IAAIiB,aAAa,GAAGF,SAAS,CAACG,QAAV,CAAmB,UAAnB,CAApB;IACA,IAAIC,MAAM,GAAGpB,IAAI,CAACqB,aAAL,CAAmBpB,GAAnB,CAAb,CAL4E,CAKtC;IACtC;;IAEA,IAAIqB,WAAW,GAAG,IAAAC,YAAA,EAAO,IAAAC,gCAAA,EAAsBR,SAAS,CAACG,QAAV,CAAmB,WAAnB,CAAtB,EAAuDC,MAAvD,EAA+D,IAA/D,CAAP,EAA6EA,MAA7E,CAAlB,CAR4E,CAQ4B;;IAExG,IAAIK,KAAK,CAACH,WAAW,CAACpB,UAAb,CAAT,EAAmC;MACjC;MACAW,MAAM,CAACa,QAAP,CAAgBJ,WAAhB;MACA;IACD;;IAED,IAAIV,WAAJ,EAAiB;MACfC,MAAM,CAACa,QAAP,CAAgBJ,WAAhB;MACA,IAAIK,aAAa,GAAGb,WAAW,CAACc,UAAZ,CAAuB,eAAvB,CAApB;;MAEA,IAAId,WAAW,CAACe,OAAZ,CAAoBC,GAAxB,EAA6B;QAC3B;QACA;QACAvB,OAAO,CAACwB,SAAR,CAAkBlB,MAAlB,EAA0B;UACxBmB,MAAM,EAAE,CADgB;UAExBC,MAAM,EAAE;QAFgB,CAA1B,EAGGnB,WAHH,EAGgB;UACdoB,SAAS,EAAEjC,GADG;UAEdkC,MAAM,EAAE;QAFM,CAHhB;QAOAtB,MAAM,CAACuB,OAAP,GAAiBd,WAAW,CAACe,EAA7B;QACAxB,MAAM,CAACyB,OAAP,GAAiBhB,WAAW,CAACiB,EAA7B;MACD,CAZD,MAYO,IAAIZ,aAAa,KAAK,OAAtB,EAA+B;QACpCd,MAAM,CAAC2B,KAAP,CAAaC,CAAb,GAAiBrB,MAAM,CAACsB,EAAxB;QACAnC,OAAO,CAACwB,SAAR,CAAkBlB,MAAlB,EAA0B;UACxB2B,KAAK,EAAE;YACLC,CAAC,EAAErB,MAAM,CAACqB;UADL;QADiB,CAA1B,EAIG3B,WAJH,EAIgBb,GAJhB;MAKD,CAPM,CAOL;MAPK,KAQF;QACD,IAAIC,UAAU,IAAI,IAAlB,EAAwB;UACtBW,MAAM,CAACa,QAAP,CAAgB;YACdxB,UAAU,EAAEA,UADE;YAEdyC,QAAQ,EAAEzC;UAFI,CAAhB;UAIAK,OAAO,CAACwB,SAAR,CAAkBlB,MAAlB,EAA0B;YACxB2B,KAAK,EAAE;cACLtC,UAAU,EAAEkB,MAAM,CAAClB,UADd;cAELyC,QAAQ,EAAEvB,MAAM,CAACuB;YAFZ;UADiB,CAA1B,EAKG7B,WALH,EAKgBb,GALhB;QAMD,CAXD,MAWO;UACLY,MAAM,CAAC2B,KAAP,CAAaG,QAAb,GAAwBvB,MAAM,CAAClB,UAA/B;UACAK,OAAO,CAACqC,WAAR,CAAoB/B,MAApB,EAA4B;YAC1B2B,KAAK,EAAE;cACLG,QAAQ,EAAEvB,MAAM,CAACuB;YADZ;UADmB,CAA5B,EAIG7B,WAJH,EAIgBb,GAJhB;QAKD;MACF;IACJ,CA7CD,MA6CO;MACL,IAAA4C,4BAAA,EAAahC,MAAb,EADK,CACiB;;MAEtBN,OAAO,CAACqC,WAAR,CAAoB/B,MAApB,EAA4B;QAC1B2B,KAAK,EAAElB;MADmB,CAA5B,EAEGR,WAFH,EAEgBb,GAFhB;IAGD;;IAEDY,MAAM,CAACiC,QAAP,CAAgB9C,IAAI,CAAC+C,aAAL,CAAmB9C,GAAnB,EAAwB,OAAxB,CAAhB;IACA,IAAA+C,gCAAA,EAAyBnC,MAAzB,EAAiCG,SAAjC;IACA,IAAIiC,QAAQ,GAAG,CAAC7B,MAAM,CAAClB,UAAP,GAAoBkB,MAAM,CAACuB,QAA5B,IAAwC,CAAvD;IACA,IAAIO,MAAM,GAAGpC,WAAW,CAACqC,GAAZ,CAAgB,gBAAhB,CAAb;IACA,IAAIC,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASL,QAAT,IAAqBC,MAA9B;IACA,IAAIK,EAAE,GAAGF,IAAI,CAACG,GAAL,CAASP,QAAT,IAAqBC,MAA9B;IACA,IAAIO,WAAW,GAAGzC,SAAS,CAACY,UAAV,CAAqB,QAArB,CAAlB;IACA6B,WAAW,IAAI5C,MAAM,CAAC6C,IAAP,CAAY,QAAZ,EAAsBD,WAAtB,CAAf;;IAEA,KAAKE,YAAL,CAAkB7C,WAAlB,EAA+Bd,IAA/B,EAAqCC,GAArC;;IAEAY,MAAM,CAAC+C,WAAP,CAAmB,UAAnB,EAA+BpB,KAA/B,GAAuC,IAAAjB,YAAA,EAAO;MAC5CkB,CAAC,EAAErB,MAAM,CAACqB,CAAP,IAAYvB,aAAa,CAACiC,GAAd,CAAkB,OAAlB,IAA6BjC,aAAa,CAACiC,GAAd,CAAkB,WAAlB,KAAkC,CAA/D,GAAmE,CAA/E;IADyC,CAAP,EAEpC,IAAA3B,gCAAA,EAAsBN,aAAa,CAACC,QAAd,CAAuB,WAAvB,CAAtB,EAA2DC,MAA3D,CAFoC,CAAvC;IAGA,IAAAG,YAAA,EAAOV,MAAM,CAAC+C,WAAP,CAAmB,QAAnB,CAAP,EAAqC;MACnCC,CAAC,EAAET,EADgC;MAEnCU,CAAC,EAAEP,EAFgC;MAGnCf,KAAK,EAAE,IAAAhB,gCAAA,EAAsBR,SAAS,CAACG,QAAV,CAAmB,CAAC,QAAD,EAAW,WAAX,CAAnB,CAAtB,EAAmEC,MAAnE;IAH4B,CAArC;IAKA,IAAAG,YAAA,EAAOV,MAAM,CAAC+C,WAAP,CAAmB,MAAnB,CAAP,EAAmC;MACjCpB,KAAK,EAAE,IAAAhB,gCAAA,EAAsBR,SAAS,CAACG,QAAV,CAAmB,CAAC,MAAD,EAAS,WAAT,CAAnB,CAAtB,EAAiEC,MAAjE;IAD0B,CAAnC;IAGA,IAAI2C,SAAS,GAAGlD,MAAM,CAACmD,gBAAP,EAAhB;IACA,IAAIC,SAAS,GAAGpD,MAAM,CAACqD,cAAP,EAAhB;IACAH,SAAS,IAAI,IAAAxC,YAAA,EAAOwC,SAAS,CAACH,WAAV,CAAsB,QAAtB,CAAP,EAAwC;MACnDC,CAAC,EAAET,EADgD;MAEnDU,CAAC,EAAEP;IAFgD,CAAxC,CAAb,CA7F4E,CAgGxE;;IAEJ,IAAAhC,YAAA,EAAO0C,SAAS,CAACL,WAAV,CAAsB,QAAtB,CAAP,EAAwC;MACtCC,CAAC,EAAET,EADmC;MAEtCU,CAAC,EAAEP;IAFmC,CAAxC;IAIA,IAAAY,2BAAA,EAAoB,IAApB,EAA0BjD,aAAa,CAACiC,GAAd,CAAkB,OAAlB,CAA1B,EAAsDjC,aAAa,CAACiC,GAAd,CAAkB,WAAlB,CAAtD,EAAsFjC,aAAa,CAACiC,GAAd,CAAkB,UAAlB,CAAtF;EACD,CAvGD;;EAyGAtD,QAAQ,CAACc,SAAT,CAAmBgD,YAAnB,GAAkC,UAAU7C,WAAV,EAAuBd,IAAvB,EAA6BC,GAA7B,EAAkC;IAClE,IAAIY,MAAM,GAAG,IAAb;IACA,IAAIG,SAAS,GAAGhB,IAAI,CAACiB,YAAL,CAAkBhB,GAAlB,CAAhB;IACA,IAAImE,cAAc,GAAGpD,SAAS,CAACG,QAAV,CAAmB,WAAnB,CAArB;IACA,IAAIkD,KAAK,GAAGrE,IAAI,CAAC+C,aAAL,CAAmB9C,GAAnB,EAAwB,OAAxB,CAAZ;IACA,IAAIqE,WAAW,GAAGD,KAAK,IAAIA,KAAK,CAACE,IAAjC;IACA,IAAIC,aAAa,GAAGH,KAAK,IAAIA,KAAK,CAACI,OAAnC;IACA,IAAAC,yBAAA,EAAc7D,MAAd,EAAsB,IAAA8D,gCAAA,EAAqB3D,SAArB,CAAtB,EAAuD;MACrD4D,YAAY,EAAE5E,IAAI,CAACe,SADkC;MAErD8D,cAAc,EAAE5E,GAFqC;MAGrD6E,YAAY,EAAER,WAHuC;MAIrDS,cAAc,EAAEP,aAJqC;MAKrDQ,WAAW,EAAElE,WAAW,CAACmE,iBAAZ,CAA8BhF,GAA9B,EAAmC,QAAnC,KAAgDD,IAAI,CAACkF,OAAL,CAAajF,GAAb;IALR,CAAvD;IAOA,IAAIgE,SAAS,GAAGpD,MAAM,CAACqD,cAAP,EAAhB,CAdkE,CAczB;;IAEzCrD,MAAM,CAACsE,aAAP,CAAqB;MACnB;MACAC,QAAQ,EAAE,IAFS;MAGnBC,QAAQ,EAAE;IAHS,CAArB,EAhBkE,CAoB9D;IACJ;;IAEApB,SAAS,CAACP,IAAV,CAAe;MACbrD,EAAE,EAAE;IADS,CAAf;IAGA,IAAIiF,aAAa,GAAGxE,WAAW,CAACqC,GAAZ,CAAgB,CAAC,OAAD,EAAU,UAAV,CAAhB,CAApB;;IAEA,IAAImC,aAAa,KAAK,SAAlB,IAA+BA,aAAa,KAAK,OAArD,EAA8D;MAC5DzE,MAAM,CAAC0E,mBAAP;IACD,CAFD,MAEO;MACL,IAAIC,QAAQ,GAAG,KAAKxB,gBAAL,EAAf;;MAEA,IAAI,CAACwB,QAAL,EAAe;QACbA,QAAQ,GAAG,IAAIjF,OAAO,CAACkF,QAAZ,EAAX;QACA,KAAKC,gBAAL,CAAsBF,QAAtB;MACD,CANI,CAMH;;;MAGF,IAAAG,mCAAA,EAAkB,IAAlB,EAAwB,IAAAC,0CAAA,EAAyB5E,SAAzB,CAAxB,EAA6D;QAC3D6E,MAAM,EAAEvB,WADmD;QAE3DG,OAAO,EAAE,IAAAqB,eAAA,EAAU1B,cAAc,CAACjB,GAAf,CAAmB,CAAC,WAAD,EAAc,SAAd,CAAnB,CAAV,EAAwDqB,aAAxD,EAAuE,CAAvE;MAFkD,CAA7D;IAID;EACF,CA5CD;;EA8CA,OAAO3E,QAAP;AACD,CAxKD,CAwKEU,OAAO,CAACwF,MAxKV,CAFA,C,CA0KmB;;;AAGnB,IAAIC,OAAO;AACX;AACA,UAAUlG,MAAV,EAAkB;EAChB,IAAAC,gBAAA,EAAUiG,OAAV,EAAmBlG,MAAnB;;EAEA,SAASkG,OAAT,GAAmB;IACjB,IAAI7F,KAAK,GAAGL,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACmG,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;IAEA/F,KAAK,CAACgG,qBAAN,GAA8B,IAA9B;IACA,OAAOhG,KAAP;EACD;;EAED6F,OAAO,CAACrF,SAAR,CAAkByF,MAAlB,GAA2B,UAAUtF,WAAV,EAAuBe,OAAvB,EAAgCwE,GAAhC,EAAqCC,OAArC,EAA8C;IACvE,IAAItG,IAAI,GAAGc,WAAW,CAACyF,OAAZ,EAAX;IACA,IAAIC,OAAO,GAAG,KAAKC,KAAnB;IACA,IAAIC,KAAK,GAAG,KAAKA,KAAjB;IACA,IAAIxG,UAAJ,CAJuE,CAIvD;;IAEhB,IAAI,CAACsG,OAAD,IAAYxG,IAAI,CAAC2G,KAAL,KAAe,CAA/B,EAAkC;MAChC,IAAInE,KAAK,GAAGxC,IAAI,CAACqB,aAAL,CAAmB,CAAnB,CAAZ;;MAEA,KAAK,IAAIuF,CAAC,GAAG,CAAb,EAAgBnF,KAAK,CAACe,KAAK,IAAIA,KAAK,CAACtC,UAAhB,CAAL,IAAoC0G,CAAC,GAAG5G,IAAI,CAAC2G,KAAL,EAAxD,EAAsE,EAAEC,CAAxE,EAA2E;QACzEpE,KAAK,GAAGxC,IAAI,CAACqB,aAAL,CAAmBuF,CAAnB,CAAR;MACD;;MAED,IAAIpE,KAAJ,EAAW;QACTtC,UAAU,GAAGsC,KAAK,CAACtC,UAAnB;MACD;IACF,CAhBsE,CAgBrE;;;IAGF,IAAI,KAAK2G,kBAAT,EAA6B;MAC3BH,KAAK,CAACI,MAAN,CAAa,KAAKD,kBAAlB;IACD,CArBsE,CAqBrE;;;IAGF,IAAI7G,IAAI,CAAC2G,KAAL,OAAiB,CAAjB,IAAsB7F,WAAW,CAACqC,GAAZ,CAAgB,iBAAhB,CAA1B,EAA8D;MAC5D,IAAItC,MAAM,GAAG,IAAIN,OAAO,CAACwF,MAAZ,CAAmB;QAC9BvD,KAAK,EAAE,IAAAuE,4BAAA,EAAkBjG,WAAlB,EAA+BuF,GAA/B;MADuB,CAAnB,CAAb;MAGAxF,MAAM,CAACiC,QAAP,CAAgBhC,WAAW,CAACK,QAAZ,CAAqB,kBAArB,EAAyC6F,YAAzC,EAAhB;MACA,KAAKH,kBAAL,GAA0BhG,MAA1B;MACA6F,KAAK,CAACO,GAAN,CAAUpG,MAAV;IACD;;IAEDb,IAAI,CAACkH,IAAL,CAAUV,OAAV,EAAmBS,GAAnB,CAAuB,UAAUhH,GAAV,EAAe;MACpC,IAAIkH,QAAQ,GAAG,IAAItH,QAAJ,CAAaG,IAAb,EAAmBC,GAAnB,EAAwBC,UAAxB,CAAf;MACAF,IAAI,CAACoH,gBAAL,CAAsBnH,GAAtB,EAA2BkH,QAA3B;MACAT,KAAK,CAACO,GAAN,CAAUE,QAAV;IACD,CAJD,EAIGE,MAJH,CAIU,UAAUC,MAAV,EAAkBC,MAAlB,EAA0B;MAClC,IAAIJ,QAAQ,GAAGX,OAAO,CAACgB,gBAAR,CAAyBD,MAAzB,CAAf;MACAJ,QAAQ,CAACzG,UAAT,CAAoBV,IAApB,EAA0BsH,MAA1B,EAAkCpH,UAAlC;MACAiH,QAAQ,CAACM,GAAT,CAAa,OAAb;MACAf,KAAK,CAACO,GAAN,CAAUE,QAAV;MACAnH,IAAI,CAACoH,gBAAL,CAAsBE,MAAtB,EAA8BH,QAA9B;IACD,CAVD,EAUGL,MAVH,CAUU,UAAU7G,GAAV,EAAe;MACvB,IAAIkH,QAAQ,GAAGX,OAAO,CAACgB,gBAAR,CAAyBvH,GAAzB,CAAf;MACAM,OAAO,CAACmH,wBAAR,CAAiCP,QAAjC,EAA2CrG,WAA3C,EAAwDb,GAAxD;IACD,CAbD,EAaG0H,OAbH;IAcA,IAAAC,oBAAA,EAAY9G,WAAZ,EA/CuE,CA+C7C;;IAE1B,IAAIA,WAAW,CAACqC,GAAZ,CAAgB,qBAAhB,MAA2C,WAA/C,EAA4D;MAC1D,KAAKsD,KAAL,GAAazG,IAAb;IACD;EACF,CApDD;;EAsDAgG,OAAO,CAACrF,SAAR,CAAkBkH,OAAlB,GAA4B,YAAY,CAAE,CAA1C;;EAEA7B,OAAO,CAACrF,SAAR,CAAkBmH,YAAlB,GAAiC,UAAUC,KAAV,EAAiBjH,WAAjB,EAA8B;IAC7D,IAAId,IAAI,GAAGc,WAAW,CAACyF,OAAZ,EAAX;IACA,IAAIyB,UAAU,GAAGhI,IAAI,CAACqB,aAAL,CAAmB,CAAnB,CAAjB;;IAEA,IAAI2G,UAAJ,EAAgB;MACd,IAAI5E,EAAE,GAAG2E,KAAK,CAAC,CAAD,CAAL,GAAWC,UAAU,CAAC3F,EAA/B;MACA,IAAIkB,EAAE,GAAGwE,KAAK,CAAC,CAAD,CAAL,GAAWC,UAAU,CAACzF,EAA/B;MACA,IAAI0F,MAAM,GAAG5E,IAAI,CAAC6E,IAAL,CAAU9E,EAAE,GAAGA,EAAL,GAAUG,EAAE,GAAGA,EAAzB,CAAb;MACA,OAAO0E,MAAM,IAAID,UAAU,CAACvF,CAArB,IAA0BwF,MAAM,IAAID,UAAU,CAACtF,EAAtD;IACD;EACF,CAVD;;EAYAsD,OAAO,CAACmC,IAAR,GAAe,KAAf;EACA,OAAOnC,OAAP;AACD,CAhFD,CAgFEoC,cAhFF,CAFA;;eAoFepC,O"},"metadata":{},"sourceType":"script"}