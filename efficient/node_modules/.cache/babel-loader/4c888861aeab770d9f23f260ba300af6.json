{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _tslib = require(\"tslib\");\n\nvar _BaseAxisPointer = _interopRequireDefault(require(\"./BaseAxisPointer.js\"));\n\nvar viewHelper = _interopRequireWildcard(require(\"./viewHelper.js\"));\n\nvar cartesianAxisHelper = _interopRequireWildcard(require(\"../../coord/cartesian/cartesianAxisHelper.js\"));\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(CartesianAxisPointer, _super);\n\n  function CartesianAxisPointer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @override\n   */\n\n\n  CartesianAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption( // @ts-ignore\n    value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  };\n  /**\n   * @override\n   */\n\n\n  CartesianAxisPointer.prototype.getHandleTransform = function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    }); // @ts-ignore\n\n    layoutInfo.labelMargin = axisPointerModel.get(['handle', 'margin']);\n    var pos = viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo);\n    return {\n      x: pos[0],\n      y: pos[1],\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  };\n  /**\n   * @override\n   */\n\n\n  CartesianAxisPointer.prototype.updateHandleTransform = function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = [transform.x, transform.y];\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      x: currPosition[0],\n      y: currPosition[1],\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  };\n\n  return CartesianAxisPointer;\n}(_BaseAxisPointer.default);\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nvar _default = CartesianAxisPointer;\nexports.default = _default;","map":{"version":3,"names":["CartesianAxisPointer","_super","__extends","apply","arguments","prototype","makeElOption","elOption","value","axisModel","axisPointerModel","api","axis","grid","axisPointerType","get","otherExtent","getCartesian","getOtherAxis","getGlobalExtent","pixelValue","toGlobalCoord","dataToCoord","elStyle","viewHelper","buildElStyle","pointerOption","pointerShapeBuilder","style","graphicKey","type","pointer","layoutInfo","cartesianAxisHelper","layout","model","buildCartesianSingleLabelElOption","getHandleTransform","labelInside","labelMargin","pos","getTransformedPosition","x","y","rotation","labelDirection","Math","PI","updateHandleTransform","transform","delta","axisExtent","dimIndex","dim","currPosition","min","max","cursorOtherValue","cursorPoint","tooltipOptions","verticalAlign","align","tooltipOption","BaseAxisPointer","opt","index","line","targetShape","makeLineShape","getAxisDimIndex","subPixelOptimize","shape","shadow","bandWidth","getBandWidth","span","makeRectShape"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseAxisPointer from './BaseAxisPointer.js';\nimport * as viewHelper from './viewHelper.js';\nimport * as cartesianAxisHelper from '../../coord/cartesian/cartesianAxisHelper.js';\n\nvar CartesianAxisPointer =\n/** @class */\nfunction (_super) {\n  __extends(CartesianAxisPointer, _super);\n\n  function CartesianAxisPointer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @override\n   */\n\n\n  CartesianAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption( // @ts-ignore\n    value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  };\n  /**\n   * @override\n   */\n\n\n  CartesianAxisPointer.prototype.getHandleTransform = function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    }); // @ts-ignore\n\n    layoutInfo.labelMargin = axisPointerModel.get(['handle', 'margin']);\n    var pos = viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo);\n    return {\n      x: pos[0],\n      y: pos[1],\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  };\n  /**\n   * @override\n   */\n\n\n  CartesianAxisPointer.prototype.updateHandleTransform = function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = [transform.x, transform.y];\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      x: currPosition[0],\n      y: currPosition[1],\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  };\n\n  return CartesianAxisPointer;\n}(BaseAxisPointer);\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nexport default CartesianAxisPointer;"],"mappings":"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"},"metadata":{},"sourceType":"script"}