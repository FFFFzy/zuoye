{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCubicEasingFunc = createCubicEasingFunc;\n\nvar _curve = require(\"../core/curve.js\");\n\nvar _util = require(\"../core/util.js\");\n\nvar regexp = /cubic-bezier\\(([0-9,\\.e ]+)\\)/;\n\nfunction createCubicEasingFunc(cubicEasingStr) {\n  var cubic = cubicEasingStr && regexp.exec(cubicEasingStr);\n\n  if (cubic) {\n    var points = cubic[1].split(',');\n    var a_1 = +(0, _util.trim)(points[0]);\n    var b_1 = +(0, _util.trim)(points[1]);\n    var c_1 = +(0, _util.trim)(points[2]);\n    var d_1 = +(0, _util.trim)(points[3]);\n\n    if (isNaN(a_1 + b_1 + c_1 + d_1)) {\n      return;\n    }\n\n    var roots_1 = [];\n    return function (p) {\n      return p <= 0 ? 0 : p >= 1 ? 1 : (0, _curve.cubicRootAt)(0, a_1, c_1, 1, p, roots_1) && (0, _curve.cubicAt)(0, b_1, d_1, 1, roots_1[0]);\n    };\n  }\n}","map":{"version":3,"names":["regexp","createCubicEasingFunc","cubicEasingStr","cubic","exec","points","split","a_1","trim","b_1","c_1","d_1","isNaN","roots_1","p","cubicRootAt","cubicAt"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/zrender/lib/animation/cubicEasing.js"],"sourcesContent":["import { cubicAt, cubicRootAt } from '../core/curve.js';\nimport { trim } from '../core/util.js';\nvar regexp = /cubic-bezier\\(([0-9,\\.e ]+)\\)/;\nexport function createCubicEasingFunc(cubicEasingStr) {\n    var cubic = cubicEasingStr && regexp.exec(cubicEasingStr);\n    if (cubic) {\n        var points = cubic[1].split(',');\n        var a_1 = +trim(points[0]);\n        var b_1 = +trim(points[1]);\n        var c_1 = +trim(points[2]);\n        var d_1 = +trim(points[3]);\n        if (isNaN(a_1 + b_1 + c_1 + d_1)) {\n            return;\n        }\n        var roots_1 = [];\n        return function (p) {\n            return p <= 0\n                ? 0 : p >= 1\n                ? 1\n                : cubicRootAt(0, a_1, c_1, 1, p, roots_1) && cubicAt(0, b_1, d_1, 1, roots_1[0]);\n        };\n    }\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA,IAAIA,MAAM,GAAG,+BAAb;;AACO,SAASC,qBAAT,CAA+BC,cAA/B,EAA+C;EAClD,IAAIC,KAAK,GAAGD,cAAc,IAAIF,MAAM,CAACI,IAAP,CAAYF,cAAZ,CAA9B;;EACA,IAAIC,KAAJ,EAAW;IACP,IAAIE,MAAM,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASG,KAAT,CAAe,GAAf,CAAb;IACA,IAAIC,GAAG,GAAG,CAAC,IAAAC,UAAA,EAAKH,MAAM,CAAC,CAAD,CAAX,CAAX;IACA,IAAII,GAAG,GAAG,CAAC,IAAAD,UAAA,EAAKH,MAAM,CAAC,CAAD,CAAX,CAAX;IACA,IAAIK,GAAG,GAAG,CAAC,IAAAF,UAAA,EAAKH,MAAM,CAAC,CAAD,CAAX,CAAX;IACA,IAAIM,GAAG,GAAG,CAAC,IAAAH,UAAA,EAAKH,MAAM,CAAC,CAAD,CAAX,CAAX;;IACA,IAAIO,KAAK,CAACL,GAAG,GAAGE,GAAN,GAAYC,GAAZ,GAAkBC,GAAnB,CAAT,EAAkC;MAC9B;IACH;;IACD,IAAIE,OAAO,GAAG,EAAd;IACA,OAAO,UAAUC,CAAV,EAAa;MAChB,OAAOA,CAAC,IAAI,CAAL,GACD,CADC,GACGA,CAAC,IAAI,CAAL,GACJ,CADI,GAEJ,IAAAC,kBAAA,EAAY,CAAZ,EAAeR,GAAf,EAAoBG,GAApB,EAAyB,CAAzB,EAA4BI,CAA5B,EAA+BD,OAA/B,KAA2C,IAAAG,cAAA,EAAQ,CAAR,EAAWP,GAAX,EAAgBE,GAAhB,EAAqB,CAArB,EAAwBE,OAAO,CAAC,CAAD,CAA/B,CAHjD;IAIH,CALD;EAMH;AACJ"},"metadata":{},"sourceType":"script"}