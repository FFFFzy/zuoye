{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/esnext.typed-array.find-last.js\");\n\nrequire(\"core-js/modules/esnext.typed-array.find-last-index.js\");\n\nvar _tslib = require(\"tslib\");\n\nvar graphic = _interopRequireWildcard(require(\"../../util/graphic.js\"));\n\nvar lineContain = _interopRequireWildcard(require(\"zrender/lib/contain/line.js\"));\n\nvar quadraticContain = _interopRequireWildcard(require(\"zrender/lib/contain/quadratic.js\"));\n\nvar _innerStore = require(\"../../util/innerStore.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\nvar LargeLinesPathShape =\n/** @class */\nfunction () {\n  function LargeLinesPathShape() {\n    this.polyline = false;\n    this.curveness = 0;\n    this.segs = [];\n  }\n\n  return LargeLinesPathShape;\n}();\n\nvar LargeLinesPath =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(LargeLinesPath, _super);\n\n  function LargeLinesPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this._off = 0;\n    _this.hoverDataIdx = -1;\n    return _this;\n  }\n\n  LargeLinesPath.prototype.reset = function () {\n    this.notClear = false;\n    this._off = 0;\n  };\n\n  LargeLinesPath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  LargeLinesPath.prototype.getDefaultShape = function () {\n    return new LargeLinesPathShape();\n  };\n\n  LargeLinesPath.prototype.buildPath = function (ctx, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n    var i;\n\n    if (shape.polyline) {\n      for (i = this._off; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          ctx.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            ctx.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (i = this._off; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        ctx.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          ctx.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          ctx.lineTo(x1, y1);\n        }\n      }\n    }\n\n    if (this.incremental) {\n      this._off = i;\n      this.notClear = true;\n    }\n  };\n\n  LargeLinesPath.prototype.findDataIndex = function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n    var lineWidth = this.style.lineWidth;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  };\n\n  LargeLinesPath.prototype.contain = function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      // Cache found data index.\n      var dataIdx = this.hoverDataIdx = this.findDataIndex(x, y);\n      return dataIdx >= 0;\n    }\n\n    this.hoverDataIdx = -1;\n    return false;\n  };\n\n  LargeLinesPath.prototype.getBoundingRect = function () {\n    // Ignore stroke for large symbol draw.\n    var rect = this._rect;\n\n    if (!rect) {\n      var shape = this.shape;\n      var points = shape.segs;\n      var minX = Infinity;\n      var minY = Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n\n      for (var i = 0; i < points.length;) {\n        var x = points[i++];\n        var y = points[i++];\n        minX = Math.min(x, minX);\n        maxX = Math.max(x, maxX);\n        minY = Math.min(y, minY);\n        maxY = Math.max(y, maxY);\n      }\n\n      rect = this._rect = new graphic.BoundingRect(minX, minY, maxX, maxY);\n    }\n\n    return rect;\n  };\n\n  return LargeLinesPath;\n}(graphic.Path);\n\nvar LargeLineDraw =\n/** @class */\nfunction () {\n  function LargeLineDraw() {\n    this.group = new graphic.Group();\n  }\n  /**\n   * Update symbols draw by new data\n   */\n\n\n  LargeLineDraw.prototype.updateData = function (data) {\n    this._clear();\n\n    var lineEl = this._create();\n\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n\n    this._setCommon(lineEl, data);\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this.group.removeAll();\n\n    this._clear();\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalUpdate = function (taskParams, data) {\n    var lastAdded = this._newAdded[0];\n    var linePoints = data.getLayout('linesPoints');\n    var oldSegs = lastAdded && lastAdded.shape.segs; // Merging the exists. Each element has 1e4 points.\n    // Consider the performance balance between too much elements and too much points in one shape(may affect hover optimization)\n\n    if (oldSegs && oldSegs.length < 2e4) {\n      var oldLen = oldSegs.length;\n      var newSegs = new Float32Array(oldLen + linePoints.length); // Concat two array\n\n      newSegs.set(oldSegs);\n      newSegs.set(linePoints, oldLen);\n      lastAdded.setShape({\n        segs: newSegs\n      });\n    } else {\n      // Clear\n      this._newAdded = [];\n\n      var lineEl = this._create();\n\n      lineEl.incremental = true;\n      lineEl.setShape({\n        segs: linePoints\n      });\n\n      this._setCommon(lineEl, data);\n\n      lineEl.__startIndex = taskParams.start;\n    }\n  };\n  /**\n   * @override\n   */\n\n\n  LargeLineDraw.prototype.remove = function () {\n    this._clear();\n  };\n\n  LargeLineDraw.prototype.eachRendered = function (cb) {\n    this._newAdded[0] && cb(this._newAdded[0]);\n  };\n\n  LargeLineDraw.prototype._create = function () {\n    var lineEl = new LargeLinesPath({\n      cursor: 'default'\n    });\n\n    this._newAdded.push(lineEl);\n\n    this.group.add(lineEl);\n    return lineEl;\n  };\n\n  LargeLineDraw.prototype._setCommon = function (lineEl, data, isIncremental) {\n    var hostModel = data.hostModel;\n    lineEl.setShape({\n      polyline: hostModel.get('polyline'),\n      curveness: hostModel.get(['lineStyle', 'curveness'])\n    });\n    lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n    lineEl.style.strokeNoScale = true;\n    var style = data.getVisual('style');\n\n    if (style && style.stroke) {\n      lineEl.setStyle('stroke', style.stroke);\n    }\n\n    lineEl.setStyle('fill', null);\n    var ecData = (0, _innerStore.getECData)(lineEl); // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n\n    ecData.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      ecData.dataIndex = null;\n      var dataIndex = lineEl.hoverDataIdx;\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        ecData.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  };\n\n  ;\n\n  LargeLineDraw.prototype._clear = function () {\n    this._newAdded = [];\n    this.group.removeAll();\n  };\n\n  ;\n  return LargeLineDraw;\n}();\n\nvar _default = LargeLineDraw;\nexports.default = _default;","map":{"version":3,"names":["LargeLinesPathShape","polyline","curveness","segs","LargeLinesPath","_super","__extends","opts","_this","call","_off","hoverDataIdx","prototype","reset","notClear","getDefaultStyle","stroke","fill","getDefaultShape","buildPath","ctx","shape","i","length","count","moveTo","k","lineTo","x0","y0","x1","y1","x2","y2","quadraticCurveTo","incremental","findDataIndex","x","y","lineWidth","style","dataIndex","lineContain","containStroke","quadraticContain","contain","localPos","transformCoordToLocal","rect","getBoundingRect","dataIdx","_rect","points","minX","Infinity","minY","maxX","maxY","Math","min","max","graphic","BoundingRect","Path","LargeLineDraw","group","Group","updateData","data","_clear","lineEl","_create","setShape","getLayout","_setCommon","incrementalPrepareUpdate","removeAll","incrementalUpdate","taskParams","lastAdded","_newAdded","linePoints","oldSegs","oldLen","newSegs","Float32Array","set","__startIndex","start","remove","eachRendered","cb","cursor","push","add","isIncremental","hostModel","get","useStyle","getModel","getLineStyle","strokeNoScale","getVisual","setStyle","ecData","getECData","seriesIndex","on","e"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/chart/helper/LargeLineDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // TODO Batch by color\n\nimport * as graphic from '../../util/graphic.js';\nimport * as lineContain from 'zrender/lib/contain/line.js';\nimport * as quadraticContain from 'zrender/lib/contain/quadratic.js';\nimport { getECData } from '../../util/innerStore.js';\n\nvar LargeLinesPathShape =\n/** @class */\nfunction () {\n  function LargeLinesPathShape() {\n    this.polyline = false;\n    this.curveness = 0;\n    this.segs = [];\n  }\n\n  return LargeLinesPathShape;\n}();\n\nvar LargeLinesPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeLinesPath, _super);\n\n  function LargeLinesPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this._off = 0;\n    _this.hoverDataIdx = -1;\n    return _this;\n  }\n\n  LargeLinesPath.prototype.reset = function () {\n    this.notClear = false;\n    this._off = 0;\n  };\n\n  LargeLinesPath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  LargeLinesPath.prototype.getDefaultShape = function () {\n    return new LargeLinesPathShape();\n  };\n\n  LargeLinesPath.prototype.buildPath = function (ctx, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n    var i;\n\n    if (shape.polyline) {\n      for (i = this._off; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          ctx.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            ctx.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (i = this._off; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        ctx.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          ctx.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          ctx.lineTo(x1, y1);\n        }\n      }\n    }\n\n    if (this.incremental) {\n      this._off = i;\n      this.notClear = true;\n    }\n  };\n\n  LargeLinesPath.prototype.findDataIndex = function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n    var lineWidth = this.style.lineWidth;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  };\n\n  LargeLinesPath.prototype.contain = function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      // Cache found data index.\n      var dataIdx = this.hoverDataIdx = this.findDataIndex(x, y);\n      return dataIdx >= 0;\n    }\n\n    this.hoverDataIdx = -1;\n    return false;\n  };\n\n  LargeLinesPath.prototype.getBoundingRect = function () {\n    // Ignore stroke for large symbol draw.\n    var rect = this._rect;\n\n    if (!rect) {\n      var shape = this.shape;\n      var points = shape.segs;\n      var minX = Infinity;\n      var minY = Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n\n      for (var i = 0; i < points.length;) {\n        var x = points[i++];\n        var y = points[i++];\n        minX = Math.min(x, minX);\n        maxX = Math.max(x, maxX);\n        minY = Math.min(y, minY);\n        maxY = Math.max(y, maxY);\n      }\n\n      rect = this._rect = new graphic.BoundingRect(minX, minY, maxX, maxY);\n    }\n\n    return rect;\n  };\n\n  return LargeLinesPath;\n}(graphic.Path);\n\nvar LargeLineDraw =\n/** @class */\nfunction () {\n  function LargeLineDraw() {\n    this.group = new graphic.Group();\n  }\n  /**\n   * Update symbols draw by new data\n   */\n\n\n  LargeLineDraw.prototype.updateData = function (data) {\n    this._clear();\n\n    var lineEl = this._create();\n\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n\n    this._setCommon(lineEl, data);\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this.group.removeAll();\n\n    this._clear();\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalUpdate = function (taskParams, data) {\n    var lastAdded = this._newAdded[0];\n    var linePoints = data.getLayout('linesPoints');\n    var oldSegs = lastAdded && lastAdded.shape.segs; // Merging the exists. Each element has 1e4 points.\n    // Consider the performance balance between too much elements and too much points in one shape(may affect hover optimization)\n\n    if (oldSegs && oldSegs.length < 2e4) {\n      var oldLen = oldSegs.length;\n      var newSegs = new Float32Array(oldLen + linePoints.length); // Concat two array\n\n      newSegs.set(oldSegs);\n      newSegs.set(linePoints, oldLen);\n      lastAdded.setShape({\n        segs: newSegs\n      });\n    } else {\n      // Clear\n      this._newAdded = [];\n\n      var lineEl = this._create();\n\n      lineEl.incremental = true;\n      lineEl.setShape({\n        segs: linePoints\n      });\n\n      this._setCommon(lineEl, data);\n\n      lineEl.__startIndex = taskParams.start;\n    }\n  };\n  /**\n   * @override\n   */\n\n\n  LargeLineDraw.prototype.remove = function () {\n    this._clear();\n  };\n\n  LargeLineDraw.prototype.eachRendered = function (cb) {\n    this._newAdded[0] && cb(this._newAdded[0]);\n  };\n\n  LargeLineDraw.prototype._create = function () {\n    var lineEl = new LargeLinesPath({\n      cursor: 'default'\n    });\n\n    this._newAdded.push(lineEl);\n\n    this.group.add(lineEl);\n    return lineEl;\n  };\n\n  LargeLineDraw.prototype._setCommon = function (lineEl, data, isIncremental) {\n    var hostModel = data.hostModel;\n    lineEl.setShape({\n      polyline: hostModel.get('polyline'),\n      curveness: hostModel.get(['lineStyle', 'curveness'])\n    });\n    lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n    lineEl.style.strokeNoScale = true;\n    var style = data.getVisual('style');\n\n    if (style && style.stroke) {\n      lineEl.setStyle('stroke', style.stroke);\n    }\n\n    lineEl.setStyle('fill', null);\n    var ecData = getECData(lineEl); // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n\n    ecData.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      ecData.dataIndex = null;\n      var dataIndex = lineEl.hoverDataIdx;\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        ecData.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  };\n\n  ;\n\n  LargeLineDraw.prototype._clear = function () {\n    this._newAdded = [];\n    this.group.removeAll();\n  };\n\n  ;\n  return LargeLineDraw;\n}();\n\nexport default LargeLineDraw;"],"mappings":"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"},"metadata":{},"sourceType":"script"}