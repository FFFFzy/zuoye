{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _getCurrentScriptSource = _interopRequireDefault(require(\"./getCurrentScriptSource.js\"));\n\n/**\n * @param {string} resourceQuery\n * @returns {{ [key: string]: string | boolean }}\n */\nfunction parseURL(resourceQuery) {\n  /** @type {{ [key: string]: string }} */\n  var options = {};\n\n  if (typeof resourceQuery === \"string\" && resourceQuery !== \"\") {\n    var searchParams = resourceQuery.slice(1).split(\"&\");\n\n    for (var i = 0; i < searchParams.length; i++) {\n      var pair = searchParams[i].split(\"=\");\n      options[pair[0]] = decodeURIComponent(pair[1]);\n    }\n  } else {\n    // Else, get the url from the <script> this file was called with.\n    var scriptSource = (0, _getCurrentScriptSource.default)();\n    var scriptSourceURL;\n\n    try {\n      // The placeholder `baseURL` with `window.location.href`,\n      // is to allow parsing of path-relative or protocol-relative URLs,\n      // and will have no effect if `scriptSource` is a fully valid URL.\n      scriptSourceURL = new URL(scriptSource, self.location.href);\n    } catch (error) {// URL parsing failed, do nothing.\n      // We will still proceed to see if we can recover using `resourceQuery`\n    }\n\n    if (scriptSourceURL) {\n      options = scriptSourceURL;\n      options.fromCurrentScript = true;\n    }\n  }\n\n  return options;\n}\n\nvar _default = parseURL;\nexports.default = _default;","map":{"version":3,"names":["parseURL","resourceQuery","options","searchParams","slice","split","i","length","pair","decodeURIComponent","scriptSource","getCurrentScriptSource","scriptSourceURL","URL","self","location","href","error","fromCurrentScript"],"sources":["C:/Users/Z/Desktop/efficient/efficient/node_modules/webpack-dev-server/client/utils/parseURL.js"],"sourcesContent":["import getCurrentScriptSource from \"./getCurrentScriptSource.js\";\n/**\n * @param {string} resourceQuery\n * @returns {{ [key: string]: string | boolean }}\n */\n\nfunction parseURL(resourceQuery) {\n  /** @type {{ [key: string]: string }} */\n  var options = {};\n\n  if (typeof resourceQuery === \"string\" && resourceQuery !== \"\") {\n    var searchParams = resourceQuery.slice(1).split(\"&\");\n\n    for (var i = 0; i < searchParams.length; i++) {\n      var pair = searchParams[i].split(\"=\");\n      options[pair[0]] = decodeURIComponent(pair[1]);\n    }\n  } else {\n    // Else, get the url from the <script> this file was called with.\n    var scriptSource = getCurrentScriptSource();\n    var scriptSourceURL;\n\n    try {\n      // The placeholder `baseURL` with `window.location.href`,\n      // is to allow parsing of path-relative or protocol-relative URLs,\n      // and will have no effect if `scriptSource` is a fully valid URL.\n      scriptSourceURL = new URL(scriptSource, self.location.href);\n    } catch (error) {// URL parsing failed, do nothing.\n      // We will still proceed to see if we can recover using `resourceQuery`\n    }\n\n    if (scriptSourceURL) {\n      options = scriptSourceURL;\n      options.fromCurrentScript = true;\n    }\n  }\n\n  return options;\n}\n\nexport default parseURL;"],"mappings":";;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,CAAkBC,aAAlB,EAAiC;EAC/B;EACA,IAAIC,OAAO,GAAG,EAAd;;EAEA,IAAI,OAAOD,aAAP,KAAyB,QAAzB,IAAqCA,aAAa,KAAK,EAA3D,EAA+D;IAC7D,IAAIE,YAAY,GAAGF,aAAa,CAACG,KAAd,CAAoB,CAApB,EAAuBC,KAAvB,CAA6B,GAA7B,CAAnB;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAAY,CAACI,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;MAC5C,IAAIE,IAAI,GAAGL,YAAY,CAACG,CAAD,CAAZ,CAAgBD,KAAhB,CAAsB,GAAtB,CAAX;MACAH,OAAO,CAACM,IAAI,CAAC,CAAD,CAAL,CAAP,GAAmBC,kBAAkB,CAACD,IAAI,CAAC,CAAD,CAAL,CAArC;IACD;EACF,CAPD,MAOO;IACL;IACA,IAAIE,YAAY,GAAG,IAAAC,+BAAA,GAAnB;IACA,IAAIC,eAAJ;;IAEA,IAAI;MACF;MACA;MACA;MACAA,eAAe,GAAG,IAAIC,GAAJ,CAAQH,YAAR,EAAsBI,IAAI,CAACC,QAAL,CAAcC,IAApC,CAAlB;IACD,CALD,CAKE,OAAOC,KAAP,EAAc,CAAC;MACf;IACD;;IAED,IAAIL,eAAJ,EAAqB;MACnBV,OAAO,GAAGU,eAAV;MACAV,OAAO,CAACgB,iBAAR,GAA4B,IAA5B;IACD;EACF;;EAED,OAAOhB,OAAP;AACD;;eAEcF,Q"},"metadata":{},"sourceType":"script"}