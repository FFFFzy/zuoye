{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createClipPath = createClipPath;\nexports.createGridClipPath = createGridClipPath;\nexports.createPolarClipPath = createPolarClipPath;\n\nvar graphic = _interopRequireWildcard(require(\"../../util/graphic.js\"));\n\nvar _number = require(\"../../util/number.js\");\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction createGridClipPath(cartesian, hasAnimation, seriesModel, done, during) {\n  var rect = cartesian.getArea();\n  var x = rect.x;\n  var y = rect.y;\n  var width = rect.width;\n  var height = rect.height;\n  var lineWidth = seriesModel.get(['lineStyle', 'width']) || 2; // Expand the clip path a bit to avoid the border is clipped and looks thinner\n\n  x -= lineWidth / 2;\n  y -= lineWidth / 2;\n  width += lineWidth;\n  height += lineWidth; // fix: https://github.com/apache/incubator-echarts/issues/11369\n\n  x = Math.floor(x);\n  width = Math.round(width);\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = baseAxis.isHorizontal();\n    var isAxisInversed = baseAxis.inverse;\n\n    if (isHorizontal) {\n      if (isAxisInversed) {\n        clipPath.shape.x += width;\n      }\n\n      clipPath.shape.width = 0;\n    } else {\n      if (!isAxisInversed) {\n        clipPath.shape.y += height;\n      }\n\n      clipPath.shape.height = 0;\n    }\n\n    var duringCb = (0, _util.isFunction)(during) ? function (percent) {\n      during(percent, clipPath);\n    } : null;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height,\n        x: x,\n        y: y\n      }\n    }, seriesModel, null, done, duringCb);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipPath(polar, hasAnimation, seriesModel) {\n  var sectorArea = polar.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  var r0 = (0, _number.round)(sectorArea.r0, 1);\n  var r = (0, _number.round)(sectorArea.r, 1);\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: (0, _number.round)(polar.cx, 1),\n      cy: (0, _number.round)(polar.cy, 1),\n      r0: r0,\n      r: r,\n      startAngle: sectorArea.startAngle,\n      endAngle: sectorArea.endAngle,\n      clockwise: sectorArea.clockwise\n    }\n  });\n\n  if (hasAnimation) {\n    var isRadial = polar.getBaseAxis().dim === 'angle';\n\n    if (isRadial) {\n      clipPath.shape.endAngle = sectorArea.startAngle;\n    } else {\n      clipPath.shape.r = r0;\n    }\n\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: sectorArea.endAngle,\n        r: r\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipPath(coordSys, hasAnimation, seriesModel, done, during) {\n  if (!coordSys) {\n    return null;\n  } else if (coordSys.type === 'polar') {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  } else if (coordSys.type === 'cartesian2d') {\n    return createGridClipPath(coordSys, hasAnimation, seriesModel, done, during);\n  }\n\n  return null;\n}","map":{"version":3,"names":["createGridClipPath","cartesian","hasAnimation","seriesModel","done","during","rect","getArea","x","y","width","height","lineWidth","get","Math","floor","round","clipPath","graphic","Rect","shape","baseAxis","getBaseAxis","isHorizontal","isAxisInversed","inverse","duringCb","isFunction","percent","initProps","createPolarClipPath","polar","sectorArea","r0","r","Sector","cx","cy","startAngle","endAngle","clockwise","isRadial","dim","createClipPath","coordSys","type"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/chart/helper/createClipPathFromCoordSys.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as graphic from '../../util/graphic.js';\nimport { round } from '../../util/number.js';\nimport { isFunction } from 'zrender/lib/core/util.js';\n\nfunction createGridClipPath(cartesian, hasAnimation, seriesModel, done, during) {\n  var rect = cartesian.getArea();\n  var x = rect.x;\n  var y = rect.y;\n  var width = rect.width;\n  var height = rect.height;\n  var lineWidth = seriesModel.get(['lineStyle', 'width']) || 2; // Expand the clip path a bit to avoid the border is clipped and looks thinner\n\n  x -= lineWidth / 2;\n  y -= lineWidth / 2;\n  width += lineWidth;\n  height += lineWidth; // fix: https://github.com/apache/incubator-echarts/issues/11369\n\n  x = Math.floor(x);\n  width = Math.round(width);\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = baseAxis.isHorizontal();\n    var isAxisInversed = baseAxis.inverse;\n\n    if (isHorizontal) {\n      if (isAxisInversed) {\n        clipPath.shape.x += width;\n      }\n\n      clipPath.shape.width = 0;\n    } else {\n      if (!isAxisInversed) {\n        clipPath.shape.y += height;\n      }\n\n      clipPath.shape.height = 0;\n    }\n\n    var duringCb = isFunction(during) ? function (percent) {\n      during(percent, clipPath);\n    } : null;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height,\n        x: x,\n        y: y\n      }\n    }, seriesModel, null, done, duringCb);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipPath(polar, hasAnimation, seriesModel) {\n  var sectorArea = polar.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  var r0 = round(sectorArea.r0, 1);\n  var r = round(sectorArea.r, 1);\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: r0,\n      r: r,\n      startAngle: sectorArea.startAngle,\n      endAngle: sectorArea.endAngle,\n      clockwise: sectorArea.clockwise\n    }\n  });\n\n  if (hasAnimation) {\n    var isRadial = polar.getBaseAxis().dim === 'angle';\n\n    if (isRadial) {\n      clipPath.shape.endAngle = sectorArea.startAngle;\n    } else {\n      clipPath.shape.r = r0;\n    }\n\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: sectorArea.endAngle,\n        r: r\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipPath(coordSys, hasAnimation, seriesModel, done, during) {\n  if (!coordSys) {\n    return null;\n  } else if (coordSys.type === 'polar') {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  } else if (coordSys.type === 'cartesian2d') {\n    return createGridClipPath(coordSys, hasAnimation, seriesModel, done, during);\n  }\n\n  return null;\n}\n\nexport { createGridClipPath, createPolarClipPath, createClipPath };"],"mappings":"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"},"metadata":{},"sourceType":"script"}