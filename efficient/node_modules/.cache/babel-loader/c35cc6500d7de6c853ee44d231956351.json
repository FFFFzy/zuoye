{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.containStroke = containStroke;\n\nvar _util = require(\"./util.js\");\n\nvar PI2 = Math.PI * 2;\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = (0, _util.normalizeRadian)(endAngle);\n    endAngle = (0, _util.normalizeRadian)(tmp);\n  } else {\n    startAngle = (0, _util.normalizeRadian)(startAngle);\n    endAngle = (0, _util.normalizeRadian)(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}","map":{"version":3,"names":["PI2","Math","PI","containStroke","cx","cy","r","startAngle","endAngle","anticlockwise","lineWidth","x","y","_l","d","sqrt","abs","tmp","normalizeRadian","angle","atan2"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/zrender/lib/contain/arc.js"],"sourcesContent":["import { normalizeRadian } from './util.js';\nvar PI2 = Math.PI * 2;\nexport function containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n    if (lineWidth === 0) {\n        return false;\n    }\n    var _l = lineWidth;\n    x -= cx;\n    y -= cy;\n    var d = Math.sqrt(x * x + y * y);\n    if ((d - _l > r) || (d + _l < r)) {\n        return false;\n    }\n    if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n        return true;\n    }\n    if (anticlockwise) {\n        var tmp = startAngle;\n        startAngle = normalizeRadian(endAngle);\n        endAngle = normalizeRadian(tmp);\n    }\n    else {\n        startAngle = normalizeRadian(startAngle);\n        endAngle = normalizeRadian(endAngle);\n    }\n    if (startAngle > endAngle) {\n        endAngle += PI2;\n    }\n    var angle = Math.atan2(y, x);\n    if (angle < 0) {\n        angle += PI2;\n    }\n    return (angle >= startAngle && angle <= endAngle)\n        || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n}\n"],"mappings":";;;;;;;AAAA;;AACA,IAAIA,GAAG,GAAGC,IAAI,CAACC,EAAL,GAAU,CAApB;;AACO,SAASC,aAAT,CAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,CAA/B,EAAkCC,UAAlC,EAA8CC,QAA9C,EAAwDC,aAAxD,EAAuEC,SAAvE,EAAkFC,CAAlF,EAAqFC,CAArF,EAAwF;EAC3F,IAAIF,SAAS,KAAK,CAAlB,EAAqB;IACjB,OAAO,KAAP;EACH;;EACD,IAAIG,EAAE,GAAGH,SAAT;EACAC,CAAC,IAAIP,EAAL;EACAQ,CAAC,IAAIP,EAAL;EACA,IAAIS,CAAC,GAAGb,IAAI,CAACc,IAAL,CAAUJ,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB,CAAR;;EACA,IAAKE,CAAC,GAAGD,EAAJ,GAASP,CAAV,IAAiBQ,CAAC,GAAGD,EAAJ,GAASP,CAA9B,EAAkC;IAC9B,OAAO,KAAP;EACH;;EACD,IAAIL,IAAI,CAACe,GAAL,CAAST,UAAU,GAAGC,QAAtB,IAAkCR,GAAlC,GAAwC,IAA5C,EAAkD;IAC9C,OAAO,IAAP;EACH;;EACD,IAAIS,aAAJ,EAAmB;IACf,IAAIQ,GAAG,GAAGV,UAAV;IACAA,UAAU,GAAG,IAAAW,qBAAA,EAAgBV,QAAhB,CAAb;IACAA,QAAQ,GAAG,IAAAU,qBAAA,EAAgBD,GAAhB,CAAX;EACH,CAJD,MAKK;IACDV,UAAU,GAAG,IAAAW,qBAAA,EAAgBX,UAAhB,CAAb;IACAC,QAAQ,GAAG,IAAAU,qBAAA,EAAgBV,QAAhB,CAAX;EACH;;EACD,IAAID,UAAU,GAAGC,QAAjB,EAA2B;IACvBA,QAAQ,IAAIR,GAAZ;EACH;;EACD,IAAImB,KAAK,GAAGlB,IAAI,CAACmB,KAAL,CAAWR,CAAX,EAAcD,CAAd,CAAZ;;EACA,IAAIQ,KAAK,GAAG,CAAZ,EAAe;IACXA,KAAK,IAAInB,GAAT;EACH;;EACD,OAAQmB,KAAK,IAAIZ,UAAT,IAAuBY,KAAK,IAAIX,QAAjC,IACCW,KAAK,GAAGnB,GAAR,IAAeO,UAAf,IAA6BY,KAAK,GAAGnB,GAAR,IAAeQ,QADpD;AAEH"},"metadata":{},"sourceType":"script"}