{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DATA_ZOOM_AXIS_DIMENSIONS = void 0;\nexports.collectReferCoordSysModelInfo = collectReferCoordSysModelInfo;\nexports.findEffectedDataZooms = findEffectedDataZooms;\nexports.getAxisIdPropName = getAxisIdPropName;\nexports.getAxisIndexPropName = getAxisIndexPropName;\nexports.getAxisMainType = getAxisMainType;\nexports.isCoordSupported = isCoordSupported;\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DATA_ZOOM_AXIS_DIMENSIONS = ['x', 'y', 'radius', 'angle', 'single']; // Supported coords.\n// FIXME: polar has been broken (but rarely used).\n\nexports.DATA_ZOOM_AXIS_DIMENSIONS = DATA_ZOOM_AXIS_DIMENSIONS;\nvar SERIES_COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\nfunction isCoordSupported(seriesModel) {\n  var coordType = seriesModel.get('coordinateSystem');\n  return (0, _util.indexOf)(SERIES_COORDS, coordType) >= 0;\n}\n\nfunction getAxisMainType(axisDim) {\n  if (process.env.NODE_ENV !== 'production') {\n    (0, _util.assert)(axisDim);\n  }\n\n  return axisDim + 'Axis';\n}\n\nfunction getAxisIndexPropName(axisDim) {\n  if (process.env.NODE_ENV !== 'production') {\n    (0, _util.assert)(axisDim);\n  }\n\n  return axisDim + 'AxisIndex';\n}\n\nfunction getAxisIdPropName(axisDim) {\n  if (process.env.NODE_ENV !== 'production') {\n    (0, _util.assert)(axisDim);\n  }\n\n  return axisDim + 'AxisId';\n}\n/**\n * If two dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * This function finds all linked dataZoomModels start from the given payload.\n */\n\n\nfunction findEffectedDataZooms(ecModel, payload) {\n  // Key: `DataZoomAxisDimension`\n  var axisRecords = (0, _util.createHashMap)();\n  var effectedModels = []; // Key: uid of dataZoomModel\n\n  var effectedModelMap = (0, _util.createHashMap)(); // Find the dataZooms specified by payload.\n\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (dataZoomModel) {\n    if (!effectedModelMap.get(dataZoomModel.uid)) {\n      addToEffected(dataZoomModel);\n    }\n  }); // Start from the given dataZoomModels, travel the graph to find\n  // all of the linked dataZoom models.\n\n  var foundNewLink;\n\n  do {\n    foundNewLink = false;\n    ecModel.eachComponent('dataZoom', processSingle);\n  } while (foundNewLink);\n\n  function processSingle(dataZoomModel) {\n    if (!effectedModelMap.get(dataZoomModel.uid) && isLinked(dataZoomModel)) {\n      addToEffected(dataZoomModel);\n      foundNewLink = true;\n    }\n  }\n\n  function addToEffected(dataZoom) {\n    effectedModelMap.set(dataZoom.uid, true);\n    effectedModels.push(dataZoom);\n    markAxisControlled(dataZoom);\n  }\n\n  function isLinked(dataZoomModel) {\n    var isLink = false;\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n      var axisIdxArr = axisRecords.get(axisDim);\n\n      if (axisIdxArr && axisIdxArr[axisIndex]) {\n        isLink = true;\n      }\n    });\n    return isLink;\n  }\n\n  function markAxisControlled(dataZoomModel) {\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n      (axisRecords.get(axisDim) || axisRecords.set(axisDim, []))[axisIndex] = true;\n    });\n  }\n\n  return effectedModels;\n}\n/**\n * Find the first target coordinate system.\n * Available after model built.\n *\n * @return Like {\n *                  grid: [\n *                      {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n *                      {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n *                      ...\n *                  ],  // cartesians must not be null/undefined.\n *                  polar: [\n *                      {model: coord0, axisModels: [axis4], coordIndex: 0},\n *                      ...\n *                  ],  // polars must not be null/undefined.\n *                  singleAxis: [\n *                      {model: coord0, axisModels: [], coordIndex: 0}\n *                  ]\n *              }\n */\n\n\nfunction collectReferCoordSysModelInfo(dataZoomModel) {\n  var ecModel = dataZoomModel.ecModel;\n  var coordSysInfoWrap = {\n    infoList: [],\n    infoMap: (0, _util.createHashMap)()\n  };\n  dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n    var axisModel = ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\n\n    if (!axisModel) {\n      return;\n    }\n\n    var coordSysModel = axisModel.getCoordSysModel();\n\n    if (!coordSysModel) {\n      return;\n    }\n\n    var coordSysUid = coordSysModel.uid;\n    var coordSysInfo = coordSysInfoWrap.infoMap.get(coordSysUid);\n\n    if (!coordSysInfo) {\n      coordSysInfo = {\n        model: coordSysModel,\n        axisModels: []\n      };\n      coordSysInfoWrap.infoList.push(coordSysInfo);\n      coordSysInfoWrap.infoMap.set(coordSysUid, coordSysInfo);\n    }\n\n    coordSysInfo.axisModels.push(axisModel);\n  });\n  return coordSysInfoWrap;\n}","map":{"version":3,"names":["DATA_ZOOM_AXIS_DIMENSIONS","SERIES_COORDS","isCoordSupported","seriesModel","coordType","get","indexOf","getAxisMainType","axisDim","process","env","NODE_ENV","assert","getAxisIndexPropName","getAxisIdPropName","findEffectedDataZooms","ecModel","payload","axisRecords","createHashMap","effectedModels","effectedModelMap","eachComponent","mainType","query","dataZoomModel","uid","addToEffected","foundNewLink","processSingle","isLinked","dataZoom","set","push","markAxisControlled","isLink","eachTargetAxis","axisIndex","axisIdxArr","collectReferCoordSysModelInfo","coordSysInfoWrap","infoList","infoMap","axisModel","getComponent","coordSysModel","getCoordSysModel","coordSysUid","coordSysInfo","model","axisModels"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/component/dataZoom/helper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { indexOf, createHashMap, assert } from 'zrender/lib/core/util.js';\nexport var DATA_ZOOM_AXIS_DIMENSIONS = ['x', 'y', 'radius', 'angle', 'single']; // Supported coords.\n// FIXME: polar has been broken (but rarely used).\n\nvar SERIES_COORDS = ['cartesian2d', 'polar', 'singleAxis'];\nexport function isCoordSupported(seriesModel) {\n  var coordType = seriesModel.get('coordinateSystem');\n  return indexOf(SERIES_COORDS, coordType) >= 0;\n}\nexport function getAxisMainType(axisDim) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(axisDim);\n  }\n\n  return axisDim + 'Axis';\n}\nexport function getAxisIndexPropName(axisDim) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(axisDim);\n  }\n\n  return axisDim + 'AxisIndex';\n}\nexport function getAxisIdPropName(axisDim) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(axisDim);\n  }\n\n  return axisDim + 'AxisId';\n}\n/**\n * If two dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * This function finds all linked dataZoomModels start from the given payload.\n */\n\nexport function findEffectedDataZooms(ecModel, payload) {\n  // Key: `DataZoomAxisDimension`\n  var axisRecords = createHashMap();\n  var effectedModels = []; // Key: uid of dataZoomModel\n\n  var effectedModelMap = createHashMap(); // Find the dataZooms specified by payload.\n\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (dataZoomModel) {\n    if (!effectedModelMap.get(dataZoomModel.uid)) {\n      addToEffected(dataZoomModel);\n    }\n  }); // Start from the given dataZoomModels, travel the graph to find\n  // all of the linked dataZoom models.\n\n  var foundNewLink;\n\n  do {\n    foundNewLink = false;\n    ecModel.eachComponent('dataZoom', processSingle);\n  } while (foundNewLink);\n\n  function processSingle(dataZoomModel) {\n    if (!effectedModelMap.get(dataZoomModel.uid) && isLinked(dataZoomModel)) {\n      addToEffected(dataZoomModel);\n      foundNewLink = true;\n    }\n  }\n\n  function addToEffected(dataZoom) {\n    effectedModelMap.set(dataZoom.uid, true);\n    effectedModels.push(dataZoom);\n    markAxisControlled(dataZoom);\n  }\n\n  function isLinked(dataZoomModel) {\n    var isLink = false;\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n      var axisIdxArr = axisRecords.get(axisDim);\n\n      if (axisIdxArr && axisIdxArr[axisIndex]) {\n        isLink = true;\n      }\n    });\n    return isLink;\n  }\n\n  function markAxisControlled(dataZoomModel) {\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n      (axisRecords.get(axisDim) || axisRecords.set(axisDim, []))[axisIndex] = true;\n    });\n  }\n\n  return effectedModels;\n}\n/**\n * Find the first target coordinate system.\n * Available after model built.\n *\n * @return Like {\n *                  grid: [\n *                      {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n *                      {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n *                      ...\n *                  ],  // cartesians must not be null/undefined.\n *                  polar: [\n *                      {model: coord0, axisModels: [axis4], coordIndex: 0},\n *                      ...\n *                  ],  // polars must not be null/undefined.\n *                  singleAxis: [\n *                      {model: coord0, axisModels: [], coordIndex: 0}\n *                  ]\n *              }\n */\n\nexport function collectReferCoordSysModelInfo(dataZoomModel) {\n  var ecModel = dataZoomModel.ecModel;\n  var coordSysInfoWrap = {\n    infoList: [],\n    infoMap: createHashMap()\n  };\n  dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n    var axisModel = ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\n\n    if (!axisModel) {\n      return;\n    }\n\n    var coordSysModel = axisModel.getCoordSysModel();\n\n    if (!coordSysModel) {\n      return;\n    }\n\n    var coordSysUid = coordSysModel.uid;\n    var coordSysInfo = coordSysInfoWrap.infoMap.get(coordSysUid);\n\n    if (!coordSysInfo) {\n      coordSysInfo = {\n        model: coordSysModel,\n        axisModels: []\n      };\n      coordSysInfoWrap.infoList.push(coordSysInfo);\n      coordSysInfoWrap.infoMap.set(coordSysUid, coordSysInfo);\n    }\n\n    coordSysInfo.axisModels.push(axisModel);\n  });\n  return coordSysInfoWrap;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}