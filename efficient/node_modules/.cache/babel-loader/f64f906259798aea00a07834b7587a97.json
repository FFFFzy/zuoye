{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = lineAnimationDiff;\n\nvar _helper = require(\"./helper.js\");\n\nvar _vendor = require(\"../../util/vendor.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction lineAnimationDiff(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // let newIdList = newData.mapArray(newData.getId);\n  // let oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = (0, _helper.prepareDataCoordInfo)(oldCoordSys, newData, oldValueOrigin); // const oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  var oldPoints = oldData.getLayout('points') || [];\n  var newPoints = newData.getLayout('points') || [];\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true;\n    var oldIdx2 = void 0;\n    var newIdx2 = void 0; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        oldIdx2 = diffItem.idx * 2;\n        newIdx2 = diffItem.idx1 * 2;\n        var currentX = oldPoints[oldIdx2];\n        var currentY = oldPoints[oldIdx2 + 1];\n        var nextX = newPoints[newIdx2];\n        var nextY = newPoints[newIdx2 + 1]; // If previous data is NaN, use next point directly\n\n        if (isNaN(currentX) || isNaN(currentY)) {\n          currentX = nextX;\n          currentY = nextY;\n        }\n\n        currPoints.push(currentX, currentY);\n        nextPoints.push(nextX, nextY);\n        currStackedPoints.push(oldStackedOnPoints[oldIdx2], oldStackedOnPoints[oldIdx2 + 1]);\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var newIdx = diffItem.idx;\n        var newDataDimsForPoint = newDataOldCoordInfo.dataDimsForPoint;\n        var oldPt = oldCoordSys.dataToPoint([newData.get(newDataDimsForPoint[0], newIdx), newData.get(newDataDimsForPoint[1], newIdx)]);\n        newIdx2 = newIdx * 2;\n        currPoints.push(oldPt[0], oldPt[1]);\n        nextPoints.push(newPoints[newIdx2], newPoints[newIdx2 + 1]);\n        var stackedOnPoint = (0, _helper.getStackedOnPoint)(newDataOldCoordInfo, oldCoordSys, newData, newIdx);\n        currStackedPoints.push(stackedOnPoint[0], stackedOnPoint[1]);\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\n        rawIndices.push(newData.getRawIndex(newIdx));\n        break;\n\n      case '-':\n        pointAdded = false;\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var len = currPoints.length;\n  var sortedCurrPoints = (0, _vendor.createFloat32Array)(len);\n  var sortedNextPoints = (0, _vendor.createFloat32Array)(len);\n  var sortedCurrStackedPoints = (0, _vendor.createFloat32Array)(len);\n  var sortedNextStackedPoints = (0, _vendor.createFloat32Array)(len);\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    var i2 = i * 2;\n    var idx2 = idx * 2;\n    sortedCurrPoints[i2] = currPoints[idx2];\n    sortedCurrPoints[i2 + 1] = currPoints[idx2 + 1];\n    sortedNextPoints[i2] = nextPoints[idx2];\n    sortedNextPoints[i2 + 1] = nextPoints[idx2 + 1];\n    sortedCurrStackedPoints[i2] = currStackedPoints[idx2];\n    sortedCurrStackedPoints[i2 + 1] = currStackedPoints[idx2 + 1];\n    sortedNextStackedPoints[i2] = nextStackedPoints[idx2];\n    sortedNextStackedPoints[i2 + 1] = nextStackedPoints[idx2 + 1];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}","map":{"version":3,"names":["diffData","oldData","newData","diffResult","diff","add","idx","push","cmd","update","newIdx","oldIdx","idx1","remove","execute","lineAnimationDiff","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","currPoints","nextPoints","currStackedPoints","nextStackedPoints","status","sortedIndices","rawIndices","newDataOldCoordInfo","prepareDataCoordInfo","oldPoints","getLayout","newPoints","i","length","diffItem","pointAdded","oldIdx2","newIdx2","currentX","currentY","nextX","nextY","isNaN","getRawIndex","newDataDimsForPoint","dataDimsForPoint","oldPt","dataToPoint","get","stackedOnPoint","getStackedOnPoint","sort","a","b","len","sortedCurrPoints","createFloat32Array","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","i2","idx2","current","next","stackedOnCurrent","stackedOnNext"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/chart/line/lineAnimationDiff.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper.js';\nimport { createFloat32Array } from '../../util/vendor.js';\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nexport default function lineAnimationDiff(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // let newIdList = newData.mapArray(newData.getId);\n  // let oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin); // const oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  var oldPoints = oldData.getLayout('points') || [];\n  var newPoints = newData.getLayout('points') || [];\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true;\n    var oldIdx2 = void 0;\n    var newIdx2 = void 0; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        oldIdx2 = diffItem.idx * 2;\n        newIdx2 = diffItem.idx1 * 2;\n        var currentX = oldPoints[oldIdx2];\n        var currentY = oldPoints[oldIdx2 + 1];\n        var nextX = newPoints[newIdx2];\n        var nextY = newPoints[newIdx2 + 1]; // If previous data is NaN, use next point directly\n\n        if (isNaN(currentX) || isNaN(currentY)) {\n          currentX = nextX;\n          currentY = nextY;\n        }\n\n        currPoints.push(currentX, currentY);\n        nextPoints.push(nextX, nextY);\n        currStackedPoints.push(oldStackedOnPoints[oldIdx2], oldStackedOnPoints[oldIdx2 + 1]);\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var newIdx = diffItem.idx;\n        var newDataDimsForPoint = newDataOldCoordInfo.dataDimsForPoint;\n        var oldPt = oldCoordSys.dataToPoint([newData.get(newDataDimsForPoint[0], newIdx), newData.get(newDataDimsForPoint[1], newIdx)]);\n        newIdx2 = newIdx * 2;\n        currPoints.push(oldPt[0], oldPt[1]);\n        nextPoints.push(newPoints[newIdx2], newPoints[newIdx2 + 1]);\n        var stackedOnPoint = getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, newIdx);\n        currStackedPoints.push(stackedOnPoint[0], stackedOnPoint[1]);\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\n        rawIndices.push(newData.getRawIndex(newIdx));\n        break;\n\n      case '-':\n        pointAdded = false;\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var len = currPoints.length;\n  var sortedCurrPoints = createFloat32Array(len);\n  var sortedNextPoints = createFloat32Array(len);\n  var sortedCurrStackedPoints = createFloat32Array(len);\n  var sortedNextStackedPoints = createFloat32Array(len);\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    var i2 = i * 2;\n    var idx2 = idx * 2;\n    sortedCurrPoints[i2] = currPoints[idx2];\n    sortedCurrPoints[i2 + 1] = currPoints[idx2 + 1];\n    sortedNextPoints[i2] = nextPoints[idx2];\n    sortedNextPoints[i2 + 1] = nextPoints[idx2 + 1];\n    sortedCurrStackedPoints[i2] = currStackedPoints[idx2];\n    sortedCurrStackedPoints[i2 + 1] = currStackedPoints[idx2 + 1];\n    sortedNextStackedPoints[i2] = nextStackedPoints[idx2];\n    sortedNextStackedPoints[i2 + 1] = nextStackedPoints[idx2 + 1];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}