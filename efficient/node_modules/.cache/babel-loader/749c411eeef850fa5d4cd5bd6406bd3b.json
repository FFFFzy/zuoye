{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;\n\nvar vec2 = _interopRequireWildcard(require(\"zrender/lib/core/vector.js\"));\n\nvar zrUtil = _interopRequireWildcard(require(\"zrender/lib/core/util.js\"));\n\nvar _multipleGraphEdgeHelper = require(\"../helper/multipleGraphEdgeHelper.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph, seriesModel);\n}\n\nfunction simpleLayoutEdge(graph, seriesModel) {\n  graph.eachEdge(function (edge, index) {\n    var curveness = zrUtil.retrieve3(edge.getModel().get(['lineStyle', 'curveness']), -(0, _multipleGraphEdgeHelper.getCurvenessForEdge)(edge, seriesModel, index, true), 0);\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}","map":{"version":3,"names":["simpleLayout","seriesModel","coordSys","coordinateSystem","type","graph","getGraph","eachNode","node","model","getModel","setLayout","get","simpleLayoutEdge","eachEdge","edge","index","curveness","zrUtil","retrieve3","getCurvenessForEdge","p1","vec2","clone","node1","getLayout","p2","node2","points","push"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as vec2 from 'zrender/lib/core/vector.js';\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { getCurvenessForEdge } from '../helper/multipleGraphEdgeHelper.js';\nexport function simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph, seriesModel);\n}\nexport function simpleLayoutEdge(graph, seriesModel) {\n  graph.eachEdge(function (edge, index) {\n    var curveness = zrUtil.retrieve3(edge.getModel().get(['lineStyle', 'curveness']), -getCurvenessForEdge(edge, seriesModel, index, true), 0);\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}"],"mappings":";;;;;;;;;;AA2CA;;AACA;;AACA;;AA5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIO,SAASA,YAAT,CAAsBC,WAAtB,EAAmC;EACxC,IAAIC,QAAQ,GAAGD,WAAW,CAACE,gBAA3B;;EAEA,IAAID,QAAQ,IAAIA,QAAQ,CAACE,IAAT,KAAkB,MAAlC,EAA0C;IACxC;EACD;;EAED,IAAIC,KAAK,GAAGJ,WAAW,CAACK,QAAZ,EAAZ;EACAD,KAAK,CAACE,QAAN,CAAe,UAAUC,IAAV,EAAgB;IAC7B,IAAIC,KAAK,GAAGD,IAAI,CAACE,QAAL,EAAZ;IACAF,IAAI,CAACG,SAAL,CAAe,CAAC,CAACF,KAAK,CAACG,GAAN,CAAU,GAAV,CAAF,EAAkB,CAACH,KAAK,CAACG,GAAN,CAAU,GAAV,CAAnB,CAAf;EACD,CAHD;EAIAC,gBAAgB,CAACR,KAAD,EAAQJ,WAAR,CAAhB;AACD;;AACM,SAASY,gBAAT,CAA0BR,KAA1B,EAAiCJ,WAAjC,EAA8C;EACnDI,KAAK,CAACS,QAAN,CAAe,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;IACpC,IAAIC,SAAS,GAAGC,MAAM,CAACC,SAAP,CAAiBJ,IAAI,CAACL,QAAL,GAAgBE,GAAhB,CAAoB,CAAC,WAAD,EAAc,WAAd,CAApB,CAAjB,EAAkE,CAAC,IAAAQ,4CAAA,EAAoBL,IAApB,EAA0Bd,WAA1B,EAAuCe,KAAvC,EAA8C,IAA9C,CAAnE,EAAwH,CAAxH,CAAhB;IACA,IAAIK,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,CAACS,KAAL,CAAWC,SAAX,EAAX,CAAT;IACA,IAAIC,EAAE,GAAGJ,IAAI,CAACC,KAAL,CAAWR,IAAI,CAACY,KAAL,CAAWF,SAAX,EAAX,CAAT;IACA,IAAIG,MAAM,GAAG,CAACP,EAAD,EAAKK,EAAL,CAAb;;IAEA,IAAI,CAACT,SAAL,EAAgB;MACdW,MAAM,CAACC,IAAP,CAAY,CAAC,CAACR,EAAE,CAAC,CAAD,CAAF,GAAQK,EAAE,CAAC,CAAD,CAAX,IAAkB,CAAlB,GAAsB,CAACL,EAAE,CAAC,CAAD,CAAF,GAAQK,EAAE,CAAC,CAAD,CAAX,IAAkBT,SAAzC,EAAoD,CAACI,EAAE,CAAC,CAAD,CAAF,GAAQK,EAAE,CAAC,CAAD,CAAX,IAAkB,CAAlB,GAAsB,CAACA,EAAE,CAAC,CAAD,CAAF,GAAQL,EAAE,CAAC,CAAD,CAAX,IAAkBJ,SAA5F,CAAZ;IACD;;IAEDF,IAAI,CAACJ,SAAL,CAAeiB,MAAf;EACD,CAXD;AAYD"},"metadata":{},"sourceType":"script"}