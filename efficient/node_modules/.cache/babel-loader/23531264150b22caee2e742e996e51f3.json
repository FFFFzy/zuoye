{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloneSourceShallow = cloneSourceShallow;\nexports.createSource = createSource;\nexports.createSourceFromSeriesDataOption = createSourceFromSeriesDataOption;\nexports.detectSourceFormat = detectSourceFormat;\nexports.isSourceInstance = isSourceInstance;\nexports.shouldRetrieveDataByName = shouldRetrieveDataByName;\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar _types = require(\"../util/types.js\");\n\nvar _model = require(\"../util/model.js\");\n\nvar _sourceHelper = require(\"./helper/sourceHelper.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n; // @inner\n\nvar SourceImpl =\n/** @class */\nfunction () {\n  function SourceImpl(fields) {\n    this.data = fields.data || (fields.sourceFormat === _types.SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n    this.sourceFormat = fields.sourceFormat || _types.SOURCE_FORMAT_UNKNOWN; // Visit config\n\n    this.seriesLayoutBy = fields.seriesLayoutBy || _types.SERIES_LAYOUT_BY_COLUMN;\n    this.startIndex = fields.startIndex || 0;\n    this.dimensionsDetectedCount = fields.dimensionsDetectedCount;\n    this.metaRawOption = fields.metaRawOption;\n    var dimensionsDefine = this.dimensionsDefine = fields.dimensionsDefine;\n\n    if (dimensionsDefine) {\n      for (var i = 0; i < dimensionsDefine.length; i++) {\n        var dim = dimensionsDefine[i];\n\n        if (dim.type == null) {\n          if ((0, _sourceHelper.guessOrdinal)(this, i) === _sourceHelper.BE_ORDINAL.Must) {\n            dim.type = 'ordinal';\n          }\n        }\n      }\n    }\n  }\n\n  return SourceImpl;\n}();\n\nfunction isSourceInstance(val) {\n  return val instanceof SourceImpl;\n}\n/**\n * Create a source from option.\n * NOTE: Created source is immutable. Don't change any properties in it.\n */\n\n\nfunction createSource(sourceData, thisMetaRawOption, // can be null. If not provided, auto detect it from `sourceData`.\nsourceFormat) {\n  sourceFormat = sourceFormat || detectSourceFormat(sourceData);\n  var seriesLayoutBy = thisMetaRawOption.seriesLayoutBy;\n  var determined = determineSourceDimensions(sourceData, sourceFormat, seriesLayoutBy, thisMetaRawOption.sourceHeader, thisMetaRawOption.dimensions);\n  var source = new SourceImpl({\n    data: sourceData,\n    sourceFormat: sourceFormat,\n    seriesLayoutBy: seriesLayoutBy,\n    dimensionsDefine: determined.dimensionsDefine,\n    startIndex: determined.startIndex,\n    dimensionsDetectedCount: determined.dimensionsDetectedCount,\n    metaRawOption: (0, _util.clone)(thisMetaRawOption)\n  });\n  return source;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nfunction createSourceFromSeriesDataOption(data) {\n  return new SourceImpl({\n    data: data,\n    sourceFormat: (0, _util.isTypedArray)(data) ? _types.SOURCE_FORMAT_TYPED_ARRAY : _types.SOURCE_FORMAT_ORIGINAL\n  });\n}\n/**\n * Clone source but excludes source data.\n */\n\n\nfunction cloneSourceShallow(source) {\n  return new SourceImpl({\n    data: source.data,\n    sourceFormat: source.sourceFormat,\n    seriesLayoutBy: source.seriesLayoutBy,\n    dimensionsDefine: (0, _util.clone)(source.dimensionsDefine),\n    startIndex: source.startIndex,\n    dimensionsDetectedCount: source.dimensionsDetectedCount\n  });\n}\n/**\n * Note: An empty array will be detected as `SOURCE_FORMAT_ARRAY_ROWS`.\n */\n\n\nfunction detectSourceFormat(data) {\n  var sourceFormat = _types.SOURCE_FORMAT_UNKNOWN;\n\n  if ((0, _util.isTypedArray)(data)) {\n    sourceFormat = _types.SOURCE_FORMAT_TYPED_ARRAY;\n  } else if ((0, _util.isArray)(data)) {\n    // FIXME Whether tolerate null in top level array?\n    if (data.length === 0) {\n      sourceFormat = _types.SOURCE_FORMAT_ARRAY_ROWS;\n    }\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if ((0, _util.isArray)(item)) {\n        sourceFormat = _types.SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if ((0, _util.isObject)(item)) {\n        sourceFormat = _types.SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if ((0, _util.isObject)(data)) {\n    for (var key in data) {\n      if ((0, _util.hasOwn)(data, key) && (0, _util.isArrayLike)(data[key])) {\n        sourceFormat = _types.SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  }\n\n  return sourceFormat;\n}\n/**\n * Determine the source definitions from data standalone dimensions definitions\n * are not specified.\n */\n\n\nfunction determineSourceDimensions(data, sourceFormat, seriesLayoutBy, sourceHeader, // standalone raw dimensions definition, like:\n// {\n//     dimensions: ['aa', 'bb', { name: 'cc', type: 'time' }]\n// }\n// in `dataset` or `series`\ndimensionsDefine) {\n  var dimensionsDetectedCount;\n  var startIndex; // PEDING: could data be null/undefined here?\n  // currently, if `dataset.source` not specified, error thrown.\n  // if `series.data` not specified, nothing rendered without error thrown.\n  // Should test these cases.\n\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsOption(dimensionsDefine),\n      startIndex: startIndex,\n      dimensionsDetectedCount: dimensionsDetectedCount\n    };\n  }\n\n  if (sourceFormat === _types.SOURCE_FORMAT_ARRAY_ROWS) {\n    var dataArrayRows = data; // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if ((0, _util.isString)(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, dataArrayRows, 10);\n    } else {\n      startIndex = (0, _util.isNumber)(sourceHeader) ? sourceHeader : sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val + '' : '';\n      }, seriesLayoutBy, dataArrayRows, Infinity);\n    }\n\n    dimensionsDetectedCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === _types.SERIES_LAYOUT_BY_ROW ? dataArrayRows.length : dataArrayRows[0] ? dataArrayRows[0].length : null;\n  } else if (sourceFormat === _types.SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n    }\n  } else if (sourceFormat === _types.SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      (0, _util.each)(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === _types.SOURCE_FORMAT_ORIGINAL) {\n    var value0 = (0, _model.getDataItemValue)(data[0]);\n    dimensionsDetectedCount = (0, _util.isArray)(value0) && value0.length || 1;\n  } else if (sourceFormat === _types.SOURCE_FORMAT_TYPED_ARRAY) {\n    if (process.env.NODE_ENV !== 'production') {\n      (0, _util.assert)(!!dimensionsDefine, 'dimensions must be given if data is TypedArray.');\n    }\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsOption(dimensionsDefine),\n    dimensionsDetectedCount: dimensionsDetectedCount\n  };\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions_1 = [];\n    (0, _util.each)(obj, function (value, key) {\n      dimensions_1.push(key);\n    });\n    return dimensions_1;\n  }\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsOption(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = (0, _util.createHashMap)();\n  return (0, _util.map)(dimensionsDefine, function (rawItem, index) {\n    rawItem = (0, _util.isObject)(rawItem) ? rawItem : {\n      name: rawItem\n    }; // Other fields will be discarded.\n\n    var item = {\n      name: rawItem.name,\n      displayName: rawItem.displayName,\n      type: rawItem.type\n    }; // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  if (seriesLayoutBy === _types.SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction shouldRetrieveDataByName(source) {\n  var sourceFormat = source.sourceFormat;\n  return sourceFormat === _types.SOURCE_FORMAT_OBJECT_ROWS || sourceFormat === _types.SOURCE_FORMAT_KEYED_COLUMNS;\n}","map":{"version":3,"names":["SourceImpl","fields","data","sourceFormat","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","seriesLayoutBy","SERIES_LAYOUT_BY_COLUMN","startIndex","dimensionsDetectedCount","metaRawOption","dimensionsDefine","i","length","dim","type","guessOrdinal","BE_ORDINAL","Must","isSourceInstance","val","createSource","sourceData","thisMetaRawOption","detectSourceFormat","determined","determineSourceDimensions","sourceHeader","dimensions","source","clone","createSourceFromSeriesDataOption","isTypedArray","SOURCE_FORMAT_TYPED_ARRAY","SOURCE_FORMAT_ORIGINAL","cloneSourceShallow","isArray","SOURCE_FORMAT_ARRAY_ROWS","len","item","isObject","SOURCE_FORMAT_OBJECT_ROWS","key","hasOwn","isArrayLike","normalizeDimensionsOption","dataArrayRows","arrayRowsTravelFirst","isString","isNumber","index","Infinity","SERIES_LAYOUT_BY_ROW","objectRowsCollectDimensions","each","colArr","push","value0","getDataItemValue","process","env","NODE_ENV","assert","firstIndex","obj","dimensions_1","value","nameMap","createHashMap","map","rawItem","name","displayName","exist","get","set","count","cb","maxLoop","shouldRetrieveDataByName"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/data/Source.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { isTypedArray, clone, createHashMap, isArray, isObject, isArrayLike, hasOwn, assert, each, map, isNumber, isString } from 'zrender/lib/core/util.js';\nimport { SOURCE_FORMAT_ORIGINAL, SERIES_LAYOUT_BY_COLUMN, SOURCE_FORMAT_UNKNOWN, SOURCE_FORMAT_KEYED_COLUMNS, SOURCE_FORMAT_TYPED_ARRAY, SOURCE_FORMAT_ARRAY_ROWS, SOURCE_FORMAT_OBJECT_ROWS, SERIES_LAYOUT_BY_ROW } from '../util/types.js';\nimport { getDataItemValue } from '../util/model.js';\nimport { BE_ORDINAL, guessOrdinal } from './helper/sourceHelper.js';\n; // @inner\n\nvar SourceImpl =\n/** @class */\nfunction () {\n  function SourceImpl(fields) {\n    this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n    this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN; // Visit config\n\n    this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n    this.startIndex = fields.startIndex || 0;\n    this.dimensionsDetectedCount = fields.dimensionsDetectedCount;\n    this.metaRawOption = fields.metaRawOption;\n    var dimensionsDefine = this.dimensionsDefine = fields.dimensionsDefine;\n\n    if (dimensionsDefine) {\n      for (var i = 0; i < dimensionsDefine.length; i++) {\n        var dim = dimensionsDefine[i];\n\n        if (dim.type == null) {\n          if (guessOrdinal(this, i) === BE_ORDINAL.Must) {\n            dim.type = 'ordinal';\n          }\n        }\n      }\n    }\n  }\n\n  return SourceImpl;\n}();\n\nexport function isSourceInstance(val) {\n  return val instanceof SourceImpl;\n}\n/**\n * Create a source from option.\n * NOTE: Created source is immutable. Don't change any properties in it.\n */\n\nexport function createSource(sourceData, thisMetaRawOption, // can be null. If not provided, auto detect it from `sourceData`.\nsourceFormat) {\n  sourceFormat = sourceFormat || detectSourceFormat(sourceData);\n  var seriesLayoutBy = thisMetaRawOption.seriesLayoutBy;\n  var determined = determineSourceDimensions(sourceData, sourceFormat, seriesLayoutBy, thisMetaRawOption.sourceHeader, thisMetaRawOption.dimensions);\n  var source = new SourceImpl({\n    data: sourceData,\n    sourceFormat: sourceFormat,\n    seriesLayoutBy: seriesLayoutBy,\n    dimensionsDefine: determined.dimensionsDefine,\n    startIndex: determined.startIndex,\n    dimensionsDetectedCount: determined.dimensionsDetectedCount,\n    metaRawOption: clone(thisMetaRawOption)\n  });\n  return source;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\nexport function createSourceFromSeriesDataOption(data) {\n  return new SourceImpl({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL\n  });\n}\n/**\n * Clone source but excludes source data.\n */\n\nexport function cloneSourceShallow(source) {\n  return new SourceImpl({\n    data: source.data,\n    sourceFormat: source.sourceFormat,\n    seriesLayoutBy: source.seriesLayoutBy,\n    dimensionsDefine: clone(source.dimensionsDefine),\n    startIndex: source.startIndex,\n    dimensionsDetectedCount: source.dimensionsDetectedCount\n  });\n}\n/**\n * Note: An empty array will be detected as `SOURCE_FORMAT_ARRAY_ROWS`.\n */\n\nexport function detectSourceFormat(data) {\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    if (data.length === 0) {\n      sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n    }\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (hasOwn(data, key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  }\n\n  return sourceFormat;\n}\n/**\n * Determine the source definitions from data standalone dimensions definitions\n * are not specified.\n */\n\nfunction determineSourceDimensions(data, sourceFormat, seriesLayoutBy, sourceHeader, // standalone raw dimensions definition, like:\n// {\n//     dimensions: ['aa', 'bb', { name: 'cc', type: 'time' }]\n// }\n// in `dataset` or `series`\ndimensionsDefine) {\n  var dimensionsDetectedCount;\n  var startIndex; // PEDING: could data be null/undefined here?\n  // currently, if `dataset.source` not specified, error thrown.\n  // if `series.data` not specified, nothing rendered without error thrown.\n  // Should test these cases.\n\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsOption(dimensionsDefine),\n      startIndex: startIndex,\n      dimensionsDetectedCount: dimensionsDetectedCount\n    };\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    var dataArrayRows = data; // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, dataArrayRows, 10);\n    } else {\n      startIndex = isNumber(sourceHeader) ? sourceHeader : sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val + '' : '';\n      }, seriesLayoutBy, dataArrayRows, Infinity);\n    }\n\n    dimensionsDetectedCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? dataArrayRows.length : dataArrayRows[0] ? dataArrayRows[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectedCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!!dimensionsDefine, 'dimensions must be given if data is TypedArray.');\n    }\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsOption(dimensionsDefine),\n    dimensionsDetectedCount: dimensionsDetectedCount\n  };\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions_1 = [];\n    each(obj, function (value, key) {\n      dimensions_1.push(key);\n    });\n    return dimensions_1;\n  }\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsOption(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (rawItem, index) {\n    rawItem = isObject(rawItem) ? rawItem : {\n      name: rawItem\n    }; // Other fields will be discarded.\n\n    var item = {\n      name: rawItem.name,\n      displayName: rawItem.displayName,\n      type: rawItem.type\n    }; // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nexport function shouldRetrieveDataByName(source) {\n  var sourceFormat = source.sourceFormat;\n  return sourceFormat === SOURCE_FORMAT_OBJECT_ROWS || sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}