{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pieLabelLayout;\n\nvar _number = require(\"../../util/number.js\");\n\nvar _graphic = require(\"../../util/graphic.js\");\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar _labelGuideHelper = require(\"../../label/labelGuideHelper.js\");\n\nvar _labelLayoutHelper = require(\"../../label/labelLayoutHelper.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nvar RADIAN = Math.PI / 180;\n\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight, viewLeft, viewTop, farthestX) {\n  if (list.length < 2) {\n    return;\n  }\n\n  ;\n\n  function recalculateXOnSemiToAlignOnEllipseCurve(semi) {\n    var rB = semi.rB;\n    var rB2 = rB * rB;\n\n    for (var i = 0; i < semi.list.length; i++) {\n      var item = semi.list[i];\n      var dy = Math.abs(item.label.y - cy); // horizontal r is always same with original r because x is not changed.\n\n      var rA = r + item.len;\n      var rA2 = rA * rA; // Use ellipse implicit function to calculate x\n\n      var dx = Math.sqrt((1 - Math.abs(dy * dy / rB2)) * rA2);\n      var newX = cx + (dx + item.len2) * dir;\n      var deltaX = newX - item.label.x;\n      var newTargetWidth = item.targetTextWidth - deltaX * dir; // text x is changed, so need to recalculate width.\n\n      constrainTextWidth(item, newTargetWidth, true);\n      item.label.x = newX;\n    }\n  } // Adjust X based on the shifted y. Make tight labels aligned on an ellipse curve.\n\n\n  function recalculateX(items) {\n    // Extremes of\n    var topSemi = {\n      list: [],\n      maxY: 0\n    };\n    var bottomSemi = {\n      list: [],\n      maxY: 0\n    };\n\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].labelAlignTo !== 'none') {\n        continue;\n      }\n\n      var item = items[i];\n      var semi = item.label.y > cy ? bottomSemi : topSemi;\n      var dy = Math.abs(item.label.y - cy);\n\n      if (dy >= semi.maxY) {\n        var dx = item.label.x - cx - item.len2 * dir; // horizontal r is always same with original r because x is not changed.\n\n        var rA = r + item.len; // Canculate rB based on the topest / bottemest label.\n\n        var rB = Math.abs(dx) < rA ? Math.sqrt(dy * dy / (1 - dx * dx / rA / rA)) : rA;\n        semi.rB = rB;\n        semi.maxY = dy;\n      }\n\n      semi.list.push(item);\n    }\n\n    recalculateXOnSemiToAlignOnEllipseCurve(topSemi);\n    recalculateXOnSemiToAlignOnEllipseCurve(bottomSemi);\n  }\n\n  var len = list.length;\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].position === 'outer' && list[i].labelAlignTo === 'labelLine') {\n      var dx = list[i].label.x - farthestX;\n      list[i].linePoints[1][0] += dx;\n      list[i].label.x = farthestX;\n    }\n  }\n\n  if ((0, _labelLayoutHelper.shiftLayoutOnY)(list, viewTop, viewTop + viewHeight)) {\n    recalculateX(list);\n  }\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop) {\n  var leftList = [];\n  var rightList = [];\n  var leftmostX = Number.MAX_VALUE;\n  var rightmostX = -Number.MAX_VALUE;\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var label = labelLayoutList[i].label;\n\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    if (label.x < cx) {\n      leftmostX = Math.min(leftmostX, label.x);\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightmostX = Math.max(rightmostX, label.x);\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n\n    if (!isPositionCenter(layout) && layout.linePoints) {\n      if (layout.labelStyleWidth != null) {\n        continue;\n      }\n\n      var label = layout.label;\n      var linePoints = layout.linePoints;\n      var targetTextWidth = void 0;\n\n      if (layout.labelAlignTo === 'edge') {\n        if (label.x < cx) {\n          targetTextWidth = linePoints[2][0] - layout.labelDistance - viewLeft - layout.edgeDistance;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - layout.edgeDistance - linePoints[2][0] - layout.labelDistance;\n        }\n      } else if (layout.labelAlignTo === 'labelLine') {\n        if (label.x < cx) {\n          targetTextWidth = leftmostX - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - rightmostX - layout.bleedMargin;\n        }\n      } else {\n        if (label.x < cx) {\n          targetTextWidth = label.x - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - label.x - layout.bleedMargin;\n        }\n      }\n\n      layout.targetTextWidth = targetTextWidth;\n      constrainTextWidth(layout, targetTextWidth);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight, viewLeft, viewTop, rightmostX);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight, viewLeft, viewTop, leftmostX);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n\n    if (!isPositionCenter(layout) && layout.linePoints) {\n      var label = layout.label;\n      var linePoints = layout.linePoints;\n      var isAlignToEdge = layout.labelAlignTo === 'edge';\n      var padding = label.style.padding;\n      var paddingH = padding ? padding[1] + padding[3] : 0; // textRect.width already contains paddingH if bgColor is set\n\n      var extraPaddingH = label.style.backgroundColor ? 0 : paddingH;\n      var realTextWidth = layout.rect.width + extraPaddingH;\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          linePoints[2][0] = viewLeft + layout.edgeDistance + realTextWidth + layout.labelDistance;\n        } else {\n          linePoints[2][0] = viewLeft + viewWidth - layout.edgeDistance - realTextWidth - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          linePoints[2][0] = label.x + layout.labelDistance;\n        } else {\n          linePoints[2][0] = label.x - layout.labelDistance;\n        }\n\n        linePoints[1][0] = linePoints[2][0] + dist;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = label.y;\n    }\n  }\n}\n/**\n * Set max width of each label, and then wrap each label to the max width.\n *\n * @param layout label layout\n * @param availableWidth max width for the label to display\n * @param forceRecalculate recaculate the text layout even if the current width\n * is smaller than `availableWidth`. This is useful when the text was previously\n * wrapped by calling `constrainTextWidth` but now `availableWidth` changed, in\n * which case, previous wrapping should be redo.\n */\n\n\nfunction constrainTextWidth(layout, availableWidth, forceRecalculate) {\n  if (forceRecalculate === void 0) {\n    forceRecalculate = false;\n  }\n\n  if (layout.labelStyleWidth != null) {\n    // User-defined style.width has the highest priority.\n    return;\n  }\n\n  var label = layout.label;\n  var style = label.style;\n  var textRect = layout.rect;\n  var bgColor = style.backgroundColor;\n  var padding = style.padding;\n  var paddingH = padding ? padding[1] + padding[3] : 0;\n  var overflow = style.overflow; // textRect.width already contains paddingH if bgColor is set\n\n  var oldOuterWidth = textRect.width + (bgColor ? 0 : paddingH);\n\n  if (availableWidth < oldOuterWidth || forceRecalculate) {\n    var oldHeight = textRect.height;\n\n    if (overflow && overflow.match('break')) {\n      // Temporarily set background to be null to calculate\n      // the bounding box without backgroud.\n      label.setStyle('backgroundColor', null); // Set constraining width\n\n      label.setStyle('width', availableWidth - paddingH); // This is the real bounding box of the text without padding\n\n      var innerRect = label.getBoundingRect();\n      label.setStyle('width', Math.ceil(innerRect.width));\n      label.setStyle('backgroundColor', bgColor);\n    } else {\n      var availableInnerWidth = availableWidth - paddingH;\n      var newWidth = availableWidth < oldOuterWidth // Current text is too wide, use `availableWidth` as max width.\n      ? availableInnerWidth : // Current available width is enough, but the text may have\n      // already been wrapped with a smaller available width.\n      forceRecalculate ? availableInnerWidth > layout.unconstrainedWidth // Current available is larger than text width,\n      // so don't constrain width (otherwise it may have\n      // empty space in the background).\n      ? null // Current available is smaller than text width, so\n      // use the current available width as constraining\n      // width.\n      : availableInnerWidth : // Current available width is enough, so no need to\n      // constrain.\n      null;\n      label.setStyle('width', newWidth);\n    }\n\n    var newRect = label.getBoundingRect();\n    textRect.width = newRect.width;\n    var margin = (label.style.margin || 0) + 2.1;\n    textRect.height = newRect.height + margin;\n    textRect.y -= (textRect.height - oldHeight) / 2;\n  }\n}\n\nfunction isPositionCenter(sectorShape) {\n  // Not change x for center label\n  return sectorShape.position === 'center';\n}\n\nfunction pieLabelLayout(seriesModel) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  var minShowLabelRadian = (seriesModel.get('minShowLabelAngle') || 0) * RADIAN;\n  var viewRect = data.getLayout('viewRect');\n  var r = data.getLayout('r');\n  var viewWidth = viewRect.width;\n  var viewLeft = viewRect.x;\n  var viewTop = viewRect.y;\n  var viewHeight = viewRect.height;\n\n  function setNotShow(el) {\n    el.ignore = true;\n  }\n\n  function isLabelShown(label) {\n    if (!label.ignore) {\n      return true;\n    }\n\n    for (var key in label.states) {\n      if (label.states[key].ignore === false) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  data.each(function (idx) {\n    var sector = data.getItemGraphicEl(idx);\n    var sectorShape = sector.shape;\n    var label = sector.getTextContent();\n    var labelLine = sector.getTextGuideLine();\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get(['emphasis', 'label', 'position']);\n    var labelDistance = labelModel.get('distanceToLabelLine');\n    var labelAlignTo = labelModel.get('alignTo');\n    var edgeDistance = (0, _number.parsePercent)(labelModel.get('edgeDistance'), viewWidth);\n    var bleedMargin = labelModel.get('bleedMargin');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    labelLineLen = (0, _number.parsePercent)(labelLineLen, viewWidth);\n    var labelLineLen2 = labelLineModel.get('length2');\n    labelLineLen2 = (0, _number.parsePercent)(labelLineLen2, viewWidth);\n\n    if (Math.abs(sectorShape.endAngle - sectorShape.startAngle) < minShowLabelRadian) {\n      (0, _util.each)(label.states, setNotShow);\n      label.ignore = true;\n      return;\n    }\n\n    if (!isLabelShown(label)) {\n      return;\n    }\n\n    var midAngle = (sectorShape.startAngle + sectorShape.endAngle) / 2;\n    var nx = Math.cos(midAngle);\n    var ny = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = sectorShape.cx;\n    cy = sectorShape.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = sectorShape.cx;\n      textY = sectorShape.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * nx : sectorShape.r * nx) + cx;\n      var y1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * ny : sectorShape.r * ny) + cy;\n      textX = x1 + nx * 3;\n      textY = y1 + ny * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + nx * (labelLineLen + r - sectorShape.r);\n        var y2 = y1 + ny * (labelLineLen + r - sectorShape.r);\n        var x3 = x2 + (nx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n\n        if (labelAlignTo === 'edge') {\n          // Adjust textX because text align of edge is opposite\n          textX = nx < 0 ? viewLeft + edgeDistance : viewLeft + viewWidth - edgeDistance;\n        } else {\n          textX = x3 + (nx < 0 ? -labelDistance : labelDistance);\n        }\n\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : labelAlignTo === 'edge' ? nx > 0 ? 'right' : 'left' : nx > 0 ? 'left' : 'right';\n    }\n\n    var PI = Math.PI;\n    var labelRotate = 0;\n    var rotate = labelModel.get('rotate');\n\n    if ((0, _util.isNumber)(rotate)) {\n      labelRotate = rotate * (PI / 180);\n    } else if (labelPosition === 'center') {\n      labelRotate = 0;\n    } else if (rotate === 'radial' || rotate === true) {\n      var radialAngle = nx < 0 ? -midAngle + PI : -midAngle;\n      labelRotate = radialAngle;\n    } else if (rotate === 'tangential' && labelPosition !== 'outside' && labelPosition !== 'outer') {\n      var rad = Math.atan2(nx, ny);\n\n      if (rad < 0) {\n        rad = PI * 2 + rad;\n      }\n\n      var isDown = ny > 0;\n\n      if (isDown) {\n        rad = PI + rad;\n      }\n\n      labelRotate = rad - PI;\n    }\n\n    hasLabelRotate = !!labelRotate;\n    label.x = textX;\n    label.y = textY;\n    label.rotation = labelRotate;\n    label.setStyle({\n      verticalAlign: 'middle'\n    }); // Not sectorShape the inside label\n\n    if (!isLabelInside) {\n      var textRect = label.getBoundingRect().clone();\n      textRect.applyTransform(label.getComputedTransform()); // Text has a default 1px stroke. Exclude this.\n\n      var margin = (label.style.margin || 0) + 2.1;\n      textRect.y -= margin / 2;\n      textRect.height += margin;\n      labelLayoutList.push({\n        label: label,\n        labelLine: labelLine,\n        position: labelPosition,\n        len: labelLineLen,\n        len2: labelLineLen2,\n        minTurnAngle: labelLineModel.get('minTurnAngle'),\n        maxSurfaceAngle: labelLineModel.get('maxSurfaceAngle'),\n        surfaceNormal: new _graphic.Point(nx, ny),\n        linePoints: linePoints,\n        textAlign: textAlign,\n        labelDistance: labelDistance,\n        labelAlignTo: labelAlignTo,\n        edgeDistance: edgeDistance,\n        bleedMargin: bleedMargin,\n        rect: textRect,\n        unconstrainedWidth: textRect.width,\n        labelStyleWidth: label.style.width\n      });\n    } else {\n      label.setStyle({\n        align: textAlign\n      });\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    sector.setTextConfig({\n      inside: isLabelInside\n    });\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop);\n  }\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n    var labelLine = layout.labelLine;\n    var notShowLabel = isNaN(label.x) || isNaN(label.y);\n\n    if (label) {\n      label.setStyle({\n        align: layout.textAlign\n      });\n\n      if (notShowLabel) {\n        (0, _util.each)(label.states, setNotShow);\n        label.ignore = true;\n      }\n\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    if (labelLine) {\n      var linePoints = layout.linePoints;\n\n      if (notShowLabel || !linePoints) {\n        (0, _util.each)(labelLine.states, setNotShow);\n        labelLine.ignore = true;\n      } else {\n        (0, _labelGuideHelper.limitTurnAngle)(linePoints, layout.minTurnAngle);\n        (0, _labelGuideHelper.limitSurfaceAngle)(linePoints, layout.surfaceNormal, layout.maxSurfaceAngle);\n        labelLine.setShape({\n          points: linePoints\n        }); // Set the anchor to the midpoint of sector\n\n        label.__hostTarget.textGuideLineConfig = {\n          anchor: new _graphic.Point(linePoints[0][0], linePoints[0][1])\n        };\n      }\n    }\n  }\n}","map":{"version":3,"names":["RADIAN","Math","PI","adjustSingleSide","list","cx","cy","r","dir","viewWidth","viewHeight","viewLeft","viewTop","farthestX","length","recalculateXOnSemiToAlignOnEllipseCurve","semi","rB","rB2","i","item","dy","abs","label","y","rA","len","rA2","dx","sqrt","newX","len2","deltaX","x","newTargetWidth","targetTextWidth","constrainTextWidth","recalculateX","items","topSemi","maxY","bottomSemi","labelAlignTo","push","position","linePoints","shiftLayoutOnY","avoidOverlap","labelLayoutList","leftList","rightList","leftmostX","Number","MAX_VALUE","rightmostX","isPositionCenter","min","max","layout","labelStyleWidth","labelDistance","edgeDistance","bleedMargin","isAlignToEdge","padding","style","paddingH","extraPaddingH","backgroundColor","realTextWidth","rect","width","dist","availableWidth","forceRecalculate","textRect","bgColor","overflow","oldOuterWidth","oldHeight","height","match","setStyle","innerRect","getBoundingRect","ceil","availableInnerWidth","newWidth","unconstrainedWidth","newRect","margin","sectorShape","pieLabelLayout","seriesModel","data","getData","hasLabelRotate","minShowLabelRadian","get","viewRect","getLayout","setNotShow","el","ignore","isLabelShown","key","states","each","idx","sector","getItemGraphicEl","shape","getTextContent","labelLine","getTextGuideLine","itemModel","getItemModel","labelModel","getModel","labelPosition","parsePercent","labelLineModel","labelLineLen","labelLineLen2","endAngle","startAngle","midAngle","nx","cos","ny","sin","textX","textY","textAlign","isLabelInside","x1","r0","y1","x2","y2","x3","y3","labelRotate","rotate","isNumber","radialAngle","rad","atan2","isDown","rotation","verticalAlign","clone","applyTransform","getComputedTransform","minTurnAngle","maxSurfaceAngle","surfaceNormal","Point","align","selectState","select","setTextConfig","inside","notShowLabel","isNaN","limitTurnAngle","limitSurfaceAngle","setShape","points","__hostTarget","textGuideLineConfig","anchor"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/chart/pie/labelLayout.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nimport { parsePercent } from '../../util/number.js';\nimport { Point } from '../../util/graphic.js';\nimport { each, isNumber } from 'zrender/lib/core/util.js';\nimport { limitTurnAngle, limitSurfaceAngle } from '../../label/labelGuideHelper.js';\nimport { shiftLayoutOnY } from '../../label/labelLayoutHelper.js';\nvar RADIAN = Math.PI / 180;\n\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight, viewLeft, viewTop, farthestX) {\n  if (list.length < 2) {\n    return;\n  }\n\n  ;\n\n  function recalculateXOnSemiToAlignOnEllipseCurve(semi) {\n    var rB = semi.rB;\n    var rB2 = rB * rB;\n\n    for (var i = 0; i < semi.list.length; i++) {\n      var item = semi.list[i];\n      var dy = Math.abs(item.label.y - cy); // horizontal r is always same with original r because x is not changed.\n\n      var rA = r + item.len;\n      var rA2 = rA * rA; // Use ellipse implicit function to calculate x\n\n      var dx = Math.sqrt((1 - Math.abs(dy * dy / rB2)) * rA2);\n      var newX = cx + (dx + item.len2) * dir;\n      var deltaX = newX - item.label.x;\n      var newTargetWidth = item.targetTextWidth - deltaX * dir; // text x is changed, so need to recalculate width.\n\n      constrainTextWidth(item, newTargetWidth, true);\n      item.label.x = newX;\n    }\n  } // Adjust X based on the shifted y. Make tight labels aligned on an ellipse curve.\n\n\n  function recalculateX(items) {\n    // Extremes of\n    var topSemi = {\n      list: [],\n      maxY: 0\n    };\n    var bottomSemi = {\n      list: [],\n      maxY: 0\n    };\n\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].labelAlignTo !== 'none') {\n        continue;\n      }\n\n      var item = items[i];\n      var semi = item.label.y > cy ? bottomSemi : topSemi;\n      var dy = Math.abs(item.label.y - cy);\n\n      if (dy >= semi.maxY) {\n        var dx = item.label.x - cx - item.len2 * dir; // horizontal r is always same with original r because x is not changed.\n\n        var rA = r + item.len; // Canculate rB based on the topest / bottemest label.\n\n        var rB = Math.abs(dx) < rA ? Math.sqrt(dy * dy / (1 - dx * dx / rA / rA)) : rA;\n        semi.rB = rB;\n        semi.maxY = dy;\n      }\n\n      semi.list.push(item);\n    }\n\n    recalculateXOnSemiToAlignOnEllipseCurve(topSemi);\n    recalculateXOnSemiToAlignOnEllipseCurve(bottomSemi);\n  }\n\n  var len = list.length;\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].position === 'outer' && list[i].labelAlignTo === 'labelLine') {\n      var dx = list[i].label.x - farthestX;\n      list[i].linePoints[1][0] += dx;\n      list[i].label.x = farthestX;\n    }\n  }\n\n  if (shiftLayoutOnY(list, viewTop, viewTop + viewHeight)) {\n    recalculateX(list);\n  }\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop) {\n  var leftList = [];\n  var rightList = [];\n  var leftmostX = Number.MAX_VALUE;\n  var rightmostX = -Number.MAX_VALUE;\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var label = labelLayoutList[i].label;\n\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    if (label.x < cx) {\n      leftmostX = Math.min(leftmostX, label.x);\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightmostX = Math.max(rightmostX, label.x);\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n\n    if (!isPositionCenter(layout) && layout.linePoints) {\n      if (layout.labelStyleWidth != null) {\n        continue;\n      }\n\n      var label = layout.label;\n      var linePoints = layout.linePoints;\n      var targetTextWidth = void 0;\n\n      if (layout.labelAlignTo === 'edge') {\n        if (label.x < cx) {\n          targetTextWidth = linePoints[2][0] - layout.labelDistance - viewLeft - layout.edgeDistance;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - layout.edgeDistance - linePoints[2][0] - layout.labelDistance;\n        }\n      } else if (layout.labelAlignTo === 'labelLine') {\n        if (label.x < cx) {\n          targetTextWidth = leftmostX - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - rightmostX - layout.bleedMargin;\n        }\n      } else {\n        if (label.x < cx) {\n          targetTextWidth = label.x - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - label.x - layout.bleedMargin;\n        }\n      }\n\n      layout.targetTextWidth = targetTextWidth;\n      constrainTextWidth(layout, targetTextWidth);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight, viewLeft, viewTop, rightmostX);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight, viewLeft, viewTop, leftmostX);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n\n    if (!isPositionCenter(layout) && layout.linePoints) {\n      var label = layout.label;\n      var linePoints = layout.linePoints;\n      var isAlignToEdge = layout.labelAlignTo === 'edge';\n      var padding = label.style.padding;\n      var paddingH = padding ? padding[1] + padding[3] : 0; // textRect.width already contains paddingH if bgColor is set\n\n      var extraPaddingH = label.style.backgroundColor ? 0 : paddingH;\n      var realTextWidth = layout.rect.width + extraPaddingH;\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          linePoints[2][0] = viewLeft + layout.edgeDistance + realTextWidth + layout.labelDistance;\n        } else {\n          linePoints[2][0] = viewLeft + viewWidth - layout.edgeDistance - realTextWidth - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          linePoints[2][0] = label.x + layout.labelDistance;\n        } else {\n          linePoints[2][0] = label.x - layout.labelDistance;\n        }\n\n        linePoints[1][0] = linePoints[2][0] + dist;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = label.y;\n    }\n  }\n}\n/**\n * Set max width of each label, and then wrap each label to the max width.\n *\n * @param layout label layout\n * @param availableWidth max width for the label to display\n * @param forceRecalculate recaculate the text layout even if the current width\n * is smaller than `availableWidth`. This is useful when the text was previously\n * wrapped by calling `constrainTextWidth` but now `availableWidth` changed, in\n * which case, previous wrapping should be redo.\n */\n\n\nfunction constrainTextWidth(layout, availableWidth, forceRecalculate) {\n  if (forceRecalculate === void 0) {\n    forceRecalculate = false;\n  }\n\n  if (layout.labelStyleWidth != null) {\n    // User-defined style.width has the highest priority.\n    return;\n  }\n\n  var label = layout.label;\n  var style = label.style;\n  var textRect = layout.rect;\n  var bgColor = style.backgroundColor;\n  var padding = style.padding;\n  var paddingH = padding ? padding[1] + padding[3] : 0;\n  var overflow = style.overflow; // textRect.width already contains paddingH if bgColor is set\n\n  var oldOuterWidth = textRect.width + (bgColor ? 0 : paddingH);\n\n  if (availableWidth < oldOuterWidth || forceRecalculate) {\n    var oldHeight = textRect.height;\n\n    if (overflow && overflow.match('break')) {\n      // Temporarily set background to be null to calculate\n      // the bounding box without backgroud.\n      label.setStyle('backgroundColor', null); // Set constraining width\n\n      label.setStyle('width', availableWidth - paddingH); // This is the real bounding box of the text without padding\n\n      var innerRect = label.getBoundingRect();\n      label.setStyle('width', Math.ceil(innerRect.width));\n      label.setStyle('backgroundColor', bgColor);\n    } else {\n      var availableInnerWidth = availableWidth - paddingH;\n      var newWidth = availableWidth < oldOuterWidth // Current text is too wide, use `availableWidth` as max width.\n      ? availableInnerWidth : // Current available width is enough, but the text may have\n      // already been wrapped with a smaller available width.\n      forceRecalculate ? availableInnerWidth > layout.unconstrainedWidth // Current available is larger than text width,\n      // so don't constrain width (otherwise it may have\n      // empty space in the background).\n      ? null // Current available is smaller than text width, so\n      // use the current available width as constraining\n      // width.\n      : availableInnerWidth : // Current available width is enough, so no need to\n      // constrain.\n      null;\n      label.setStyle('width', newWidth);\n    }\n\n    var newRect = label.getBoundingRect();\n    textRect.width = newRect.width;\n    var margin = (label.style.margin || 0) + 2.1;\n    textRect.height = newRect.height + margin;\n    textRect.y -= (textRect.height - oldHeight) / 2;\n  }\n}\n\nfunction isPositionCenter(sectorShape) {\n  // Not change x for center label\n  return sectorShape.position === 'center';\n}\n\nexport default function pieLabelLayout(seriesModel) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  var minShowLabelRadian = (seriesModel.get('minShowLabelAngle') || 0) * RADIAN;\n  var viewRect = data.getLayout('viewRect');\n  var r = data.getLayout('r');\n  var viewWidth = viewRect.width;\n  var viewLeft = viewRect.x;\n  var viewTop = viewRect.y;\n  var viewHeight = viewRect.height;\n\n  function setNotShow(el) {\n    el.ignore = true;\n  }\n\n  function isLabelShown(label) {\n    if (!label.ignore) {\n      return true;\n    }\n\n    for (var key in label.states) {\n      if (label.states[key].ignore === false) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  data.each(function (idx) {\n    var sector = data.getItemGraphicEl(idx);\n    var sectorShape = sector.shape;\n    var label = sector.getTextContent();\n    var labelLine = sector.getTextGuideLine();\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get(['emphasis', 'label', 'position']);\n    var labelDistance = labelModel.get('distanceToLabelLine');\n    var labelAlignTo = labelModel.get('alignTo');\n    var edgeDistance = parsePercent(labelModel.get('edgeDistance'), viewWidth);\n    var bleedMargin = labelModel.get('bleedMargin');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    labelLineLen = parsePercent(labelLineLen, viewWidth);\n    var labelLineLen2 = labelLineModel.get('length2');\n    labelLineLen2 = parsePercent(labelLineLen2, viewWidth);\n\n    if (Math.abs(sectorShape.endAngle - sectorShape.startAngle) < minShowLabelRadian) {\n      each(label.states, setNotShow);\n      label.ignore = true;\n      return;\n    }\n\n    if (!isLabelShown(label)) {\n      return;\n    }\n\n    var midAngle = (sectorShape.startAngle + sectorShape.endAngle) / 2;\n    var nx = Math.cos(midAngle);\n    var ny = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = sectorShape.cx;\n    cy = sectorShape.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = sectorShape.cx;\n      textY = sectorShape.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * nx : sectorShape.r * nx) + cx;\n      var y1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * ny : sectorShape.r * ny) + cy;\n      textX = x1 + nx * 3;\n      textY = y1 + ny * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + nx * (labelLineLen + r - sectorShape.r);\n        var y2 = y1 + ny * (labelLineLen + r - sectorShape.r);\n        var x3 = x2 + (nx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n\n        if (labelAlignTo === 'edge') {\n          // Adjust textX because text align of edge is opposite\n          textX = nx < 0 ? viewLeft + edgeDistance : viewLeft + viewWidth - edgeDistance;\n        } else {\n          textX = x3 + (nx < 0 ? -labelDistance : labelDistance);\n        }\n\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : labelAlignTo === 'edge' ? nx > 0 ? 'right' : 'left' : nx > 0 ? 'left' : 'right';\n    }\n\n    var PI = Math.PI;\n    var labelRotate = 0;\n    var rotate = labelModel.get('rotate');\n\n    if (isNumber(rotate)) {\n      labelRotate = rotate * (PI / 180);\n    } else if (labelPosition === 'center') {\n      labelRotate = 0;\n    } else if (rotate === 'radial' || rotate === true) {\n      var radialAngle = nx < 0 ? -midAngle + PI : -midAngle;\n      labelRotate = radialAngle;\n    } else if (rotate === 'tangential' && labelPosition !== 'outside' && labelPosition !== 'outer') {\n      var rad = Math.atan2(nx, ny);\n\n      if (rad < 0) {\n        rad = PI * 2 + rad;\n      }\n\n      var isDown = ny > 0;\n\n      if (isDown) {\n        rad = PI + rad;\n      }\n\n      labelRotate = rad - PI;\n    }\n\n    hasLabelRotate = !!labelRotate;\n    label.x = textX;\n    label.y = textY;\n    label.rotation = labelRotate;\n    label.setStyle({\n      verticalAlign: 'middle'\n    }); // Not sectorShape the inside label\n\n    if (!isLabelInside) {\n      var textRect = label.getBoundingRect().clone();\n      textRect.applyTransform(label.getComputedTransform()); // Text has a default 1px stroke. Exclude this.\n\n      var margin = (label.style.margin || 0) + 2.1;\n      textRect.y -= margin / 2;\n      textRect.height += margin;\n      labelLayoutList.push({\n        label: label,\n        labelLine: labelLine,\n        position: labelPosition,\n        len: labelLineLen,\n        len2: labelLineLen2,\n        minTurnAngle: labelLineModel.get('minTurnAngle'),\n        maxSurfaceAngle: labelLineModel.get('maxSurfaceAngle'),\n        surfaceNormal: new Point(nx, ny),\n        linePoints: linePoints,\n        textAlign: textAlign,\n        labelDistance: labelDistance,\n        labelAlignTo: labelAlignTo,\n        edgeDistance: edgeDistance,\n        bleedMargin: bleedMargin,\n        rect: textRect,\n        unconstrainedWidth: textRect.width,\n        labelStyleWidth: label.style.width\n      });\n    } else {\n      label.setStyle({\n        align: textAlign\n      });\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    sector.setTextConfig({\n      inside: isLabelInside\n    });\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop);\n  }\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n    var labelLine = layout.labelLine;\n    var notShowLabel = isNaN(label.x) || isNaN(label.y);\n\n    if (label) {\n      label.setStyle({\n        align: layout.textAlign\n      });\n\n      if (notShowLabel) {\n        each(label.states, setNotShow);\n        label.ignore = true;\n      }\n\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    if (labelLine) {\n      var linePoints = layout.linePoints;\n\n      if (notShowLabel || !linePoints) {\n        each(labelLine.states, setNotShow);\n        labelLine.ignore = true;\n      } else {\n        limitTurnAngle(linePoints, layout.minTurnAngle);\n        limitSurfaceAngle(linePoints, layout.surfaceNormal, layout.maxSurfaceAngle);\n        labelLine.setShape({\n          points: linePoints\n        }); // Set the anchor to the midpoint of sector\n\n        label.__hostTarget.textGuideLineConfig = {\n          anchor: new Point(linePoints[0][0], linePoints[0][1])\n        };\n      }\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}