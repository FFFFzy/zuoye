{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _tslib = require(\"tslib\");\n\nvar _SeriesData = _interopRequireDefault(require(\"../../data/SeriesData.js\"));\n\nvar numberUtil = _interopRequireWildcard(require(\"../../util/number.js\"));\n\nvar markerHelper = _interopRequireWildcard(require(\"./markerHelper.js\"));\n\nvar _LineDraw = _interopRequireDefault(require(\"../../chart/helper/LineDraw.js\"));\n\nvar _MarkerView = _interopRequireDefault(require(\"./MarkerView.js\"));\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper.js\");\n\nvar _CoordinateSystem = require(\"../../coord/CoordinateSystem.js\");\n\nvar _innerStore = require(\"../../util/innerStore.js\");\n\nvar _MarkerModel = _interopRequireDefault(require(\"./MarkerModel.js\"));\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar _model = require(\"../../util/model.js\");\n\nvar _helper = require(\"../../visual/helper.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = (0, _model.makeInner)();\n\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData();\n  var itemArray;\n\n  if (!(0, _util.isArray)(item)) {\n    // Special type markLine like 'min', 'max', 'average', 'median'\n    var mlType = item.type;\n\n    if (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n    // data: [{\n    //   yAxis: 10\n    // }]\n    || item.xAxis != null || item.yAxis != null) {\n      var valueAxis = void 0;\n      var value = void 0;\n\n      if (item.yAxis != null || item.xAxis != null) {\n        valueAxis = coordSys.getAxis(item.yAxis != null ? 'y' : 'x');\n        value = (0, _util.retrieve)(item.yAxis, item.xAxis);\n      } else {\n        var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n        valueAxis = axisInfo.valueAxis;\n        var valueDataDim = (0, _dataStackHelper.getStackedDimension)(data, axisInfo.valueDataDim);\n        value = markerHelper.numCalculate(data, valueDataDim, mlType);\n      }\n\n      var valueIndex = valueAxis.dim === 'x' ? 0 : 1;\n      var baseIndex = 1 - valueIndex; // Normized to 2d data with start and end point\n\n      var mlFrom = (0, _util.clone)(item);\n      var mlTo = {\n        coord: []\n      };\n      mlFrom.type = null;\n      mlFrom.coord = [];\n      mlFrom.coord[baseIndex] = -Infinity;\n      mlTo.coord[baseIndex] = Infinity;\n      var precision = mlModel.get('precision');\n\n      if (precision >= 0 && (0, _util.isNumber)(value)) {\n        value = +value.toFixed(Math.min(precision, 20));\n      }\n\n      mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n      itemArray = [mlFrom, mlTo, {\n        type: mlType,\n        valueIndex: item.valueIndex,\n        // Force to use the value of calculated value.\n        value: value\n      }];\n    } else {\n      // Invalid data\n      if (process.env.NODE_ENV !== 'production') {\n        (0, _util.logError)('Invalid markLine data.');\n      }\n\n      itemArray = [];\n    }\n  } else {\n    itemArray = item;\n  }\n\n  var normalizedItem = [markerHelper.dataTransform(seriesModel, itemArray[0]), markerHelper.dataTransform(seriesModel, itemArray[1]), (0, _util.extend)({}, itemArray[2])]; // Avoid line data type is extended by from(to) data type\n\n  normalizedItem[2].type = normalizedItem[2].type || null; // Merge from option and to option into line option\n\n  (0, _util.merge)(normalizedItem[2], normalizedItem[0]);\n  (0, _util.merge)(normalizedItem[2], normalizedItem[1]);\n  return normalizedItem;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if ((0, _CoordinateSystem.isCoordinateSystemType)(coordSys, 'cartesian2d')) {\n      // TODO: TYPE ts@4.1 may still infer it as Axis instead of Axis2D. Not sure if it's a bug\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar MarkLineView =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(MarkLineView, _super);\n\n  function MarkLineView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = MarkLineView.type;\n    return _this;\n  }\n\n  MarkLineView.prototype.updateTransform = function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = _MarkerModel.default.getMarkerModelFromSeries(seriesModel, 'markLine');\n\n      if (mlModel) {\n        var mlData_1 = mlModel.getData();\n        var fromData_1 = inner(mlModel).from;\n        var toData_1 = inner(mlModel).to; // Update visual and layout of from symbol and to symbol\n\n        fromData_1.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData_1, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData_1, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData_1.each(function (idx) {\n          mlData_1.setItemLayout(idx, [fromData_1.getItemLayout(idx), toData_1.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  };\n\n  MarkLineView.prototype.renderSeries = function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new _LineDraw.default());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    inner(mlModel).from = fromData;\n    inner(mlModel).to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData); // TODO\n    // Functionally, `symbolSize` & `symbolOffset` can also be 2D array now.\n    // But the related logic and type definition are not finished yet.\n    // Finish it if required\n\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n    var symbolRotate = mlModel.get('symbolRotate');\n    var symbolOffset = mlModel.get('symbolOffset'); // TODO: support callback function like markPoint\n\n    if (!(0, _util.isArray)(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (!(0, _util.isArray)(symbolSize)) {\n      symbolSize = [symbolSize, symbolSize];\n    }\n\n    if (!(0, _util.isArray)(symbolRotate)) {\n      symbolRotate = [symbolRotate, symbolRotate];\n    }\n\n    if (!(0, _util.isArray)(symbolOffset)) {\n      symbolOffset = [symbolOffset, symbolOffset];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineStyle = lineData.getItemModel(idx).getModel('lineStyle').getLineStyle(); // lineData.setItemVisual(idx, {\n      //     color: lineColor || fromData.getItemVisual(idx, 'color')\n      // });\n\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n\n      if (lineStyle.stroke == null) {\n        lineStyle.stroke = fromData.getItemVisual(idx, 'style').fill;\n      }\n\n      lineData.setItemVisual(idx, {\n        fromSymbolKeepAspect: fromData.getItemVisual(idx, 'symbolKeepAspect'),\n        fromSymbolOffset: fromData.getItemVisual(idx, 'symbolOffset'),\n        fromSymbolRotate: fromData.getItemVisual(idx, 'symbolRotate'),\n        fromSymbolSize: fromData.getItemVisual(idx, 'symbolSize'),\n        fromSymbol: fromData.getItemVisual(idx, 'symbol'),\n        toSymbolKeepAspect: toData.getItemVisual(idx, 'symbolKeepAspect'),\n        toSymbolOffset: toData.getItemVisual(idx, 'symbolOffset'),\n        toSymbolRotate: toData.getItemVisual(idx, 'symbolRotate'),\n        toSymbolSize: toData.getItemVisual(idx, 'symbolSize'),\n        toSymbol: toData.getItemVisual(idx, 'symbol'),\n        style: lineStyle\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el) {\n      (0, _innerStore.getECData)(el).dataModel = mlModel;\n      el.traverse(function (child) {\n        (0, _innerStore.getECData)(child).dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      var style = itemModel.getModel('itemStyle').getItemStyle();\n\n      if (style.fill == null) {\n        style.fill = (0, _helper.getVisualFromData)(seriesData, 'color');\n      }\n\n      data.setItemVisual(idx, {\n        symbolKeepAspect: itemModel.get('symbolKeepAspect'),\n        // `0` should be considered as a valid value, so use `retrieve2` instead of `||`\n        symbolOffset: (0, _util.retrieve2)(itemModel.get('symbolOffset', true), symbolOffset[isFrom ? 0 : 1]),\n        symbolRotate: (0, _util.retrieve2)(itemModel.get('symbolRotate', true), symbolRotate[isFrom ? 0 : 1]),\n        // TODO: when 2d array is supported, it should ignore parent\n        symbolSize: (0, _util.retrieve2)(itemModel.get('symbolSize'), symbolSize[isFrom ? 0 : 1]),\n        symbol: (0, _util.retrieve2)(itemModel.get('symbol', true), symbolType[isFrom ? 0 : 1]),\n        style: style\n      });\n    }\n\n    this.markKeep(lineDraw);\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  };\n\n  MarkLineView.type = 'markLine';\n  return MarkLineView;\n}(_MarkerView.default);\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = (0, _util.map)(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return (0, _util.extend)((0, _util.extend)({}, info), {\n        name: coordDim,\n        // DON'T use ordinalMeta to parse and collect ordinal.\n        ordinalMeta: null\n      });\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new _SeriesData.default(coordDimsInfos, mlModel);\n  var toData = new _SeriesData.default(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new _SeriesData.default([], mlModel);\n  var optData = (0, _util.map)(mlModel.get('data'), (0, _util.curry)(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = (0, _util.filter)(optData, (0, _util.curry)(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = markerHelper.createMarkerDimValueGetter(!!coordSys, coordDimsInfos);\n  fromData.initData((0, _util.map)(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData((0, _util.map)(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData((0, _util.map)(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nvar _default = MarkLineView;\nexports.default = _default;","map":{"version":3,"names":["inner","makeInner","markLineTransform","seriesModel","coordSys","mlModel","item","data","getData","itemArray","isArray","mlType","type","xAxis","yAxis","valueAxis","value","getAxis","retrieve","axisInfo","markerHelper","getAxisInfo","valueDataDim","getStackedDimension","numCalculate","valueIndex","dim","baseIndex","mlFrom","clone","mlTo","coord","Infinity","precision","get","isNumber","toFixed","Math","min","process","env","NODE_ENV","logError","normalizedItem","dataTransform","extend","merge","isInifinity","val","isNaN","isFinite","ifMarkLineHasOnlyDim","dimIndex","fromCoord","toCoord","otherDimIndex","dimName","dimensions","containData","markLineFilter","dataFilter","updateSingleMarkerEndLayout","idx","isFrom","api","coordinateSystem","itemModel","getItemModel","point","xPx","numberUtil","parsePercent","getWidth","yPx","getHeight","getMarkerPosition","getValues","dims","x","y","dataToPoint","isCoordinateSystemType","toGlobalCoord","getExtent","setItemLayout","MarkLineView","_super","__extends","_this","apply","arguments","prototype","updateTransform","markLineModel","ecModel","eachSeries","MarkerModel","getMarkerModelFromSeries","mlData_1","fromData_1","from","toData_1","to","each","getItemLayout","markerGroupMap","id","updateLayout","renderSeries","seriesId","seriesData","lineDrawMap","lineDraw","set","LineDraw","group","add","mlData","createList","fromData","toData","lineData","line","setData","symbolType","symbolSize","symbolRotate","symbolOffset","updateDataVisualAndLayout","lineStyle","getModel","getLineStyle","stroke","getItemVisual","fill","setItemVisual","fromSymbolKeepAspect","fromSymbolOffset","fromSymbolRotate","fromSymbolSize","fromSymbol","toSymbolKeepAspect","toSymbolOffset","toSymbolRotate","toSymbolSize","toSymbol","style","updateData","eachItemGraphicEl","el","getECData","dataModel","traverse","child","getItemStyle","getVisualFromData","symbolKeepAspect","retrieve2","symbol","markKeep","silent","MarkerView","coordDimsInfos","map","coordDim","info","getDimensionInfo","mapDimension","name","ordinalMeta","SeriesData","optData","curry","filter","dimValueGetter","createMarkerDimValueGetter","initData","hasItemOption"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/component/marker/MarkLineView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SeriesData from '../../data/SeriesData.js';\nimport * as numberUtil from '../../util/number.js';\nimport * as markerHelper from './markerHelper.js';\nimport LineDraw from '../../chart/helper/LineDraw.js';\nimport MarkerView from './MarkerView.js';\nimport { getStackedDimension } from '../../data/helper/dataStackHelper.js';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem.js';\nimport { getECData } from '../../util/innerStore.js';\nimport MarkerModel from './MarkerModel.js';\nimport { isArray, retrieve, retrieve2, clone, extend, logError, merge, map, curry, filter, isNumber } from 'zrender/lib/core/util.js';\nimport { makeInner } from '../../util/model.js';\nimport { getVisualFromData } from '../../visual/helper.js';\nvar inner = makeInner();\n\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData();\n  var itemArray;\n\n  if (!isArray(item)) {\n    // Special type markLine like 'min', 'max', 'average', 'median'\n    var mlType = item.type;\n\n    if (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n    // data: [{\n    //   yAxis: 10\n    // }]\n    || item.xAxis != null || item.yAxis != null) {\n      var valueAxis = void 0;\n      var value = void 0;\n\n      if (item.yAxis != null || item.xAxis != null) {\n        valueAxis = coordSys.getAxis(item.yAxis != null ? 'y' : 'x');\n        value = retrieve(item.yAxis, item.xAxis);\n      } else {\n        var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n        valueAxis = axisInfo.valueAxis;\n        var valueDataDim = getStackedDimension(data, axisInfo.valueDataDim);\n        value = markerHelper.numCalculate(data, valueDataDim, mlType);\n      }\n\n      var valueIndex = valueAxis.dim === 'x' ? 0 : 1;\n      var baseIndex = 1 - valueIndex; // Normized to 2d data with start and end point\n\n      var mlFrom = clone(item);\n      var mlTo = {\n        coord: []\n      };\n      mlFrom.type = null;\n      mlFrom.coord = [];\n      mlFrom.coord[baseIndex] = -Infinity;\n      mlTo.coord[baseIndex] = Infinity;\n      var precision = mlModel.get('precision');\n\n      if (precision >= 0 && isNumber(value)) {\n        value = +value.toFixed(Math.min(precision, 20));\n      }\n\n      mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n      itemArray = [mlFrom, mlTo, {\n        type: mlType,\n        valueIndex: item.valueIndex,\n        // Force to use the value of calculated value.\n        value: value\n      }];\n    } else {\n      // Invalid data\n      if (process.env.NODE_ENV !== 'production') {\n        logError('Invalid markLine data.');\n      }\n\n      itemArray = [];\n    }\n  } else {\n    itemArray = item;\n  }\n\n  var normalizedItem = [markerHelper.dataTransform(seriesModel, itemArray[0]), markerHelper.dataTransform(seriesModel, itemArray[1]), extend({}, itemArray[2])]; // Avoid line data type is extended by from(to) data type\n\n  normalizedItem[2].type = normalizedItem[2].type || null; // Merge from option and to option into line option\n\n  merge(normalizedItem[2], normalizedItem[0]);\n  merge(normalizedItem[2], normalizedItem[1]);\n  return normalizedItem;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n      // TODO: TYPE ts@4.1 may still infer it as Axis instead of Axis2D. Not sure if it's a bug\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar MarkLineView =\n/** @class */\nfunction (_super) {\n  __extends(MarkLineView, _super);\n\n  function MarkLineView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = MarkLineView.type;\n    return _this;\n  }\n\n  MarkLineView.prototype.updateTransform = function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = MarkerModel.getMarkerModelFromSeries(seriesModel, 'markLine');\n\n      if (mlModel) {\n        var mlData_1 = mlModel.getData();\n        var fromData_1 = inner(mlModel).from;\n        var toData_1 = inner(mlModel).to; // Update visual and layout of from symbol and to symbol\n\n        fromData_1.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData_1, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData_1, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData_1.each(function (idx) {\n          mlData_1.setItemLayout(idx, [fromData_1.getItemLayout(idx), toData_1.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  };\n\n  MarkLineView.prototype.renderSeries = function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    inner(mlModel).from = fromData;\n    inner(mlModel).to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData); // TODO\n    // Functionally, `symbolSize` & `symbolOffset` can also be 2D array now.\n    // But the related logic and type definition are not finished yet.\n    // Finish it if required\n\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n    var symbolRotate = mlModel.get('symbolRotate');\n    var symbolOffset = mlModel.get('symbolOffset'); // TODO: support callback function like markPoint\n\n    if (!isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (!isArray(symbolSize)) {\n      symbolSize = [symbolSize, symbolSize];\n    }\n\n    if (!isArray(symbolRotate)) {\n      symbolRotate = [symbolRotate, symbolRotate];\n    }\n\n    if (!isArray(symbolOffset)) {\n      symbolOffset = [symbolOffset, symbolOffset];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineStyle = lineData.getItemModel(idx).getModel('lineStyle').getLineStyle(); // lineData.setItemVisual(idx, {\n      //     color: lineColor || fromData.getItemVisual(idx, 'color')\n      // });\n\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n\n      if (lineStyle.stroke == null) {\n        lineStyle.stroke = fromData.getItemVisual(idx, 'style').fill;\n      }\n\n      lineData.setItemVisual(idx, {\n        fromSymbolKeepAspect: fromData.getItemVisual(idx, 'symbolKeepAspect'),\n        fromSymbolOffset: fromData.getItemVisual(idx, 'symbolOffset'),\n        fromSymbolRotate: fromData.getItemVisual(idx, 'symbolRotate'),\n        fromSymbolSize: fromData.getItemVisual(idx, 'symbolSize'),\n        fromSymbol: fromData.getItemVisual(idx, 'symbol'),\n        toSymbolKeepAspect: toData.getItemVisual(idx, 'symbolKeepAspect'),\n        toSymbolOffset: toData.getItemVisual(idx, 'symbolOffset'),\n        toSymbolRotate: toData.getItemVisual(idx, 'symbolRotate'),\n        toSymbolSize: toData.getItemVisual(idx, 'symbolSize'),\n        toSymbol: toData.getItemVisual(idx, 'symbol'),\n        style: lineStyle\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el) {\n      getECData(el).dataModel = mlModel;\n      el.traverse(function (child) {\n        getECData(child).dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      var style = itemModel.getModel('itemStyle').getItemStyle();\n\n      if (style.fill == null) {\n        style.fill = getVisualFromData(seriesData, 'color');\n      }\n\n      data.setItemVisual(idx, {\n        symbolKeepAspect: itemModel.get('symbolKeepAspect'),\n        // `0` should be considered as a valid value, so use `retrieve2` instead of `||`\n        symbolOffset: retrieve2(itemModel.get('symbolOffset', true), symbolOffset[isFrom ? 0 : 1]),\n        symbolRotate: retrieve2(itemModel.get('symbolRotate', true), symbolRotate[isFrom ? 0 : 1]),\n        // TODO: when 2d array is supported, it should ignore parent\n        symbolSize: retrieve2(itemModel.get('symbolSize'), symbolSize[isFrom ? 0 : 1]),\n        symbol: retrieve2(itemModel.get('symbol', true), symbolType[isFrom ? 0 : 1]),\n        style: style\n      });\n    }\n\n    this.markKeep(lineDraw);\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  };\n\n  MarkLineView.type = 'markLine';\n  return MarkLineView;\n}(MarkerView);\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return extend(extend({}, info), {\n        name: coordDim,\n        // DON'T use ordinalMeta to parse and collect ordinal.\n        ordinalMeta: null\n      });\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new SeriesData(coordDimsInfos, mlModel);\n  var toData = new SeriesData(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new SeriesData([], mlModel);\n  var optData = map(mlModel.get('data'), curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = filter(optData, curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = markerHelper.createMarkerDimValueGetter(!!coordSys, coordDimsInfos);\n  fromData.initData(map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nexport default MarkLineView;"],"mappings":"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"},"metadata":{},"sourceType":"script"}