{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _tslib = require(\"tslib\");\n\nvar zrUtil = _interopRequireWildcard(require(\"zrender/lib/core/util.js\"));\n\nvar _SymbolDraw = _interopRequireDefault(require(\"../helper/SymbolDraw.js\"));\n\nvar _Symbol = _interopRequireDefault(require(\"../helper/Symbol.js\"));\n\nvar _lineAnimationDiff = _interopRequireDefault(require(\"./lineAnimationDiff.js\"));\n\nvar graphic = _interopRequireWildcard(require(\"../../util/graphic.js\"));\n\nvar modelUtil = _interopRequireWildcard(require(\"../../util/model.js\"));\n\nvar _poly = require(\"./poly.js\");\n\nvar _Chart = _interopRequireDefault(require(\"../../view/Chart.js\"));\n\nvar _helper = require(\"./helper.js\");\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys.js\");\n\nvar _CoordinateSystem = require(\"../../coord/CoordinateSystem.js\");\n\nvar _states = require(\"../../util/states.js\");\n\nvar _labelStyle = require(\"../../label/labelStyle.js\");\n\nvar _labelHelper = require(\"../helper/labelHelper.js\");\n\nvar _innerStore = require(\"../../util/innerStore.js\");\n\nvar _vendor = require(\"../../util/vendor.js\");\n\nvar _format = require(\"../../util/format.js\");\n\nvar _color = require(\"zrender/lib/tool/color.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    if (points1[i] !== points2[i]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction bboxFromPoints(points) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n\n  for (var i = 0; i < points.length;) {\n    var x = points[i++];\n    var y = points[i++];\n\n    if (!isNaN(x)) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n    }\n\n    if (!isNaN(y)) {\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [[minX, minY], [maxX, maxY]];\n}\n\nfunction getBoundingDiff(points1, points2) {\n  var _a = bboxFromPoints(points1),\n      min1 = _a[0],\n      max1 = _a[1];\n\n  var _b = bboxFromPoints(points2),\n      min2 = _b[0],\n      max2 = _b[1]; // Get a max value from each corner of two boundings.\n\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\n\nfunction getSmooth(smooth) {\n  return zrUtil.isNumber(smooth) ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var len = data.count();\n  var points = (0, _vendor.createFloat32Array)(len * 2);\n\n  for (var idx = 0; idx < len; idx++) {\n    var pt = (0, _helper.getStackedOnPoint)(dataCoordInfo, coordSys, data, idx);\n    points[idx * 2] = pt[0];\n    points[idx * 2 + 1] = pt[1];\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt, connectNulls) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n  var i = 0;\n  var stepPt = [];\n  var pt = [];\n  var nextPt = [];\n  var filteredPoints = [];\n\n  if (connectNulls) {\n    for (i = 0; i < points.length; i += 2) {\n      if (!isNaN(points[i]) && !isNaN(points[i + 1])) {\n        filteredPoints.push(points[i], points[i + 1]);\n      }\n    }\n\n    points = filteredPoints;\n  }\n\n  for (i = 0; i < points.length - 2; i += 2) {\n    nextPt[0] = points[i + 2];\n    nextPt[1] = points[i + 3];\n    pt[0] = points[i];\n    pt[1] = points[i + 1];\n    stepPoints.push(pt[0], pt[1]);\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        break;\n\n      case 'middle':\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        stepPoints.push(stepPt2[0], stepPt2[1]);\n        break;\n\n      default:\n        // default is start\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n    }\n  } // Last points\n\n\n  stepPoints.push(points[i++], points[i++]);\n  return stepPoints;\n}\n/**\n * Clip color stops to edge. Avoid creating too large gradients.\n * Which may lead to blurry when GPU acceleration is enabled. See #15680\n *\n * The stops has been sorted from small to large.\n */\n\n\nfunction clipColorStops(colorStops, maxSize) {\n  var newColorStops = [];\n  var len = colorStops.length; // coord will always < 0 in prevOutOfRangeColorStop.\n\n  var prevOutOfRangeColorStop;\n  var prevInRangeColorStop;\n\n  function lerpStop(stop0, stop1, clippedCoord) {\n    var coord0 = stop0.coord;\n    var p = (clippedCoord - coord0) / (stop1.coord - coord0);\n    var color = (0, _color.lerp)(p, [stop0.color, stop1.color]);\n    return {\n      coord: clippedCoord,\n      color: color\n    };\n  }\n\n  for (var i = 0; i < len; i++) {\n    var stop_1 = colorStops[i];\n    var coord = stop_1.coord;\n\n    if (coord < 0) {\n      prevOutOfRangeColorStop = stop_1;\n    } else if (coord > maxSize) {\n      if (prevInRangeColorStop) {\n        newColorStops.push(lerpStop(prevInRangeColorStop, stop_1, maxSize));\n      } else if (prevOutOfRangeColorStop) {\n        // If there are two stops and coord range is between these two stops\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0), lerpStop(prevOutOfRangeColorStop, stop_1, maxSize));\n      } // All following stop will be out of range. So just ignore them.\n\n\n      break;\n    } else {\n      if (prevOutOfRangeColorStop) {\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0)); // Reset\n\n        prevOutOfRangeColorStop = null;\n      }\n\n      newColorStops.push(stop_1);\n      prevInRangeColorStop = stop_1;\n    }\n  }\n\n  return newColorStops;\n}\n\nfunction getVisualGradient(data, coordSys, api) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style is only supported on cartesian2d.');\n    }\n\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimInfo = data.getDimensionInfo(visualMetaList[i].dimension);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style only support x or y dimension.');\n    }\n\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoord mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    // offset will be calculated later.\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var colorStopsInRange = clipColorStops(colorStops, coordDim === 'x' ? api.getWidth() : api.getHeight());\n  var inRangeStopLen = colorStopsInRange.length;\n\n  if (!inRangeStopLen && stopLen) {\n    // All stops are out of range. All will be the same color.\n    return colorStops[0].coord < 0 ? outerColors[1] ? outerColors[1] : colorStops[stopLen - 1].color : outerColors[0] ? outerColors[0] : colorStops[0].color;\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStopsInRange[0].coord - tinyExtent;\n  var maxCoord = colorStopsInRange[inRangeStopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStopsInRange, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStopsInRange.push({\n    // NOTE: inRangeStopLen may still be 0 if stoplen is zero.\n    offset: inRangeStopLen ? colorStopsInRange[inRangeStopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStopsInRange.unshift({\n    offset: inRangeStopLen ? colorStopsInRange[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  });\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStopsInRange, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    var ordinalNumber = categoryAxis.scale.getRawOrdinalNumber(labelItem.tickValue);\n    labelMap[ordinalNumber] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (_Symbol.default.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isPointNull(x, y) {\n  return isNaN(x) || isNaN(y);\n}\n\nfunction getLastIndexNotNull(points) {\n  var len = points.length / 2;\n\n  for (; len > 0; len--) {\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n      break;\n    }\n  }\n\n  return len - 1;\n}\n\nfunction getPointAtIndex(points, idx) {\n  return [points[idx * 2], points[idx * 2 + 1]];\n}\n\nfunction getIndexRange(points, xOrY, dim) {\n  var len = points.length / 2;\n  var dimIdx = dim === 'x' ? 0 : 1;\n  var a;\n  var b;\n  var prevIndex = 0;\n  var nextIndex = -1;\n\n  for (var i = 0; i < len; i++) {\n    b = points[i * 2 + dimIdx];\n\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\n      continue;\n    }\n\n    if (i === 0) {\n      a = b;\n      continue;\n    }\n\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\n      nextIndex = i;\n      break;\n    }\n\n    prevIndex = i;\n    a = b;\n  }\n\n  return {\n    range: [prevIndex, nextIndex],\n    t: (xOrY - a) / (b - a)\n  };\n}\n\nfunction anyStateShowEndLabel(seriesModel) {\n  if (seriesModel.get(['endLabel', 'show'])) {\n    return true;\n  }\n\n  for (var i = 0; i < _states.SPECIAL_STATES.length; i++) {\n    if (seriesModel.get([_states.SPECIAL_STATES[i], 'endLabel', 'show'])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\n  if ((0, _CoordinateSystem.isCoordinateSystemType)(coordSys, 'cartesian2d')) {\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\n    var data_1 = seriesModel.getData();\n    var labelAnimationRecord_1 = {\n      lastFrameIndex: 0\n    };\n    var during = anyStateShowEndLabel(seriesModel) ? function (percent, clipRect) {\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\n    } : null;\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = (0, _createClipPathFromCoordSys.createGridClipPath)(coordSys, hasAnimation, seriesModel, function () {\n      var endLabel = lineView._endLabel;\n\n      if (endLabel && hasAnimation) {\n        if (labelAnimationRecord_1.originalX != null) {\n          endLabel.attr({\n            x: labelAnimationRecord_1.originalX,\n            y: labelAnimationRecord_1.originalY\n          });\n        }\n      }\n    }, during); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    } // Set to the final frame. To make sure label layout is right.\n\n\n    if (during) {\n      during(1, clipPath);\n    }\n\n    return clipPath;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (seriesModel.get(['endLabel', 'show'])) {\n        console.warn('endLabel is not supported for lines in polar systems.');\n      }\n    }\n\n    return (0, _createClipPathFromCoordSys.createPolarClipPath)(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\n  var baseAxis = coordSys.getBaseAxis();\n  var isHorizontal = baseAxis.isHorizontal();\n  var isBaseInversed = baseAxis.inverse;\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\n  return {\n    normal: {\n      align: endLabelModel.get('align') || align,\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign\n    }\n  };\n}\n\nvar LineView =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(LineView, _super);\n\n  function LineView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LineView.prototype.init = function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new _SymbolDraw.default();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  };\n\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.getLayout('points') || [];\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = (0, _helper.prepareDataCoordInfo)(coordSys, data, valueOrigin);\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var connectNulls = seriesModel.get('connectNulls');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r += 0.5;\n      }\n    }\n\n    this._clipShapeForSymbol = clipShapeForSymbol;\n    var visualColor = getVisualGradient(data, coordSys, api) || data.getVisual('style')[data.getVisual('drawType')]; // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step, connectNulls);\n\n        if (stackedOnPoints) {\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step, connectNulls);\n        }\n      }\n\n      polyline = this._newPolyline(points);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } // If areaStyle is removed\n      else if (polygon) {\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, (0, _format.convertToColorString)(visualColor));\n      }\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, (0, _format.convertToColorString)(visualColor));\n      } // Update clipPath\n\n\n      var oldClipPath = lineGroup.getClipPath();\n\n      if (oldClipPath) {\n        var newClipPath = createLineClipPath(this, coordSys, false, seriesModel);\n        graphic.initProps(oldClipPath, {\n          shape: newClipPath.shape\n        }, seriesModel);\n      } else {\n        lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n      } // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step, connectNulls);\n\n            if (stackedOnPoints) {\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step, connectNulls);\n            }\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var emphasisModel = seriesModel.getModel('emphasis');\n    var focus = emphasisModel.get('focus');\n    var blurScope = emphasisModel.get('blurScope');\n    var emphasisDisabled = emphasisModel.get('disabled');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    (0, _states.setStatesStylesFromModel)(polyline, seriesModel, 'lineStyle');\n\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\n      var emphasisLineStyle = polyline.getState('emphasis').style;\n      emphasisLineStyle.lineWidth = +polyline.style.lineWidth + 1;\n    } // Needs seriesIndex for focus\n\n\n    (0, _innerStore.getECData)(polyline).seriesIndex = seriesModel.seriesIndex;\n    (0, _states.toggleHoverEmphasis)(polyline, focus, blurScope, emphasisDisabled);\n    var smooth = getSmooth(seriesModel.get('smooth'));\n    var smoothMonotone = seriesModel.get('smoothMonotone');\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: smoothMonotone,\n      connectNulls: connectNulls\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel',\n        decal: data.getVisual('style').decal\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: smoothMonotone,\n        connectNulls: connectNulls\n      });\n      (0, _states.setStatesStylesFromModel)(polygon, seriesModel, 'areaStyle'); // Needs seriesIndex for focus\n\n      (0, _innerStore.getECData)(polygon).seriesIndex = seriesModel.seriesIndex;\n      (0, _states.toggleHoverEmphasis)(polygon, focus, blurScope, emphasisDisabled);\n    }\n\n    var changePolyState = function (toState) {\n      _this._changePolyState(toState);\n    };\n\n    data.eachItemGraphicEl(function (el) {\n      // Switch polyline / polygon state if element changed its state.\n      el && (el.onHoverStateChange = changePolyState);\n    });\n    this._polyline.onHoverStateChange = changePolyState;\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n\n    if (seriesModel.get('triggerLineEvent')) {\n      this.packEventData(seriesModel, polyline);\n      polygon && this.packEventData(seriesModel, polygon);\n    }\n  };\n\n  LineView.prototype.packEventData = function (seriesModel, el) {\n    (0, _innerStore.getECData)(el).eventData = {\n      componentType: 'series',\n      componentSubType: 'line',\n      componentIndex: seriesModel.componentIndex,\n      seriesIndex: seriesModel.seriesIndex,\n      seriesName: seriesModel.name,\n      seriesType: 'line'\n    };\n  };\n\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('emphasis');\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var points = data.getLayout('points');\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var x = points[dataIndex * 2];\n        var y = points[dataIndex * 2 + 1];\n\n        if (isNaN(x) || isNaN(y)) {\n          // Null data\n          return;\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\n\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\n          return;\n        }\n\n        var zlevel = seriesModel.get('zlevel');\n        var z = seriesModel.get('z');\n        symbol = new _Symbol.default(data, dataIndex);\n        symbol.x = x;\n        symbol.y = y;\n        symbol.setZ(zlevel, z); // ensure label text of the temporary symbol is in front of line and area polygon\n\n        var symbolLabel = symbol.getSymbolPath().getTextContent();\n\n        if (symbolLabel) {\n          symbolLabel.zlevel = zlevel;\n          symbolLabel.z = z;\n          symbolLabel.z2 = this._polyline.z2 + 1;\n        }\n\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      _Chart.default.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('normal');\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      _Chart.default.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype._changePolyState = function (toState) {\n    var polygon = this._polygon;\n    (0, _states.setStatesFlag)(this._polyline, toState);\n    polygon && (0, _states.setStatesFlag)(polygon, toState);\n  };\n\n  LineView.prototype._newPolyline = function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new _poly.ECPolyline({\n      shape: {\n        points: points\n      },\n      segmentIgnoreThreshold: 2,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  };\n\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new _poly.ECPolygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      segmentIgnoreThreshold: 2\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  };\n\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\n    var isHorizontalOrRadial;\n    var isCoordSysPolar;\n    var baseAxis = coordSys.getBaseAxis();\n    var isAxisInverse = baseAxis.inverse;\n\n    if (coordSys.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n      isCoordSysPolar = false;\n    } else if (coordSys.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n      isCoordSysPolar = true;\n    }\n\n    var seriesModel = data.hostModel;\n    var seriesDuration = seriesModel.get('animationDuration');\n\n    if (zrUtil.isFunction(seriesDuration)) {\n      seriesDuration = seriesDuration(null);\n    }\n\n    var seriesDalay = seriesModel.get('animationDelay') || 0;\n    var seriesDalayValue = zrUtil.isFunction(seriesDalay) ? seriesDalay(null) : seriesDalay;\n    data.eachItemGraphicEl(function (symbol, idx) {\n      var el = symbol;\n\n      if (el) {\n        var point = [symbol.x, symbol.y];\n        var start = void 0;\n        var end = void 0;\n        var current = void 0;\n\n        if (clipShape) {\n          if (isCoordSysPolar) {\n            var polarClip = clipShape;\n            var coord = coordSys.pointToCoord(point);\n\n            if (isHorizontalOrRadial) {\n              start = polarClip.startAngle;\n              end = polarClip.endAngle;\n              current = -coord[1] / 180 * Math.PI;\n            } else {\n              start = polarClip.r0;\n              end = polarClip.r;\n              current = coord[0];\n            }\n          } else {\n            var gridClip = clipShape;\n\n            if (isHorizontalOrRadial) {\n              start = gridClip.x;\n              end = gridClip.x + gridClip.width;\n              current = symbol.x;\n            } else {\n              start = gridClip.y + gridClip.height;\n              end = gridClip.y;\n              current = symbol.y;\n            }\n          }\n        }\n\n        var ratio = end === start ? 0 : (current - start) / (end - start);\n\n        if (isAxisInverse) {\n          ratio = 1 - ratio;\n        }\n\n        var delay = zrUtil.isFunction(seriesDalay) ? seriesDalay(idx) : seriesDuration * ratio + seriesDalayValue;\n        var symbolPath = el.getSymbolPath();\n        var text = symbolPath.getTextContent();\n        el.attr({\n          scaleX: 0,\n          scaleY: 0\n        });\n        el.animateTo({\n          scaleX: 1,\n          scaleY: 1\n        }, {\n          duration: 200,\n          setToFinal: true,\n          delay: delay\n        });\n\n        if (text) {\n          text.animateFrom({\n            style: {\n              opacity: 0\n            }\n          }, {\n            duration: 300,\n            delay: delay\n          });\n        }\n\n        symbolPath.disableLabelAnimation = true;\n      }\n    });\n  };\n\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys, inheritColor) {\n    var endLabelModel = seriesModel.getModel('endLabel');\n\n    if (anyStateShowEndLabel(seriesModel)) {\n      var data_2 = seriesModel.getData();\n      var polyline = this._polyline; // series may be filtered.\n\n      var points = data_2.getLayout('points');\n\n      if (!points) {\n        polyline.removeTextContent();\n        this._endLabel = null;\n        return;\n      }\n\n      var endLabel = this._endLabel;\n\n      if (!endLabel) {\n        endLabel = this._endLabel = new graphic.Text({\n          z2: 200 // should be higher than item symbol\n\n        });\n        endLabel.ignoreClip = true;\n        polyline.setTextContent(this._endLabel);\n        polyline.disableLabelAnimation = true;\n      } // Find last non-NaN data to display data\n\n\n      var dataIndex = getLastIndexNotNull(points);\n\n      if (dataIndex >= 0) {\n        (0, _labelStyle.setLabelStyle)(polyline, (0, _labelStyle.getLabelStatesModels)(seriesModel, 'endLabel'), {\n          inheritColor: inheritColor,\n          labelFetcher: seriesModel,\n          labelDataIndex: dataIndex,\n          defaultText: function (dataIndex, opt, interpolatedValue) {\n            return interpolatedValue != null ? (0, _labelHelper.getDefaultInterpolatedLabel)(data_2, interpolatedValue) : (0, _labelHelper.getDefaultLabel)(data_2, dataIndex);\n          },\n          enableTextSetter: true\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\n        polyline.textConfig.position = null;\n      }\n    } else if (this._endLabel) {\n      this._polyline.removeTextContent();\n\n      this._endLabel = null;\n    }\n  };\n\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\n    var endLabel = this._endLabel;\n    var polyline = this._polyline;\n\n    if (endLabel) {\n      // NOTE: Don't remove percent < 1. percent === 1 means the first frame during render.\n      // The label is not prepared at this time.\n      if (percent < 1 && animationRecord.originalX == null) {\n        animationRecord.originalX = endLabel.x;\n        animationRecord.originalY = endLabel.y;\n      }\n\n      var points = data.getLayout('points');\n      var seriesModel = data.hostModel;\n      var connectNulls = seriesModel.get('connectNulls');\n      var precision = endLabelModel.get('precision');\n      var distance = endLabelModel.get('distance') || 0;\n      var baseAxis = coordSys.getBaseAxis();\n      var isHorizontal = baseAxis.isHorizontal();\n      var isBaseInversed = baseAxis.inverse;\n      var clipShape = clipRect.shape;\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\n      var distanceX = (isHorizontal ? distance : 0) * (isBaseInversed ? -1 : 1);\n      var distanceY = (isHorizontal ? 0 : -distance) * (isBaseInversed ? -1 : 1);\n      var dim = isHorizontal ? 'x' : 'y';\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\n      var indices = dataIndexRange.range;\n      var diff = indices[1] - indices[0];\n      var value = void 0;\n\n      if (diff >= 1) {\n        // diff > 1 && connectNulls, which is on the null data.\n        if (diff > 1 && !connectNulls) {\n          var pt = getPointAtIndex(points, indices[0]);\n          endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\n        } else {\n          var pt = polyline.getPointOn(xOrY, dim);\n          pt && endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          var startValue = seriesModel.getRawValue(indices[0]);\n          var endValue = seriesModel.getRawValue(indices[1]);\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\n        }\n\n        animationRecord.lastFrameIndex = indices[0];\n      } else {\n        // If diff <= 0, which is the range is not found(Include NaN)\n        // Choose the first point or last point.\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\n        var pt = getPointAtIndex(points, idx);\n        valueAnimation && (value = seriesModel.getRawValue(idx));\n        endLabel.attr({\n          x: pt[0] + distanceX,\n          y: pt[1] + distanceY\n        });\n      }\n\n      if (valueAnimation) {\n        (0, _labelStyle.labelInner)(endLabel).setLabelText(value);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n\n\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = (0, _lineAnimationDiff.default)(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step, connectNulls);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step, connectNulls);\n      next = turnPointsIntoStep(diff.next, coordSys, step, connectNulls);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step, connectNulls);\n    } // Don't apply animation if diff is large.\n    // For better result and avoid memory explosion problems like\n    // https://github.com/apache/incubator-echarts/issues/12229\n\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.stopAnimation();\n      polyline.setShape({\n        points: next\n      });\n\n      if (polygon) {\n        polygon.stopAnimation();\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n\n      return;\n    }\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    var target = {\n      shape: {\n        points: next\n      }\n    }; // Also animate the original points.\n    // If points reference is changed when turning into step line.\n\n    if (diff.current !== current) {\n      target.shape.__points = diff.next;\n    } // Stop previous animation.\n\n\n    polyline.stopAnimation();\n    graphic.updateProps(polyline, target, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        // Reuse the points with polyline.\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      polygon.stopAnimation();\n      graphic.updateProps(polygon, {\n        shape: {\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel); // If use attr directly in updateProps.\n\n      if (polyline.shape.points !== polygon.shape.points) {\n        polygon.shape.points = polyline.shape.points;\n      }\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        polygon && polygon.dirtyShape();\n        var points = polyline.shape.__points;\n\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          var offset = updatedDataInfo[i].ptIdx * 2;\n          el.x = points[offset];\n          el.y = points[offset + 1];\n          el.markRedraw();\n        }\n      });\n    }\n  };\n\n  LineView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\n  };\n\n  LineView.type = 'line';\n  return LineView;\n}(_Chart.default);\n\nvar _default = LineView;\nexports.default = _default;","map":{"version":3,"names":["isPointsSame","points1","points2","length","i","bboxFromPoints","points","minX","Infinity","minY","maxX","maxY","x","y","isNaN","Math","min","max","getBoundingDiff","_a","min1","max1","_b","min2","max2","abs","getSmooth","smooth","zrUtil","isNumber","getStackedOnPoints","coordSys","data","dataCoordInfo","valueDim","len","count","createFloat32Array","idx","pt","getStackedOnPoint","turnPointsIntoStep","stepTurnAt","connectNulls","baseAxis","getBaseAxis","baseIndex","dim","stepPoints","stepPt","nextPt","filteredPoints","push","middle","stepPt2","clipColorStops","colorStops","maxSize","newColorStops","prevOutOfRangeColorStop","prevInRangeColorStop","lerpStop","stop0","stop1","clippedCoord","coord0","coord","p","color","lerp","stop_1","getVisualGradient","api","visualMetaList","getVisual","type","process","env","NODE_ENV","console","warn","coordDim","visualMeta","dimInfo","getDimensionInfo","dimension","axis","getAxis","map","stops","stop","toGlobalCoord","dataToCoord","value","stopLen","outerColors","slice","reverse","colorStopsInRange","getWidth","getHeight","inRangeStopLen","tinyExtent","minCoord","maxCoord","coordSpan","each","offset","unshift","gradient","graphic","LinearGradient","getIsIgnoreFunc","seriesModel","showAllSymbol","get","isAuto","categoryAxis","getAxesByScale","canShowAllSymbolForCategory","categoryDataDim","mapDimension","labelMap","getViewLabels","labelItem","ordinalNumber","scale","getRawOrdinalNumber","tickValue","dataIndex","hasOwnProperty","axisExtent","getExtent","availSize","dataLen","step","round","SymbolClz","getSymbolSize","isHorizontal","isPointNull","getLastIndexNotNull","getPointAtIndex","getIndexRange","xOrY","dimIdx","a","b","prevIndex","nextIndex","range","t","anyStateShowEndLabel","SPECIAL_STATES","createLineClipPath","lineView","hasAnimation","isCoordinateSystemType","endLabelModel_1","getModel","valueAnimation_1","data_1","getData","labelAnimationRecord_1","lastFrameIndex","during","percent","clipRect","_endLabelOnDuring","clipPath","createGridClipPath","endLabel","_endLabel","originalX","attr","originalY","rectShape","shape","expandSize","width","height","createPolarClipPath","getEndLabelStateSpecified","endLabelModel","isBaseInversed","inverse","align","verticalAlign","normal","LineView","_super","__extends","apply","arguments","prototype","init","lineGroup","Group","symbolDraw","SymbolDraw","group","add","_symbolDraw","_lineGroup","render","ecModel","_this","coordinateSystem","lineStyleModel","areaStyleModel","getLayout","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","isEmpty","valueOrigin","prepareDataCoordInfo","stackedOnPoints","showSymbol","isIgnoreFunc","oldData","_data","eachItemGraphicEl","el","__temp","remove","setItemGraphicEl","clipShapeForSymbol","getArea","r0","r","_clipShapeForSymbol","visualColor","_step","updateData","isIgnore","clipShape","disableAnimation","getSymbolPoint","_initSymbolLabelAnimation","_newPolyline","_newPolygon","_initOrUpdateEndLabel","convertToColorString","setClipPath","oldClipPath","getClipPath","newClipPath","initProps","_stackedOnPoints","_points","_doUpdateAnimation","setShape","emphasisModel","focus","blurScope","emphasisDisabled","useStyle","defaults","getLineStyle","fill","stroke","lineJoin","setStatesStylesFromModel","style","lineWidth","emphasisLineStyle","getState","getECData","seriesIndex","toggleHoverEmphasis","smoothMonotone","stackedOnSeries","getCalculationInfo","stackedOnSmooth","getAreaStyle","opacity","decal","changePolyState","toState","_changePolyState","onHoverStateChange","_valueOrigin","packEventData","eventData","componentType","componentSubType","componentIndex","seriesName","name","seriesType","highlight","payload","modelUtil","queryDataIndex","Array","symbol","getItemGraphicEl","contain","zlevel","z","setZ","symbolLabel","getSymbolPath","getTextContent","z2","stopSymbolAnimation","ChartView","call","downplay","setStatesFlag","ECPolyline","segmentIgnoreThreshold","ECPolygon","isHorizontalOrRadial","isAxisInverse","hostModel","seriesDuration","isFunction","seriesDalay","seriesDalayValue","point","start","end","current","polarClip","pointToCoord","startAngle","endAngle","PI","gridClip","ratio","delay","symbolPath","text","scaleX","scaleY","animateTo","duration","setToFinal","animateFrom","disableLabelAnimation","inheritColor","data_2","removeTextContent","Text","ignoreClip","setTextContent","setLabelStyle","getLabelStatesModels","labelFetcher","labelDataIndex","defaultText","opt","interpolatedValue","getDefaultInterpolatedLabel","getDefaultLabel","enableTextSetter","textConfig","position","animationRecord","valueAnimation","precision","distance","distanceX","distanceY","dataIndexRange","indices","diff","getRawValue","getPointOn","startValue","endValue","interpolateRawValues","labelInner","setLabelText","lineAnimationDiff","stackedOnCurrent","next","stackedOnNext","stopAnimation","__points","target","updateProps","updatedDataInfo","diffStatus","status","cmd","idx1","ptIdx","animators","dirtyShape","markRedraw","removeAll"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/chart/line/LineView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // FIXME step not support polar\n\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport SymbolDraw from '../helper/SymbolDraw.js';\nimport SymbolClz from '../helper/Symbol.js';\nimport lineAnimationDiff from './lineAnimationDiff.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as modelUtil from '../../util/model.js';\nimport { ECPolyline, ECPolygon } from './poly.js';\nimport ChartView from '../../view/Chart.js';\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper.js';\nimport { createGridClipPath, createPolarClipPath } from '../helper/createClipPathFromCoordSys.js';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem.js';\nimport { setStatesStylesFromModel, setStatesFlag, toggleHoverEmphasis, SPECIAL_STATES } from '../../util/states.js';\nimport { setLabelStyle, getLabelStatesModels, labelInner } from '../../label/labelStyle.js';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createFloat32Array } from '../../util/vendor.js';\nimport { convertToColorString } from '../../util/format.js';\nimport { lerp } from 'zrender/lib/tool/color.js';\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    if (points1[i] !== points2[i]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction bboxFromPoints(points) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n\n  for (var i = 0; i < points.length;) {\n    var x = points[i++];\n    var y = points[i++];\n\n    if (!isNaN(x)) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n    }\n\n    if (!isNaN(y)) {\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [[minX, minY], [maxX, maxY]];\n}\n\nfunction getBoundingDiff(points1, points2) {\n  var _a = bboxFromPoints(points1),\n      min1 = _a[0],\n      max1 = _a[1];\n\n  var _b = bboxFromPoints(points2),\n      min2 = _b[0],\n      max2 = _b[1]; // Get a max value from each corner of two boundings.\n\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\n\nfunction getSmooth(smooth) {\n  return zrUtil.isNumber(smooth) ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var len = data.count();\n  var points = createFloat32Array(len * 2);\n\n  for (var idx = 0; idx < len; idx++) {\n    var pt = getStackedOnPoint(dataCoordInfo, coordSys, data, idx);\n    points[idx * 2] = pt[0];\n    points[idx * 2 + 1] = pt[1];\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt, connectNulls) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n  var i = 0;\n  var stepPt = [];\n  var pt = [];\n  var nextPt = [];\n  var filteredPoints = [];\n\n  if (connectNulls) {\n    for (i = 0; i < points.length; i += 2) {\n      if (!isNaN(points[i]) && !isNaN(points[i + 1])) {\n        filteredPoints.push(points[i], points[i + 1]);\n      }\n    }\n\n    points = filteredPoints;\n  }\n\n  for (i = 0; i < points.length - 2; i += 2) {\n    nextPt[0] = points[i + 2];\n    nextPt[1] = points[i + 3];\n    pt[0] = points[i];\n    pt[1] = points[i + 1];\n    stepPoints.push(pt[0], pt[1]);\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        break;\n\n      case 'middle':\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        stepPoints.push(stepPt2[0], stepPt2[1]);\n        break;\n\n      default:\n        // default is start\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n    }\n  } // Last points\n\n\n  stepPoints.push(points[i++], points[i++]);\n  return stepPoints;\n}\n/**\n * Clip color stops to edge. Avoid creating too large gradients.\n * Which may lead to blurry when GPU acceleration is enabled. See #15680\n *\n * The stops has been sorted from small to large.\n */\n\n\nfunction clipColorStops(colorStops, maxSize) {\n  var newColorStops = [];\n  var len = colorStops.length; // coord will always < 0 in prevOutOfRangeColorStop.\n\n  var prevOutOfRangeColorStop;\n  var prevInRangeColorStop;\n\n  function lerpStop(stop0, stop1, clippedCoord) {\n    var coord0 = stop0.coord;\n    var p = (clippedCoord - coord0) / (stop1.coord - coord0);\n    var color = lerp(p, [stop0.color, stop1.color]);\n    return {\n      coord: clippedCoord,\n      color: color\n    };\n  }\n\n  for (var i = 0; i < len; i++) {\n    var stop_1 = colorStops[i];\n    var coord = stop_1.coord;\n\n    if (coord < 0) {\n      prevOutOfRangeColorStop = stop_1;\n    } else if (coord > maxSize) {\n      if (prevInRangeColorStop) {\n        newColorStops.push(lerpStop(prevInRangeColorStop, stop_1, maxSize));\n      } else if (prevOutOfRangeColorStop) {\n        // If there are two stops and coord range is between these two stops\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0), lerpStop(prevOutOfRangeColorStop, stop_1, maxSize));\n      } // All following stop will be out of range. So just ignore them.\n\n\n      break;\n    } else {\n      if (prevOutOfRangeColorStop) {\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0)); // Reset\n\n        prevOutOfRangeColorStop = null;\n      }\n\n      newColorStops.push(stop_1);\n      prevInRangeColorStop = stop_1;\n    }\n  }\n\n  return newColorStops;\n}\n\nfunction getVisualGradient(data, coordSys, api) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style is only supported on cartesian2d.');\n    }\n\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimInfo = data.getDimensionInfo(visualMetaList[i].dimension);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style only support x or y dimension.');\n    }\n\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoord mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    // offset will be calculated later.\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var colorStopsInRange = clipColorStops(colorStops, coordDim === 'x' ? api.getWidth() : api.getHeight());\n  var inRangeStopLen = colorStopsInRange.length;\n\n  if (!inRangeStopLen && stopLen) {\n    // All stops are out of range. All will be the same color.\n    return colorStops[0].coord < 0 ? outerColors[1] ? outerColors[1] : colorStops[stopLen - 1].color : outerColors[0] ? outerColors[0] : colorStops[0].color;\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStopsInRange[0].coord - tinyExtent;\n  var maxCoord = colorStopsInRange[inRangeStopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStopsInRange, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStopsInRange.push({\n    // NOTE: inRangeStopLen may still be 0 if stoplen is zero.\n    offset: inRangeStopLen ? colorStopsInRange[inRangeStopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStopsInRange.unshift({\n    offset: inRangeStopLen ? colorStopsInRange[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  });\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStopsInRange, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    var ordinalNumber = categoryAxis.scale.getRawOrdinalNumber(labelItem.tickValue);\n    labelMap[ordinalNumber] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isPointNull(x, y) {\n  return isNaN(x) || isNaN(y);\n}\n\nfunction getLastIndexNotNull(points) {\n  var len = points.length / 2;\n\n  for (; len > 0; len--) {\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n      break;\n    }\n  }\n\n  return len - 1;\n}\n\nfunction getPointAtIndex(points, idx) {\n  return [points[idx * 2], points[idx * 2 + 1]];\n}\n\nfunction getIndexRange(points, xOrY, dim) {\n  var len = points.length / 2;\n  var dimIdx = dim === 'x' ? 0 : 1;\n  var a;\n  var b;\n  var prevIndex = 0;\n  var nextIndex = -1;\n\n  for (var i = 0; i < len; i++) {\n    b = points[i * 2 + dimIdx];\n\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\n      continue;\n    }\n\n    if (i === 0) {\n      a = b;\n      continue;\n    }\n\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\n      nextIndex = i;\n      break;\n    }\n\n    prevIndex = i;\n    a = b;\n  }\n\n  return {\n    range: [prevIndex, nextIndex],\n    t: (xOrY - a) / (b - a)\n  };\n}\n\nfunction anyStateShowEndLabel(seriesModel) {\n  if (seriesModel.get(['endLabel', 'show'])) {\n    return true;\n  }\n\n  for (var i = 0; i < SPECIAL_STATES.length; i++) {\n    if (seriesModel.get([SPECIAL_STATES[i], 'endLabel', 'show'])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\n    var data_1 = seriesModel.getData();\n    var labelAnimationRecord_1 = {\n      lastFrameIndex: 0\n    };\n    var during = anyStateShowEndLabel(seriesModel) ? function (percent, clipRect) {\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\n    } : null;\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel, function () {\n      var endLabel = lineView._endLabel;\n\n      if (endLabel && hasAnimation) {\n        if (labelAnimationRecord_1.originalX != null) {\n          endLabel.attr({\n            x: labelAnimationRecord_1.originalX,\n            y: labelAnimationRecord_1.originalY\n          });\n        }\n      }\n    }, during); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    } // Set to the final frame. To make sure label layout is right.\n\n\n    if (during) {\n      during(1, clipPath);\n    }\n\n    return clipPath;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (seriesModel.get(['endLabel', 'show'])) {\n        console.warn('endLabel is not supported for lines in polar systems.');\n      }\n    }\n\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\n  var baseAxis = coordSys.getBaseAxis();\n  var isHorizontal = baseAxis.isHorizontal();\n  var isBaseInversed = baseAxis.inverse;\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\n  return {\n    normal: {\n      align: endLabelModel.get('align') || align,\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign\n    }\n  };\n}\n\nvar LineView =\n/** @class */\nfunction (_super) {\n  __extends(LineView, _super);\n\n  function LineView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LineView.prototype.init = function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  };\n\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.getLayout('points') || [];\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var connectNulls = seriesModel.get('connectNulls');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r += 0.5;\n      }\n    }\n\n    this._clipShapeForSymbol = clipShapeForSymbol;\n    var visualColor = getVisualGradient(data, coordSys, api) || data.getVisual('style')[data.getVisual('drawType')]; // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step, connectNulls);\n\n        if (stackedOnPoints) {\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step, connectNulls);\n        }\n      }\n\n      polyline = this._newPolyline(points);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } // If areaStyle is removed\n      else if (polygon) {\n          lineGroup.remove(polygon);\n          polygon = this._polygon = null;\n        } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      }\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      } // Update clipPath\n\n\n      var oldClipPath = lineGroup.getClipPath();\n\n      if (oldClipPath) {\n        var newClipPath = createLineClipPath(this, coordSys, false, seriesModel);\n        graphic.initProps(oldClipPath, {\n          shape: newClipPath.shape\n        }, seriesModel);\n      } else {\n        lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n      } // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step, connectNulls);\n\n            if (stackedOnPoints) {\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step, connectNulls);\n            }\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var emphasisModel = seriesModel.getModel('emphasis');\n    var focus = emphasisModel.get('focus');\n    var blurScope = emphasisModel.get('blurScope');\n    var emphasisDisabled = emphasisModel.get('disabled');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    setStatesStylesFromModel(polyline, seriesModel, 'lineStyle');\n\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\n      var emphasisLineStyle = polyline.getState('emphasis').style;\n      emphasisLineStyle.lineWidth = +polyline.style.lineWidth + 1;\n    } // Needs seriesIndex for focus\n\n\n    getECData(polyline).seriesIndex = seriesModel.seriesIndex;\n    toggleHoverEmphasis(polyline, focus, blurScope, emphasisDisabled);\n    var smooth = getSmooth(seriesModel.get('smooth'));\n    var smoothMonotone = seriesModel.get('smoothMonotone');\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: smoothMonotone,\n      connectNulls: connectNulls\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel',\n        decal: data.getVisual('style').decal\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: smoothMonotone,\n        connectNulls: connectNulls\n      });\n      setStatesStylesFromModel(polygon, seriesModel, 'areaStyle'); // Needs seriesIndex for focus\n\n      getECData(polygon).seriesIndex = seriesModel.seriesIndex;\n      toggleHoverEmphasis(polygon, focus, blurScope, emphasisDisabled);\n    }\n\n    var changePolyState = function (toState) {\n      _this._changePolyState(toState);\n    };\n\n    data.eachItemGraphicEl(function (el) {\n      // Switch polyline / polygon state if element changed its state.\n      el && (el.onHoverStateChange = changePolyState);\n    });\n    this._polyline.onHoverStateChange = changePolyState;\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n\n    if (seriesModel.get('triggerLineEvent')) {\n      this.packEventData(seriesModel, polyline);\n      polygon && this.packEventData(seriesModel, polygon);\n    }\n  };\n\n  LineView.prototype.packEventData = function (seriesModel, el) {\n    getECData(el).eventData = {\n      componentType: 'series',\n      componentSubType: 'line',\n      componentIndex: seriesModel.componentIndex,\n      seriesIndex: seriesModel.seriesIndex,\n      seriesName: seriesModel.name,\n      seriesType: 'line'\n    };\n  };\n\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('emphasis');\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var points = data.getLayout('points');\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var x = points[dataIndex * 2];\n        var y = points[dataIndex * 2 + 1];\n\n        if (isNaN(x) || isNaN(y)) {\n          // Null data\n          return;\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\n\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\n          return;\n        }\n\n        var zlevel = seriesModel.get('zlevel');\n        var z = seriesModel.get('z');\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.x = x;\n        symbol.y = y;\n        symbol.setZ(zlevel, z); // ensure label text of the temporary symbol is in front of line and area polygon\n\n        var symbolLabel = symbol.getSymbolPath().getTextContent();\n\n        if (symbolLabel) {\n          symbolLabel.zlevel = zlevel;\n          symbolLabel.z = z;\n          symbolLabel.z2 = this._polyline.z2 + 1;\n        }\n\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('normal');\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype._changePolyState = function (toState) {\n    var polygon = this._polygon;\n    setStatesFlag(this._polyline, toState);\n    polygon && setStatesFlag(polygon, toState);\n  };\n\n  LineView.prototype._newPolyline = function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new ECPolyline({\n      shape: {\n        points: points\n      },\n      segmentIgnoreThreshold: 2,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  };\n\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new ECPolygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      segmentIgnoreThreshold: 2\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  };\n\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\n    var isHorizontalOrRadial;\n    var isCoordSysPolar;\n    var baseAxis = coordSys.getBaseAxis();\n    var isAxisInverse = baseAxis.inverse;\n\n    if (coordSys.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n      isCoordSysPolar = false;\n    } else if (coordSys.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n      isCoordSysPolar = true;\n    }\n\n    var seriesModel = data.hostModel;\n    var seriesDuration = seriesModel.get('animationDuration');\n\n    if (zrUtil.isFunction(seriesDuration)) {\n      seriesDuration = seriesDuration(null);\n    }\n\n    var seriesDalay = seriesModel.get('animationDelay') || 0;\n    var seriesDalayValue = zrUtil.isFunction(seriesDalay) ? seriesDalay(null) : seriesDalay;\n    data.eachItemGraphicEl(function (symbol, idx) {\n      var el = symbol;\n\n      if (el) {\n        var point = [symbol.x, symbol.y];\n        var start = void 0;\n        var end = void 0;\n        var current = void 0;\n\n        if (clipShape) {\n          if (isCoordSysPolar) {\n            var polarClip = clipShape;\n            var coord = coordSys.pointToCoord(point);\n\n            if (isHorizontalOrRadial) {\n              start = polarClip.startAngle;\n              end = polarClip.endAngle;\n              current = -coord[1] / 180 * Math.PI;\n            } else {\n              start = polarClip.r0;\n              end = polarClip.r;\n              current = coord[0];\n            }\n          } else {\n            var gridClip = clipShape;\n\n            if (isHorizontalOrRadial) {\n              start = gridClip.x;\n              end = gridClip.x + gridClip.width;\n              current = symbol.x;\n            } else {\n              start = gridClip.y + gridClip.height;\n              end = gridClip.y;\n              current = symbol.y;\n            }\n          }\n        }\n\n        var ratio = end === start ? 0 : (current - start) / (end - start);\n\n        if (isAxisInverse) {\n          ratio = 1 - ratio;\n        }\n\n        var delay = zrUtil.isFunction(seriesDalay) ? seriesDalay(idx) : seriesDuration * ratio + seriesDalayValue;\n        var symbolPath = el.getSymbolPath();\n        var text = symbolPath.getTextContent();\n        el.attr({\n          scaleX: 0,\n          scaleY: 0\n        });\n        el.animateTo({\n          scaleX: 1,\n          scaleY: 1\n        }, {\n          duration: 200,\n          setToFinal: true,\n          delay: delay\n        });\n\n        if (text) {\n          text.animateFrom({\n            style: {\n              opacity: 0\n            }\n          }, {\n            duration: 300,\n            delay: delay\n          });\n        }\n\n        symbolPath.disableLabelAnimation = true;\n      }\n    });\n  };\n\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys, inheritColor) {\n    var endLabelModel = seriesModel.getModel('endLabel');\n\n    if (anyStateShowEndLabel(seriesModel)) {\n      var data_2 = seriesModel.getData();\n      var polyline = this._polyline; // series may be filtered.\n\n      var points = data_2.getLayout('points');\n\n      if (!points) {\n        polyline.removeTextContent();\n        this._endLabel = null;\n        return;\n      }\n\n      var endLabel = this._endLabel;\n\n      if (!endLabel) {\n        endLabel = this._endLabel = new graphic.Text({\n          z2: 200 // should be higher than item symbol\n\n        });\n        endLabel.ignoreClip = true;\n        polyline.setTextContent(this._endLabel);\n        polyline.disableLabelAnimation = true;\n      } // Find last non-NaN data to display data\n\n\n      var dataIndex = getLastIndexNotNull(points);\n\n      if (dataIndex >= 0) {\n        setLabelStyle(polyline, getLabelStatesModels(seriesModel, 'endLabel'), {\n          inheritColor: inheritColor,\n          labelFetcher: seriesModel,\n          labelDataIndex: dataIndex,\n          defaultText: function (dataIndex, opt, interpolatedValue) {\n            return interpolatedValue != null ? getDefaultInterpolatedLabel(data_2, interpolatedValue) : getDefaultLabel(data_2, dataIndex);\n          },\n          enableTextSetter: true\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\n        polyline.textConfig.position = null;\n      }\n    } else if (this._endLabel) {\n      this._polyline.removeTextContent();\n\n      this._endLabel = null;\n    }\n  };\n\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\n    var endLabel = this._endLabel;\n    var polyline = this._polyline;\n\n    if (endLabel) {\n      // NOTE: Don't remove percent < 1. percent === 1 means the first frame during render.\n      // The label is not prepared at this time.\n      if (percent < 1 && animationRecord.originalX == null) {\n        animationRecord.originalX = endLabel.x;\n        animationRecord.originalY = endLabel.y;\n      }\n\n      var points = data.getLayout('points');\n      var seriesModel = data.hostModel;\n      var connectNulls = seriesModel.get('connectNulls');\n      var precision = endLabelModel.get('precision');\n      var distance = endLabelModel.get('distance') || 0;\n      var baseAxis = coordSys.getBaseAxis();\n      var isHorizontal = baseAxis.isHorizontal();\n      var isBaseInversed = baseAxis.inverse;\n      var clipShape = clipRect.shape;\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\n      var distanceX = (isHorizontal ? distance : 0) * (isBaseInversed ? -1 : 1);\n      var distanceY = (isHorizontal ? 0 : -distance) * (isBaseInversed ? -1 : 1);\n      var dim = isHorizontal ? 'x' : 'y';\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\n      var indices = dataIndexRange.range;\n      var diff = indices[1] - indices[0];\n      var value = void 0;\n\n      if (diff >= 1) {\n        // diff > 1 && connectNulls, which is on the null data.\n        if (diff > 1 && !connectNulls) {\n          var pt = getPointAtIndex(points, indices[0]);\n          endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\n        } else {\n          var pt = polyline.getPointOn(xOrY, dim);\n          pt && endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          var startValue = seriesModel.getRawValue(indices[0]);\n          var endValue = seriesModel.getRawValue(indices[1]);\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\n        }\n\n        animationRecord.lastFrameIndex = indices[0];\n      } else {\n        // If diff <= 0, which is the range is not found(Include NaN)\n        // Choose the first point or last point.\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\n        var pt = getPointAtIndex(points, idx);\n        valueAnimation && (value = seriesModel.getRawValue(idx));\n        endLabel.attr({\n          x: pt[0] + distanceX,\n          y: pt[1] + distanceY\n        });\n      }\n\n      if (valueAnimation) {\n        labelInner(endLabel).setLabelText(value);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n\n\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step, connectNulls);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step, connectNulls);\n      next = turnPointsIntoStep(diff.next, coordSys, step, connectNulls);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step, connectNulls);\n    } // Don't apply animation if diff is large.\n    // For better result and avoid memory explosion problems like\n    // https://github.com/apache/incubator-echarts/issues/12229\n\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.stopAnimation();\n      polyline.setShape({\n        points: next\n      });\n\n      if (polygon) {\n        polygon.stopAnimation();\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n\n      return;\n    }\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    var target = {\n      shape: {\n        points: next\n      }\n    }; // Also animate the original points.\n    // If points reference is changed when turning into step line.\n\n    if (diff.current !== current) {\n      target.shape.__points = diff.next;\n    } // Stop previous animation.\n\n\n    polyline.stopAnimation();\n    graphic.updateProps(polyline, target, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        // Reuse the points with polyline.\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      polygon.stopAnimation();\n      graphic.updateProps(polygon, {\n        shape: {\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel); // If use attr directly in updateProps.\n\n      if (polyline.shape.points !== polygon.shape.points) {\n        polygon.shape.points = polyline.shape.points;\n      }\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        polygon && polygon.dirtyShape();\n        var points = polyline.shape.__points;\n\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          var offset = updatedDataInfo[i].ptIdx * 2;\n          el.x = points[offset];\n          el.y = points[offset + 1];\n          el.markRedraw();\n        }\n      });\n    }\n  };\n\n  LineView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\n  };\n\n  LineView.type = 'line';\n  return LineView;\n}(ChartView);\n\nexport default LineView;"],"mappings":"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"},"metadata":{},"sourceType":"script"}