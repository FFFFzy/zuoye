{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloneValue = cloneValue;\nexports.default = void 0;\n\nvar _Clip = _interopRequireDefault(require(\"./Clip.js\"));\n\nvar color = _interopRequireWildcard(require(\"../tool/color.js\"));\n\nvar _util = require(\"../core/util.js\");\n\nvar _easing = _interopRequireDefault(require(\"./easing.js\"));\n\nvar _cubicEasing = require(\"./cubicEasing.js\");\n\nvar _helper = require(\"../svg/helper.js\");\n\n;\nvar arraySlice = Array.prototype.slice;\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n\nfunction interpolate1DArray(out, p0, p1, percent) {\n  var len = p0.length;\n\n  for (var i = 0; i < len; i++) {\n    out[i] = interpolateNumber(p0[i], p1[i], percent);\n  }\n\n  return out;\n}\n\nfunction interpolate2DArray(out, p0, p1, percent) {\n  var len = p0.length;\n  var len2 = len && p0[0].length;\n\n  for (var i = 0; i < len; i++) {\n    if (!out[i]) {\n      out[i] = [];\n    }\n\n    for (var j = 0; j < len2; j++) {\n      out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n    }\n  }\n\n  return out;\n}\n\nfunction add1DArray(out, p0, p1, sign) {\n  var len = p0.length;\n\n  for (var i = 0; i < len; i++) {\n    out[i] = p0[i] + p1[i] * sign;\n  }\n\n  return out;\n}\n\nfunction add2DArray(out, p0, p1, sign) {\n  var len = p0.length;\n  var len2 = len && p0[0].length;\n\n  for (var i = 0; i < len; i++) {\n    if (!out[i]) {\n      out[i] = [];\n    }\n\n    for (var j = 0; j < len2; j++) {\n      out[i][j] = p0[i][j] + p1[i][j] * sign;\n    }\n  }\n\n  return out;\n}\n\nfunction fillColorStops(val0, val1) {\n  var len0 = val0.length;\n  var len1 = val1.length;\n  var shorterArr = len0 > len1 ? val1 : val0;\n  var shorterLen = Math.min(len0, len1);\n  var last = shorterArr[shorterLen - 1] || {\n    color: [0, 0, 0, 0],\n    offset: 0\n  };\n\n  for (var i = shorterLen; i < Math.max(len0, len1); i++) {\n    shorterArr.push({\n      offset: last.offset,\n      color: last.color.slice()\n    });\n  }\n}\n\nfunction fillArray(val0, val1, arrDim) {\n  var arr0 = val0;\n  var arr1 = val1;\n\n  if (!arr0.push || !arr1.push) {\n    return;\n  }\n\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      arr0.length = arr1Len;\n    } else {\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  }\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n\nfunction cloneValue(value) {\n  if ((0, _util.isArrayLike)(value)) {\n    var len = value.length;\n\n    if ((0, _util.isArrayLike)(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]) || 0;\n  rgba[1] = Math.floor(rgba[1]) || 0;\n  rgba[2] = Math.floor(rgba[2]) || 0;\n  rgba[3] = rgba[3] == null ? 1 : rgba[3];\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction guessArrayDim(value) {\n  return (0, _util.isArrayLike)(value && value[0]) ? 2 : 1;\n}\n\nvar VALUE_TYPE_NUMBER = 0;\nvar VALUE_TYPE_1D_ARRAY = 1;\nvar VALUE_TYPE_2D_ARRAY = 2;\nvar VALUE_TYPE_COLOR = 3;\nvar VALUE_TYPE_LINEAR_GRADIENT = 4;\nvar VALUE_TYPE_RADIAL_GRADIENT = 5;\nvar VALUE_TYPE_UNKOWN = 6;\n\nfunction isGradientValueType(valType) {\n  return valType === VALUE_TYPE_LINEAR_GRADIENT || valType === VALUE_TYPE_RADIAL_GRADIENT;\n}\n\nfunction isArrayValueType(valType) {\n  return valType === VALUE_TYPE_1D_ARRAY || valType === VALUE_TYPE_2D_ARRAY;\n}\n\nvar tmpRgba = [0, 0, 0, 0];\n\nvar Track = function () {\n  function Track(propName) {\n    this.keyframes = [];\n    this.discrete = false;\n    this._invalid = false;\n    this._needsSort = false;\n    this._lastFr = 0;\n    this._lastFrP = 0;\n    this.propName = propName;\n  }\n\n  Track.prototype.isFinished = function () {\n    return this._finished;\n  };\n\n  Track.prototype.setFinished = function () {\n    this._finished = true;\n\n    if (this._additiveTrack) {\n      this._additiveTrack.setFinished();\n    }\n  };\n\n  Track.prototype.needsAnimate = function () {\n    return this.keyframes.length >= 1;\n  };\n\n  Track.prototype.getAdditiveTrack = function () {\n    return this._additiveTrack;\n  };\n\n  Track.prototype.addKeyframe = function (time, rawValue, easing) {\n    this._needsSort = true;\n    var keyframes = this.keyframes;\n    var len = keyframes.length;\n    var discrete = false;\n    var valType = VALUE_TYPE_UNKOWN;\n    var value = rawValue;\n\n    if ((0, _util.isArrayLike)(rawValue)) {\n      var arrayDim = guessArrayDim(rawValue);\n      valType = arrayDim;\n\n      if (arrayDim === 1 && !(0, _util.isNumber)(rawValue[0]) || arrayDim === 2 && !(0, _util.isNumber)(rawValue[0][0])) {\n        discrete = true;\n      }\n    } else {\n      if ((0, _util.isNumber)(rawValue) && !(0, _util.eqNaN)(rawValue)) {\n        valType = VALUE_TYPE_NUMBER;\n      } else if ((0, _util.isString)(rawValue)) {\n        if (!isNaN(+rawValue)) {\n          valType = VALUE_TYPE_NUMBER;\n        } else {\n          var colorArray = color.parse(rawValue);\n\n          if (colorArray) {\n            value = colorArray;\n            valType = VALUE_TYPE_COLOR;\n          }\n        }\n      } else if ((0, _util.isGradientObject)(rawValue)) {\n        var parsedGradient = (0, _util.extend)({}, value);\n        parsedGradient.colorStops = (0, _util.map)(rawValue.colorStops, function (colorStop) {\n          return {\n            offset: colorStop.offset,\n            color: color.parse(colorStop.color)\n          };\n        });\n\n        if ((0, _helper.isLinearGradient)(rawValue)) {\n          valType = VALUE_TYPE_LINEAR_GRADIENT;\n        } else if ((0, _helper.isRadialGradient)(rawValue)) {\n          valType = VALUE_TYPE_RADIAL_GRADIENT;\n        }\n\n        value = parsedGradient;\n      }\n    }\n\n    if (len === 0) {\n      this.valType = valType;\n    } else if (valType !== this.valType || valType === VALUE_TYPE_UNKOWN) {\n      discrete = true;\n    }\n\n    this.discrete = this.discrete || discrete;\n    var kf = {\n      time: time,\n      value: value,\n      rawValue: rawValue,\n      percent: 0\n    };\n\n    if (easing) {\n      kf.easing = easing;\n      kf.easingFunc = (0, _util.isFunction)(easing) ? easing : _easing.default[easing] || (0, _cubicEasing.createCubicEasingFunc)(easing);\n    }\n\n    keyframes.push(kf);\n    return kf;\n  };\n\n  Track.prototype.prepare = function (maxTime, additiveTrack) {\n    var kfs = this.keyframes;\n\n    if (this._needsSort) {\n      kfs.sort(function (a, b) {\n        return a.time - b.time;\n      });\n    }\n\n    var valType = this.valType;\n    var kfsLen = kfs.length;\n    var lastKf = kfs[kfsLen - 1];\n    var isDiscrete = this.discrete;\n    var isArr = isArrayValueType(valType);\n    var isGradient = isGradientValueType(valType);\n\n    for (var i = 0; i < kfsLen; i++) {\n      var kf = kfs[i];\n      var value = kf.value;\n      var lastValue = lastKf.value;\n      kf.percent = kf.time / maxTime;\n\n      if (!isDiscrete) {\n        if (isArr && i !== kfsLen - 1) {\n          fillArray(value, lastValue, valType);\n        } else if (isGradient) {\n          fillColorStops(value.colorStops, lastValue.colorStops);\n        }\n      }\n    }\n\n    if (!isDiscrete && valType !== VALUE_TYPE_RADIAL_GRADIENT && additiveTrack && this.needsAnimate() && additiveTrack.needsAnimate() && valType === additiveTrack.valType && !additiveTrack._finished) {\n      this._additiveTrack = additiveTrack;\n      var startValue = kfs[0].value;\n\n      for (var i = 0; i < kfsLen; i++) {\n        if (valType === VALUE_TYPE_NUMBER) {\n          kfs[i].additiveValue = kfs[i].value - startValue;\n        } else if (valType === VALUE_TYPE_COLOR) {\n          kfs[i].additiveValue = add1DArray([], kfs[i].value, startValue, -1);\n        } else if (isArrayValueType(valType)) {\n          kfs[i].additiveValue = valType === VALUE_TYPE_1D_ARRAY ? add1DArray([], kfs[i].value, startValue, -1) : add2DArray([], kfs[i].value, startValue, -1);\n        }\n      }\n    }\n  };\n\n  Track.prototype.step = function (target, percent) {\n    if (this._finished) {\n      return;\n    }\n\n    if (this._additiveTrack && this._additiveTrack._finished) {\n      this._additiveTrack = null;\n    }\n\n    var isAdditive = this._additiveTrack != null;\n    var valueKey = isAdditive ? 'additiveValue' : 'value';\n    var valType = this.valType;\n    var keyframes = this.keyframes;\n    var kfsNum = keyframes.length;\n    var propName = this.propName;\n    var isValueColor = valType === VALUE_TYPE_COLOR;\n    var frameIdx;\n    var lastFrame = this._lastFr;\n    var mathMin = Math.min;\n    var frame;\n    var nextFrame;\n\n    if (kfsNum === 1) {\n      frame = nextFrame = keyframes[0];\n    } else {\n      if (percent < 0) {\n        frameIdx = 0;\n      } else if (percent < this._lastFrP) {\n        var start = mathMin(lastFrame + 1, kfsNum - 1);\n\n        for (frameIdx = start; frameIdx >= 0; frameIdx--) {\n          if (keyframes[frameIdx].percent <= percent) {\n            break;\n          }\n        }\n\n        frameIdx = mathMin(frameIdx, kfsNum - 2);\n      } else {\n        for (frameIdx = lastFrame; frameIdx < kfsNum; frameIdx++) {\n          if (keyframes[frameIdx].percent > percent) {\n            break;\n          }\n        }\n\n        frameIdx = mathMin(frameIdx - 1, kfsNum - 2);\n      }\n\n      nextFrame = keyframes[frameIdx + 1];\n      frame = keyframes[frameIdx];\n    }\n\n    if (!(frame && nextFrame)) {\n      return;\n    }\n\n    this._lastFr = frameIdx;\n    this._lastFrP = percent;\n    var interval = nextFrame.percent - frame.percent;\n    var w = interval === 0 ? 1 : mathMin((percent - frame.percent) / interval, 1);\n\n    if (nextFrame.easingFunc) {\n      w = nextFrame.easingFunc(w);\n    }\n\n    var targetArr = isAdditive ? this._additiveValue : isValueColor ? tmpRgba : target[propName];\n\n    if ((isArrayValueType(valType) || isValueColor) && !targetArr) {\n      targetArr = this._additiveValue = [];\n    }\n\n    if (this.discrete) {\n      target[propName] = w < 1 ? frame.rawValue : nextFrame.rawValue;\n    } else if (isArrayValueType(valType)) {\n      valType === VALUE_TYPE_1D_ARRAY ? interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w) : interpolate2DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n    } else if (isGradientValueType(valType)) {\n      var val = frame[valueKey];\n      var nextVal_1 = nextFrame[valueKey];\n      var isLinearGradient_1 = valType === VALUE_TYPE_LINEAR_GRADIENT;\n      target[propName] = {\n        type: isLinearGradient_1 ? 'linear' : 'radial',\n        x: interpolateNumber(val.x, nextVal_1.x, w),\n        y: interpolateNumber(val.y, nextVal_1.y, w),\n        colorStops: (0, _util.map)(val.colorStops, function (colorStop, idx) {\n          var nextColorStop = nextVal_1.colorStops[idx];\n          return {\n            offset: interpolateNumber(colorStop.offset, nextColorStop.offset, w),\n            color: rgba2String(interpolate1DArray([], colorStop.color, nextColorStop.color, w))\n          };\n        }),\n        global: nextVal_1.global\n      };\n\n      if (isLinearGradient_1) {\n        target[propName].x2 = interpolateNumber(val.x2, nextVal_1.x2, w);\n        target[propName].y2 = interpolateNumber(val.y2, nextVal_1.y2, w);\n      } else {\n        target[propName].r = interpolateNumber(val.r, nextVal_1.r, w);\n      }\n    } else if (isValueColor) {\n      interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n\n      if (!isAdditive) {\n        target[propName] = rgba2String(targetArr);\n      }\n    } else {\n      var value = interpolateNumber(frame[valueKey], nextFrame[valueKey], w);\n\n      if (isAdditive) {\n        this._additiveValue = value;\n      } else {\n        target[propName] = value;\n      }\n    }\n\n    if (isAdditive) {\n      this._addToTarget(target);\n    }\n  };\n\n  Track.prototype._addToTarget = function (target) {\n    var valType = this.valType;\n    var propName = this.propName;\n    var additiveValue = this._additiveValue;\n\n    if (valType === VALUE_TYPE_NUMBER) {\n      target[propName] = target[propName] + additiveValue;\n    } else if (valType === VALUE_TYPE_COLOR) {\n      color.parse(target[propName], tmpRgba);\n      add1DArray(tmpRgba, tmpRgba, additiveValue, 1);\n      target[propName] = rgba2String(tmpRgba);\n    } else if (valType === VALUE_TYPE_1D_ARRAY) {\n      add1DArray(target[propName], target[propName], additiveValue, 1);\n    } else if (valType === VALUE_TYPE_2D_ARRAY) {\n      add2DArray(target[propName], target[propName], additiveValue, 1);\n    }\n  };\n\n  return Track;\n}();\n\nvar Animator = function () {\n  function Animator(target, loop, allowDiscreteAnimation, additiveTo) {\n    this._tracks = {};\n    this._trackKeys = [];\n    this._maxTime = 0;\n    this._started = 0;\n    this._clip = null;\n    this._target = target;\n    this._loop = loop;\n\n    if (loop && additiveTo) {\n      (0, _util.logError)('Can\\' use additive animation on looped animation.');\n      return;\n    }\n\n    this._additiveAnimators = additiveTo;\n    this._allowDiscrete = allowDiscreteAnimation;\n  }\n\n  Animator.prototype.getMaxTime = function () {\n    return this._maxTime;\n  };\n\n  Animator.prototype.getDelay = function () {\n    return this._delay;\n  };\n\n  Animator.prototype.getLoop = function () {\n    return this._loop;\n  };\n\n  Animator.prototype.getTarget = function () {\n    return this._target;\n  };\n\n  Animator.prototype.changeTarget = function (target) {\n    this._target = target;\n  };\n\n  Animator.prototype.when = function (time, props, easing) {\n    return this.whenWithKeys(time, props, (0, _util.keys)(props), easing);\n  };\n\n  Animator.prototype.whenWithKeys = function (time, props, propNames, easing) {\n    var tracks = this._tracks;\n\n    for (var i = 0; i < propNames.length; i++) {\n      var propName = propNames[i];\n      var track = tracks[propName];\n\n      if (!track) {\n        track = tracks[propName] = new Track(propName);\n        var initialValue = void 0;\n\n        var additiveTrack = this._getAdditiveTrack(propName);\n\n        if (additiveTrack) {\n          var addtiveTrackKfs = additiveTrack.keyframes;\n          var lastFinalKf = addtiveTrackKfs[addtiveTrackKfs.length - 1];\n          initialValue = lastFinalKf && lastFinalKf.value;\n\n          if (additiveTrack.valType === VALUE_TYPE_COLOR && initialValue) {\n            initialValue = rgba2String(initialValue);\n          }\n        } else {\n          initialValue = this._target[propName];\n        }\n\n        if (initialValue == null) {\n          continue;\n        }\n\n        if (time > 0) {\n          track.addKeyframe(0, cloneValue(initialValue), easing);\n        }\n\n        this._trackKeys.push(propName);\n      }\n\n      track.addKeyframe(time, cloneValue(props[propName]), easing);\n    }\n\n    this._maxTime = Math.max(this._maxTime, time);\n    return this;\n  };\n\n  Animator.prototype.pause = function () {\n    this._clip.pause();\n\n    this._paused = true;\n  };\n\n  Animator.prototype.resume = function () {\n    this._clip.resume();\n\n    this._paused = false;\n  };\n\n  Animator.prototype.isPaused = function () {\n    return !!this._paused;\n  };\n\n  Animator.prototype.duration = function (duration) {\n    this._maxTime = duration;\n    this._force = true;\n    return this;\n  };\n\n  Animator.prototype._doneCallback = function () {\n    this._setTracksFinished();\n\n    this._clip = null;\n    var doneList = this._doneCbs;\n\n    if (doneList) {\n      var len = doneList.length;\n\n      for (var i = 0; i < len; i++) {\n        doneList[i].call(this);\n      }\n    }\n  };\n\n  Animator.prototype._abortedCallback = function () {\n    this._setTracksFinished();\n\n    var animation = this.animation;\n    var abortedList = this._abortedCbs;\n\n    if (animation) {\n      animation.removeClip(this._clip);\n    }\n\n    this._clip = null;\n\n    if (abortedList) {\n      for (var i = 0; i < abortedList.length; i++) {\n        abortedList[i].call(this);\n      }\n    }\n  };\n\n  Animator.prototype._setTracksFinished = function () {\n    var tracks = this._tracks;\n    var tracksKeys = this._trackKeys;\n\n    for (var i = 0; i < tracksKeys.length; i++) {\n      tracks[tracksKeys[i]].setFinished();\n    }\n  };\n\n  Animator.prototype._getAdditiveTrack = function (trackName) {\n    var additiveTrack;\n    var additiveAnimators = this._additiveAnimators;\n\n    if (additiveAnimators) {\n      for (var i = 0; i < additiveAnimators.length; i++) {\n        var track = additiveAnimators[i].getTrack(trackName);\n\n        if (track) {\n          additiveTrack = track;\n        }\n      }\n    }\n\n    return additiveTrack;\n  };\n\n  Animator.prototype.start = function (easing) {\n    if (this._started > 0) {\n      return;\n    }\n\n    this._started = 1;\n    var self = this;\n    var tracks = [];\n    var maxTime = this._maxTime || 0;\n\n    for (var i = 0; i < this._trackKeys.length; i++) {\n      var propName = this._trackKeys[i];\n      var track = this._tracks[propName];\n\n      var additiveTrack = this._getAdditiveTrack(propName);\n\n      var kfs = track.keyframes;\n      var kfsNum = kfs.length;\n      track.prepare(maxTime, additiveTrack);\n\n      if (track.needsAnimate()) {\n        if (!this._allowDiscrete && track.discrete) {\n          var lastKf = kfs[kfsNum - 1];\n\n          if (lastKf) {\n            self._target[track.propName] = lastKf.rawValue;\n          }\n\n          track.setFinished();\n        } else {\n          tracks.push(track);\n        }\n      }\n    }\n\n    if (tracks.length || this._force) {\n      var clip = new _Clip.default({\n        life: maxTime,\n        loop: this._loop,\n        delay: this._delay || 0,\n        onframe: function (percent) {\n          self._started = 2;\n          var additiveAnimators = self._additiveAnimators;\n\n          if (additiveAnimators) {\n            var stillHasAdditiveAnimator = false;\n\n            for (var i = 0; i < additiveAnimators.length; i++) {\n              if (additiveAnimators[i]._clip) {\n                stillHasAdditiveAnimator = true;\n                break;\n              }\n            }\n\n            if (!stillHasAdditiveAnimator) {\n              self._additiveAnimators = null;\n            }\n          }\n\n          for (var i = 0; i < tracks.length; i++) {\n            tracks[i].step(self._target, percent);\n          }\n\n          var onframeList = self._onframeCbs;\n\n          if (onframeList) {\n            for (var i = 0; i < onframeList.length; i++) {\n              onframeList[i](self._target, percent);\n            }\n          }\n        },\n        ondestroy: function () {\n          self._doneCallback();\n        }\n      });\n      this._clip = clip;\n\n      if (this.animation) {\n        this.animation.addClip(clip);\n      }\n\n      if (easing) {\n        clip.setEasing(easing);\n      }\n    } else {\n      this._doneCallback();\n    }\n\n    return this;\n  };\n\n  Animator.prototype.stop = function (forwardToLast) {\n    if (!this._clip) {\n      return;\n    }\n\n    var clip = this._clip;\n\n    if (forwardToLast) {\n      clip.onframe(1);\n    }\n\n    this._abortedCallback();\n  };\n\n  Animator.prototype.delay = function (time) {\n    this._delay = time;\n    return this;\n  };\n\n  Animator.prototype.during = function (cb) {\n    if (cb) {\n      if (!this._onframeCbs) {\n        this._onframeCbs = [];\n      }\n\n      this._onframeCbs.push(cb);\n    }\n\n    return this;\n  };\n\n  Animator.prototype.done = function (cb) {\n    if (cb) {\n      if (!this._doneCbs) {\n        this._doneCbs = [];\n      }\n\n      this._doneCbs.push(cb);\n    }\n\n    return this;\n  };\n\n  Animator.prototype.aborted = function (cb) {\n    if (cb) {\n      if (!this._abortedCbs) {\n        this._abortedCbs = [];\n      }\n\n      this._abortedCbs.push(cb);\n    }\n\n    return this;\n  };\n\n  Animator.prototype.getClip = function () {\n    return this._clip;\n  };\n\n  Animator.prototype.getTrack = function (propName) {\n    return this._tracks[propName];\n  };\n\n  Animator.prototype.getTracks = function () {\n    var _this = this;\n\n    return (0, _util.map)(this._trackKeys, function (key) {\n      return _this._tracks[key];\n    });\n  };\n\n  Animator.prototype.stopTracks = function (propNames, forwardToLast) {\n    if (!propNames.length || !this._clip) {\n      return true;\n    }\n\n    var tracks = this._tracks;\n    var tracksKeys = this._trackKeys;\n\n    for (var i = 0; i < propNames.length; i++) {\n      var track = tracks[propNames[i]];\n\n      if (track && !track.isFinished()) {\n        if (forwardToLast) {\n          track.step(this._target, 1);\n        } else if (this._started === 1) {\n          track.step(this._target, 0);\n        }\n\n        track.setFinished();\n      }\n    }\n\n    var allAborted = true;\n\n    for (var i = 0; i < tracksKeys.length; i++) {\n      if (!tracks[tracksKeys[i]].isFinished()) {\n        allAborted = false;\n        break;\n      }\n    }\n\n    if (allAborted) {\n      this._abortedCallback();\n    }\n\n    return allAborted;\n  };\n\n  Animator.prototype.saveTo = function (target, trackKeys, firstOrLast) {\n    if (!target) {\n      return;\n    }\n\n    trackKeys = trackKeys || this._trackKeys;\n\n    for (var i = 0; i < trackKeys.length; i++) {\n      var propName = trackKeys[i];\n      var track = this._tracks[propName];\n\n      if (!track || track.isFinished()) {\n        continue;\n      }\n\n      var kfs = track.keyframes;\n      var kf = kfs[firstOrLast ? 0 : kfs.length - 1];\n\n      if (kf) {\n        target[propName] = cloneValue(kf.rawValue);\n      }\n    }\n  };\n\n  Animator.prototype.__changeFinalValue = function (finalProps, trackKeys) {\n    trackKeys = trackKeys || (0, _util.keys)(finalProps);\n\n    for (var i = 0; i < trackKeys.length; i++) {\n      var propName = trackKeys[i];\n      var track = this._tracks[propName];\n\n      if (!track) {\n        continue;\n      }\n\n      var kfs = track.keyframes;\n\n      if (kfs.length > 1) {\n        var lastKf = kfs.pop();\n        track.addKeyframe(lastKf.time, finalProps[propName]);\n        track.prepare(this._maxTime, track.getAdditiveTrack());\n      }\n    }\n  };\n\n  return Animator;\n}();\n\nvar _default = Animator;\nexports.default = _default;","map":{"version":3,"names":["arraySlice","Array","prototype","slice","interpolateNumber","p0","p1","percent","interpolate1DArray","out","len","length","i","interpolate2DArray","len2","j","add1DArray","sign","add2DArray","fillColorStops","val0","val1","len0","len1","shorterArr","shorterLen","Math","min","last","color","offset","max","push","fillArray","arrDim","arr0","arr1","arr0Len","arr1Len","isPreviousLarger","call","isNaN","cloneValue","value","isArrayLike","ret","rgba2String","rgba","floor","join","guessArrayDim","VALUE_TYPE_NUMBER","VALUE_TYPE_1D_ARRAY","VALUE_TYPE_2D_ARRAY","VALUE_TYPE_COLOR","VALUE_TYPE_LINEAR_GRADIENT","VALUE_TYPE_RADIAL_GRADIENT","VALUE_TYPE_UNKOWN","isGradientValueType","valType","isArrayValueType","tmpRgba","Track","propName","keyframes","discrete","_invalid","_needsSort","_lastFr","_lastFrP","isFinished","_finished","setFinished","_additiveTrack","needsAnimate","getAdditiveTrack","addKeyframe","time","rawValue","easing","arrayDim","isNumber","eqNaN","isString","colorArray","parse","isGradientObject","parsedGradient","extend","colorStops","map","colorStop","isLinearGradient","isRadialGradient","kf","easingFunc","isFunction","easingFuncs","createCubicEasingFunc","prepare","maxTime","additiveTrack","kfs","sort","a","b","kfsLen","lastKf","isDiscrete","isArr","isGradient","lastValue","startValue","additiveValue","step","target","isAdditive","valueKey","kfsNum","isValueColor","frameIdx","lastFrame","mathMin","frame","nextFrame","start","interval","w","targetArr","_additiveValue","val","nextVal_1","isLinearGradient_1","type","x","y","idx","nextColorStop","global","x2","y2","r","_addToTarget","Animator","loop","allowDiscreteAnimation","additiveTo","_tracks","_trackKeys","_maxTime","_started","_clip","_target","_loop","logError","_additiveAnimators","_allowDiscrete","getMaxTime","getDelay","_delay","getLoop","getTarget","changeTarget","when","props","whenWithKeys","keys","propNames","tracks","track","initialValue","_getAdditiveTrack","addtiveTrackKfs","lastFinalKf","pause","_paused","resume","isPaused","duration","_force","_doneCallback","_setTracksFinished","doneList","_doneCbs","_abortedCallback","animation","abortedList","_abortedCbs","removeClip","tracksKeys","trackName","additiveAnimators","getTrack","self","clip","Clip","life","delay","onframe","stillHasAdditiveAnimator","onframeList","_onframeCbs","ondestroy","addClip","setEasing","stop","forwardToLast","during","cb","done","aborted","getClip","getTracks","_this","key","stopTracks","allAborted","saveTo","trackKeys","firstOrLast","__changeFinalValue","finalProps","pop"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/zrender/lib/animation/Animator.js"],"sourcesContent":["import Clip from './Clip.js';\nimport * as color from '../tool/color.js';\nimport { eqNaN, extend, isArrayLike, isFunction, isGradientObject, isNumber, isString, keys, logError, map } from '../core/util.js';\nimport easingFuncs from './easing.js';\nimport { createCubicEasingFunc } from './cubicEasing.js';\nimport { isLinearGradient, isRadialGradient } from '../svg/helper.js';\n;\nvar arraySlice = Array.prototype.slice;\nfunction interpolateNumber(p0, p1, percent) {\n    return (p1 - p0) * percent + p0;\n}\nfunction interpolate1DArray(out, p0, p1, percent) {\n    var len = p0.length;\n    for (var i = 0; i < len; i++) {\n        out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n    return out;\n}\nfunction interpolate2DArray(out, p0, p1, percent) {\n    var len = p0.length;\n    var len2 = len && p0[0].length;\n    for (var i = 0; i < len; i++) {\n        if (!out[i]) {\n            out[i] = [];\n        }\n        for (var j = 0; j < len2; j++) {\n            out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n        }\n    }\n    return out;\n}\nfunction add1DArray(out, p0, p1, sign) {\n    var len = p0.length;\n    for (var i = 0; i < len; i++) {\n        out[i] = p0[i] + p1[i] * sign;\n    }\n    return out;\n}\nfunction add2DArray(out, p0, p1, sign) {\n    var len = p0.length;\n    var len2 = len && p0[0].length;\n    for (var i = 0; i < len; i++) {\n        if (!out[i]) {\n            out[i] = [];\n        }\n        for (var j = 0; j < len2; j++) {\n            out[i][j] = p0[i][j] + p1[i][j] * sign;\n        }\n    }\n    return out;\n}\nfunction fillColorStops(val0, val1) {\n    var len0 = val0.length;\n    var len1 = val1.length;\n    var shorterArr = len0 > len1 ? val1 : val0;\n    var shorterLen = Math.min(len0, len1);\n    var last = shorterArr[shorterLen - 1] || { color: [0, 0, 0, 0], offset: 0 };\n    for (var i = shorterLen; i < Math.max(len0, len1); i++) {\n        shorterArr.push({\n            offset: last.offset,\n            color: last.color.slice()\n        });\n    }\n}\nfunction fillArray(val0, val1, arrDim) {\n    var arr0 = val0;\n    var arr1 = val1;\n    if (!arr0.push || !arr1.push) {\n        return;\n    }\n    var arr0Len = arr0.length;\n    var arr1Len = arr1.length;\n    if (arr0Len !== arr1Len) {\n        var isPreviousLarger = arr0Len > arr1Len;\n        if (isPreviousLarger) {\n            arr0.length = arr1Len;\n        }\n        else {\n            for (var i = arr0Len; i < arr1Len; i++) {\n                arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n            }\n        }\n    }\n    var len2 = arr0[0] && arr0[0].length;\n    for (var i = 0; i < arr0.length; i++) {\n        if (arrDim === 1) {\n            if (isNaN(arr0[i])) {\n                arr0[i] = arr1[i];\n            }\n        }\n        else {\n            for (var j = 0; j < len2; j++) {\n                if (isNaN(arr0[i][j])) {\n                    arr0[i][j] = arr1[i][j];\n                }\n            }\n        }\n    }\n}\nexport function cloneValue(value) {\n    if (isArrayLike(value)) {\n        var len = value.length;\n        if (isArrayLike(value[0])) {\n            var ret = [];\n            for (var i = 0; i < len; i++) {\n                ret.push(arraySlice.call(value[i]));\n            }\n            return ret;\n        }\n        return arraySlice.call(value);\n    }\n    return value;\n}\nfunction rgba2String(rgba) {\n    rgba[0] = Math.floor(rgba[0]) || 0;\n    rgba[1] = Math.floor(rgba[1]) || 0;\n    rgba[2] = Math.floor(rgba[2]) || 0;\n    rgba[3] = rgba[3] == null ? 1 : rgba[3];\n    return 'rgba(' + rgba.join(',') + ')';\n}\nfunction guessArrayDim(value) {\n    return isArrayLike(value && value[0]) ? 2 : 1;\n}\nvar VALUE_TYPE_NUMBER = 0;\nvar VALUE_TYPE_1D_ARRAY = 1;\nvar VALUE_TYPE_2D_ARRAY = 2;\nvar VALUE_TYPE_COLOR = 3;\nvar VALUE_TYPE_LINEAR_GRADIENT = 4;\nvar VALUE_TYPE_RADIAL_GRADIENT = 5;\nvar VALUE_TYPE_UNKOWN = 6;\nfunction isGradientValueType(valType) {\n    return valType === VALUE_TYPE_LINEAR_GRADIENT || valType === VALUE_TYPE_RADIAL_GRADIENT;\n}\nfunction isArrayValueType(valType) {\n    return valType === VALUE_TYPE_1D_ARRAY || valType === VALUE_TYPE_2D_ARRAY;\n}\nvar tmpRgba = [0, 0, 0, 0];\nvar Track = (function () {\n    function Track(propName) {\n        this.keyframes = [];\n        this.discrete = false;\n        this._invalid = false;\n        this._needsSort = false;\n        this._lastFr = 0;\n        this._lastFrP = 0;\n        this.propName = propName;\n    }\n    Track.prototype.isFinished = function () {\n        return this._finished;\n    };\n    Track.prototype.setFinished = function () {\n        this._finished = true;\n        if (this._additiveTrack) {\n            this._additiveTrack.setFinished();\n        }\n    };\n    Track.prototype.needsAnimate = function () {\n        return this.keyframes.length >= 1;\n    };\n    Track.prototype.getAdditiveTrack = function () {\n        return this._additiveTrack;\n    };\n    Track.prototype.addKeyframe = function (time, rawValue, easing) {\n        this._needsSort = true;\n        var keyframes = this.keyframes;\n        var len = keyframes.length;\n        var discrete = false;\n        var valType = VALUE_TYPE_UNKOWN;\n        var value = rawValue;\n        if (isArrayLike(rawValue)) {\n            var arrayDim = guessArrayDim(rawValue);\n            valType = arrayDim;\n            if (arrayDim === 1 && !isNumber(rawValue[0])\n                || arrayDim === 2 && !isNumber(rawValue[0][0])) {\n                discrete = true;\n            }\n        }\n        else {\n            if (isNumber(rawValue) && !eqNaN(rawValue)) {\n                valType = VALUE_TYPE_NUMBER;\n            }\n            else if (isString(rawValue)) {\n                if (!isNaN(+rawValue)) {\n                    valType = VALUE_TYPE_NUMBER;\n                }\n                else {\n                    var colorArray = color.parse(rawValue);\n                    if (colorArray) {\n                        value = colorArray;\n                        valType = VALUE_TYPE_COLOR;\n                    }\n                }\n            }\n            else if (isGradientObject(rawValue)) {\n                var parsedGradient = extend({}, value);\n                parsedGradient.colorStops = map(rawValue.colorStops, function (colorStop) { return ({\n                    offset: colorStop.offset,\n                    color: color.parse(colorStop.color)\n                }); });\n                if (isLinearGradient(rawValue)) {\n                    valType = VALUE_TYPE_LINEAR_GRADIENT;\n                }\n                else if (isRadialGradient(rawValue)) {\n                    valType = VALUE_TYPE_RADIAL_GRADIENT;\n                }\n                value = parsedGradient;\n            }\n        }\n        if (len === 0) {\n            this.valType = valType;\n        }\n        else if (valType !== this.valType || valType === VALUE_TYPE_UNKOWN) {\n            discrete = true;\n        }\n        this.discrete = this.discrete || discrete;\n        var kf = {\n            time: time,\n            value: value,\n            rawValue: rawValue,\n            percent: 0\n        };\n        if (easing) {\n            kf.easing = easing;\n            kf.easingFunc = isFunction(easing)\n                ? easing\n                : easingFuncs[easing] || createCubicEasingFunc(easing);\n        }\n        keyframes.push(kf);\n        return kf;\n    };\n    Track.prototype.prepare = function (maxTime, additiveTrack) {\n        var kfs = this.keyframes;\n        if (this._needsSort) {\n            kfs.sort(function (a, b) {\n                return a.time - b.time;\n            });\n        }\n        var valType = this.valType;\n        var kfsLen = kfs.length;\n        var lastKf = kfs[kfsLen - 1];\n        var isDiscrete = this.discrete;\n        var isArr = isArrayValueType(valType);\n        var isGradient = isGradientValueType(valType);\n        for (var i = 0; i < kfsLen; i++) {\n            var kf = kfs[i];\n            var value = kf.value;\n            var lastValue = lastKf.value;\n            kf.percent = kf.time / maxTime;\n            if (!isDiscrete) {\n                if (isArr && i !== kfsLen - 1) {\n                    fillArray(value, lastValue, valType);\n                }\n                else if (isGradient) {\n                    fillColorStops(value.colorStops, lastValue.colorStops);\n                }\n            }\n        }\n        if (!isDiscrete\n            && valType !== VALUE_TYPE_RADIAL_GRADIENT\n            && additiveTrack\n            && this.needsAnimate()\n            && additiveTrack.needsAnimate()\n            && valType === additiveTrack.valType\n            && !additiveTrack._finished) {\n            this._additiveTrack = additiveTrack;\n            var startValue = kfs[0].value;\n            for (var i = 0; i < kfsLen; i++) {\n                if (valType === VALUE_TYPE_NUMBER) {\n                    kfs[i].additiveValue = kfs[i].value - startValue;\n                }\n                else if (valType === VALUE_TYPE_COLOR) {\n                    kfs[i].additiveValue =\n                        add1DArray([], kfs[i].value, startValue, -1);\n                }\n                else if (isArrayValueType(valType)) {\n                    kfs[i].additiveValue = valType === VALUE_TYPE_1D_ARRAY\n                        ? add1DArray([], kfs[i].value, startValue, -1)\n                        : add2DArray([], kfs[i].value, startValue, -1);\n                }\n            }\n        }\n    };\n    Track.prototype.step = function (target, percent) {\n        if (this._finished) {\n            return;\n        }\n        if (this._additiveTrack && this._additiveTrack._finished) {\n            this._additiveTrack = null;\n        }\n        var isAdditive = this._additiveTrack != null;\n        var valueKey = isAdditive ? 'additiveValue' : 'value';\n        var valType = this.valType;\n        var keyframes = this.keyframes;\n        var kfsNum = keyframes.length;\n        var propName = this.propName;\n        var isValueColor = valType === VALUE_TYPE_COLOR;\n        var frameIdx;\n        var lastFrame = this._lastFr;\n        var mathMin = Math.min;\n        var frame;\n        var nextFrame;\n        if (kfsNum === 1) {\n            frame = nextFrame = keyframes[0];\n        }\n        else {\n            if (percent < 0) {\n                frameIdx = 0;\n            }\n            else if (percent < this._lastFrP) {\n                var start = mathMin(lastFrame + 1, kfsNum - 1);\n                for (frameIdx = start; frameIdx >= 0; frameIdx--) {\n                    if (keyframes[frameIdx].percent <= percent) {\n                        break;\n                    }\n                }\n                frameIdx = mathMin(frameIdx, kfsNum - 2);\n            }\n            else {\n                for (frameIdx = lastFrame; frameIdx < kfsNum; frameIdx++) {\n                    if (keyframes[frameIdx].percent > percent) {\n                        break;\n                    }\n                }\n                frameIdx = mathMin(frameIdx - 1, kfsNum - 2);\n            }\n            nextFrame = keyframes[frameIdx + 1];\n            frame = keyframes[frameIdx];\n        }\n        if (!(frame && nextFrame)) {\n            return;\n        }\n        this._lastFr = frameIdx;\n        this._lastFrP = percent;\n        var interval = (nextFrame.percent - frame.percent);\n        var w = interval === 0 ? 1 : mathMin((percent - frame.percent) / interval, 1);\n        if (nextFrame.easingFunc) {\n            w = nextFrame.easingFunc(w);\n        }\n        var targetArr = isAdditive ? this._additiveValue\n            : (isValueColor ? tmpRgba : target[propName]);\n        if ((isArrayValueType(valType) || isValueColor) && !targetArr) {\n            targetArr = this._additiveValue = [];\n        }\n        if (this.discrete) {\n            target[propName] = w < 1 ? frame.rawValue : nextFrame.rawValue;\n        }\n        else if (isArrayValueType(valType)) {\n            valType === VALUE_TYPE_1D_ARRAY\n                ? interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w)\n                : interpolate2DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n        }\n        else if (isGradientValueType(valType)) {\n            var val = frame[valueKey];\n            var nextVal_1 = nextFrame[valueKey];\n            var isLinearGradient_1 = valType === VALUE_TYPE_LINEAR_GRADIENT;\n            target[propName] = {\n                type: isLinearGradient_1 ? 'linear' : 'radial',\n                x: interpolateNumber(val.x, nextVal_1.x, w),\n                y: interpolateNumber(val.y, nextVal_1.y, w),\n                colorStops: map(val.colorStops, function (colorStop, idx) {\n                    var nextColorStop = nextVal_1.colorStops[idx];\n                    return {\n                        offset: interpolateNumber(colorStop.offset, nextColorStop.offset, w),\n                        color: rgba2String(interpolate1DArray([], colorStop.color, nextColorStop.color, w))\n                    };\n                }),\n                global: nextVal_1.global\n            };\n            if (isLinearGradient_1) {\n                target[propName].x2 = interpolateNumber(val.x2, nextVal_1.x2, w);\n                target[propName].y2 = interpolateNumber(val.y2, nextVal_1.y2, w);\n            }\n            else {\n                target[propName].r = interpolateNumber(val.r, nextVal_1.r, w);\n            }\n        }\n        else if (isValueColor) {\n            interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n            if (!isAdditive) {\n                target[propName] = rgba2String(targetArr);\n            }\n        }\n        else {\n            var value = interpolateNumber(frame[valueKey], nextFrame[valueKey], w);\n            if (isAdditive) {\n                this._additiveValue = value;\n            }\n            else {\n                target[propName] = value;\n            }\n        }\n        if (isAdditive) {\n            this._addToTarget(target);\n        }\n    };\n    Track.prototype._addToTarget = function (target) {\n        var valType = this.valType;\n        var propName = this.propName;\n        var additiveValue = this._additiveValue;\n        if (valType === VALUE_TYPE_NUMBER) {\n            target[propName] = target[propName] + additiveValue;\n        }\n        else if (valType === VALUE_TYPE_COLOR) {\n            color.parse(target[propName], tmpRgba);\n            add1DArray(tmpRgba, tmpRgba, additiveValue, 1);\n            target[propName] = rgba2String(tmpRgba);\n        }\n        else if (valType === VALUE_TYPE_1D_ARRAY) {\n            add1DArray(target[propName], target[propName], additiveValue, 1);\n        }\n        else if (valType === VALUE_TYPE_2D_ARRAY) {\n            add2DArray(target[propName], target[propName], additiveValue, 1);\n        }\n    };\n    return Track;\n}());\nvar Animator = (function () {\n    function Animator(target, loop, allowDiscreteAnimation, additiveTo) {\n        this._tracks = {};\n        this._trackKeys = [];\n        this._maxTime = 0;\n        this._started = 0;\n        this._clip = null;\n        this._target = target;\n        this._loop = loop;\n        if (loop && additiveTo) {\n            logError('Can\\' use additive animation on looped animation.');\n            return;\n        }\n        this._additiveAnimators = additiveTo;\n        this._allowDiscrete = allowDiscreteAnimation;\n    }\n    Animator.prototype.getMaxTime = function () {\n        return this._maxTime;\n    };\n    Animator.prototype.getDelay = function () {\n        return this._delay;\n    };\n    Animator.prototype.getLoop = function () {\n        return this._loop;\n    };\n    Animator.prototype.getTarget = function () {\n        return this._target;\n    };\n    Animator.prototype.changeTarget = function (target) {\n        this._target = target;\n    };\n    Animator.prototype.when = function (time, props, easing) {\n        return this.whenWithKeys(time, props, keys(props), easing);\n    };\n    Animator.prototype.whenWithKeys = function (time, props, propNames, easing) {\n        var tracks = this._tracks;\n        for (var i = 0; i < propNames.length; i++) {\n            var propName = propNames[i];\n            var track = tracks[propName];\n            if (!track) {\n                track = tracks[propName] = new Track(propName);\n                var initialValue = void 0;\n                var additiveTrack = this._getAdditiveTrack(propName);\n                if (additiveTrack) {\n                    var addtiveTrackKfs = additiveTrack.keyframes;\n                    var lastFinalKf = addtiveTrackKfs[addtiveTrackKfs.length - 1];\n                    initialValue = lastFinalKf && lastFinalKf.value;\n                    if (additiveTrack.valType === VALUE_TYPE_COLOR && initialValue) {\n                        initialValue = rgba2String(initialValue);\n                    }\n                }\n                else {\n                    initialValue = this._target[propName];\n                }\n                if (initialValue == null) {\n                    continue;\n                }\n                if (time > 0) {\n                    track.addKeyframe(0, cloneValue(initialValue), easing);\n                }\n                this._trackKeys.push(propName);\n            }\n            track.addKeyframe(time, cloneValue(props[propName]), easing);\n        }\n        this._maxTime = Math.max(this._maxTime, time);\n        return this;\n    };\n    Animator.prototype.pause = function () {\n        this._clip.pause();\n        this._paused = true;\n    };\n    Animator.prototype.resume = function () {\n        this._clip.resume();\n        this._paused = false;\n    };\n    Animator.prototype.isPaused = function () {\n        return !!this._paused;\n    };\n    Animator.prototype.duration = function (duration) {\n        this._maxTime = duration;\n        this._force = true;\n        return this;\n    };\n    Animator.prototype._doneCallback = function () {\n        this._setTracksFinished();\n        this._clip = null;\n        var doneList = this._doneCbs;\n        if (doneList) {\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        }\n    };\n    Animator.prototype._abortedCallback = function () {\n        this._setTracksFinished();\n        var animation = this.animation;\n        var abortedList = this._abortedCbs;\n        if (animation) {\n            animation.removeClip(this._clip);\n        }\n        this._clip = null;\n        if (abortedList) {\n            for (var i = 0; i < abortedList.length; i++) {\n                abortedList[i].call(this);\n            }\n        }\n    };\n    Animator.prototype._setTracksFinished = function () {\n        var tracks = this._tracks;\n        var tracksKeys = this._trackKeys;\n        for (var i = 0; i < tracksKeys.length; i++) {\n            tracks[tracksKeys[i]].setFinished();\n        }\n    };\n    Animator.prototype._getAdditiveTrack = function (trackName) {\n        var additiveTrack;\n        var additiveAnimators = this._additiveAnimators;\n        if (additiveAnimators) {\n            for (var i = 0; i < additiveAnimators.length; i++) {\n                var track = additiveAnimators[i].getTrack(trackName);\n                if (track) {\n                    additiveTrack = track;\n                }\n            }\n        }\n        return additiveTrack;\n    };\n    Animator.prototype.start = function (easing) {\n        if (this._started > 0) {\n            return;\n        }\n        this._started = 1;\n        var self = this;\n        var tracks = [];\n        var maxTime = this._maxTime || 0;\n        for (var i = 0; i < this._trackKeys.length; i++) {\n            var propName = this._trackKeys[i];\n            var track = this._tracks[propName];\n            var additiveTrack = this._getAdditiveTrack(propName);\n            var kfs = track.keyframes;\n            var kfsNum = kfs.length;\n            track.prepare(maxTime, additiveTrack);\n            if (track.needsAnimate()) {\n                if (!this._allowDiscrete && track.discrete) {\n                    var lastKf = kfs[kfsNum - 1];\n                    if (lastKf) {\n                        self._target[track.propName] = lastKf.rawValue;\n                    }\n                    track.setFinished();\n                }\n                else {\n                    tracks.push(track);\n                }\n            }\n        }\n        if (tracks.length || this._force) {\n            var clip = new Clip({\n                life: maxTime,\n                loop: this._loop,\n                delay: this._delay || 0,\n                onframe: function (percent) {\n                    self._started = 2;\n                    var additiveAnimators = self._additiveAnimators;\n                    if (additiveAnimators) {\n                        var stillHasAdditiveAnimator = false;\n                        for (var i = 0; i < additiveAnimators.length; i++) {\n                            if (additiveAnimators[i]._clip) {\n                                stillHasAdditiveAnimator = true;\n                                break;\n                            }\n                        }\n                        if (!stillHasAdditiveAnimator) {\n                            self._additiveAnimators = null;\n                        }\n                    }\n                    for (var i = 0; i < tracks.length; i++) {\n                        tracks[i].step(self._target, percent);\n                    }\n                    var onframeList = self._onframeCbs;\n                    if (onframeList) {\n                        for (var i = 0; i < onframeList.length; i++) {\n                            onframeList[i](self._target, percent);\n                        }\n                    }\n                },\n                ondestroy: function () {\n                    self._doneCallback();\n                }\n            });\n            this._clip = clip;\n            if (this.animation) {\n                this.animation.addClip(clip);\n            }\n            if (easing) {\n                clip.setEasing(easing);\n            }\n        }\n        else {\n            this._doneCallback();\n        }\n        return this;\n    };\n    Animator.prototype.stop = function (forwardToLast) {\n        if (!this._clip) {\n            return;\n        }\n        var clip = this._clip;\n        if (forwardToLast) {\n            clip.onframe(1);\n        }\n        this._abortedCallback();\n    };\n    Animator.prototype.delay = function (time) {\n        this._delay = time;\n        return this;\n    };\n    Animator.prototype.during = function (cb) {\n        if (cb) {\n            if (!this._onframeCbs) {\n                this._onframeCbs = [];\n            }\n            this._onframeCbs.push(cb);\n        }\n        return this;\n    };\n    Animator.prototype.done = function (cb) {\n        if (cb) {\n            if (!this._doneCbs) {\n                this._doneCbs = [];\n            }\n            this._doneCbs.push(cb);\n        }\n        return this;\n    };\n    Animator.prototype.aborted = function (cb) {\n        if (cb) {\n            if (!this._abortedCbs) {\n                this._abortedCbs = [];\n            }\n            this._abortedCbs.push(cb);\n        }\n        return this;\n    };\n    Animator.prototype.getClip = function () {\n        return this._clip;\n    };\n    Animator.prototype.getTrack = function (propName) {\n        return this._tracks[propName];\n    };\n    Animator.prototype.getTracks = function () {\n        var _this = this;\n        return map(this._trackKeys, function (key) { return _this._tracks[key]; });\n    };\n    Animator.prototype.stopTracks = function (propNames, forwardToLast) {\n        if (!propNames.length || !this._clip) {\n            return true;\n        }\n        var tracks = this._tracks;\n        var tracksKeys = this._trackKeys;\n        for (var i = 0; i < propNames.length; i++) {\n            var track = tracks[propNames[i]];\n            if (track && !track.isFinished()) {\n                if (forwardToLast) {\n                    track.step(this._target, 1);\n                }\n                else if (this._started === 1) {\n                    track.step(this._target, 0);\n                }\n                track.setFinished();\n            }\n        }\n        var allAborted = true;\n        for (var i = 0; i < tracksKeys.length; i++) {\n            if (!tracks[tracksKeys[i]].isFinished()) {\n                allAborted = false;\n                break;\n            }\n        }\n        if (allAborted) {\n            this._abortedCallback();\n        }\n        return allAborted;\n    };\n    Animator.prototype.saveTo = function (target, trackKeys, firstOrLast) {\n        if (!target) {\n            return;\n        }\n        trackKeys = trackKeys || this._trackKeys;\n        for (var i = 0; i < trackKeys.length; i++) {\n            var propName = trackKeys[i];\n            var track = this._tracks[propName];\n            if (!track || track.isFinished()) {\n                continue;\n            }\n            var kfs = track.keyframes;\n            var kf = kfs[firstOrLast ? 0 : kfs.length - 1];\n            if (kf) {\n                target[propName] = cloneValue(kf.rawValue);\n            }\n        }\n    };\n    Animator.prototype.__changeFinalValue = function (finalProps, trackKeys) {\n        trackKeys = trackKeys || keys(finalProps);\n        for (var i = 0; i < trackKeys.length; i++) {\n            var propName = trackKeys[i];\n            var track = this._tracks[propName];\n            if (!track) {\n                continue;\n            }\n            var kfs = track.keyframes;\n            if (kfs.length > 1) {\n                var lastKf = kfs.pop();\n                track.addKeyframe(lastKf.time, finalProps[propName]);\n                track.prepare(this._maxTime, track.getAdditiveTrack());\n            }\n        }\n    };\n    return Animator;\n}());\nexport default Animator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}