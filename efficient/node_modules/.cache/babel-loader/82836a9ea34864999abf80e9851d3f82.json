{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _tslib = require(\"tslib\");\n\nvar colorUtil = _interopRequireWildcard(require(\"zrender/lib/tool/color.js\"));\n\nvar _SeriesData = _interopRequireDefault(require(\"../../data/SeriesData.js\"));\n\nvar numberUtil = _interopRequireWildcard(require(\"../../util/number.js\"));\n\nvar graphic = _interopRequireWildcard(require(\"../../util/graphic.js\"));\n\nvar _states = require(\"../../util/states.js\");\n\nvar markerHelper = _interopRequireWildcard(require(\"./markerHelper.js\"));\n\nvar _MarkerView = _interopRequireDefault(require(\"./MarkerView.js\"));\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar _CoordinateSystem = require(\"../../coord/CoordinateSystem.js\");\n\nvar _MarkerModel = _interopRequireDefault(require(\"./MarkerModel.js\"));\n\nvar _model = require(\"../../util/model.js\");\n\nvar _helper = require(\"../../visual/helper.js\");\n\nvar _labelStyle = require(\"../../label/labelStyle.js\");\n\nvar _innerStore = require(\"../../util/innerStore.js\");\n\nvar _dataValueHelper = require(\"../../data/helper/dataValueHelper.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Optimize on polar\nvar inner = (0, _model.makeInner)();\n\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]); // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = (0, _util.retrieve)(ltCoord[0], -Infinity);\n  ltCoord[1] = (0, _util.retrieve)(ltCoord[1], -Infinity);\n  rbCoord[0] = (0, _util.retrieve)(rbCoord[0], Infinity);\n  rbCoord[1] = (0, _util.retrieve)(rbCoord[1], Infinity); // Merge option into one\n\n  var result = (0, _util.mergeAll)([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkAreaHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n  var item0 = {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  };\n  var item1 = {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  };\n\n  if ((0, _CoordinateSystem.isCoordinateSystemType)(coordSys, 'cartesian2d')) {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkAreaHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkAreaHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    } //Directly returning true may also do the work,\n    //because markArea will not be shown automatically\n    //when it's not included in coordinate system.\n    //But filtering ahead can avoid keeping rendering markArea\n    //when there are too many of them.\n\n\n    return markerHelper.zoneFilter(coordSys, item0, item1);\n  }\n\n  return markerHelper.dataFilter(coordSys, item0) || markerHelper.dataFilter(coordSys, item1);\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if ((0, _CoordinateSystem.isCoordinateSystemType)(coordSys, 'cartesian2d')) {\n      // TODO: TYPE ts@4.1 may still infer it as Axis instead of Axis2D. Not sure if it's a bug\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\n\nvar MarkAreaView =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(MarkAreaView, _super);\n\n  function MarkAreaView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = MarkAreaView.type;\n    return _this;\n  }\n\n  MarkAreaView.prototype.updateTransform = function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = _MarkerModel.default.getMarkerModelFromSeries(seriesModel, 'markArea');\n\n      if (maModel) {\n        var areaData_1 = maModel.getData();\n        areaData_1.each(function (idx) {\n          var points = (0, _util.map)(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData_1, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData_1.setItemLayout(idx, points);\n          var el = areaData_1.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  };\n\n  MarkAreaView.prototype.renderSeries = function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    this.markKeep(polygonGroup);\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      var points = (0, _util.map)(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      });\n      var xAxisScale = coordSys.getAxis('x').scale;\n      var yAxisScale = coordSys.getAxis('y').scale;\n      var xAxisExtent = xAxisScale.getExtent();\n      var yAxisExtent = yAxisScale.getExtent();\n      var xPointExtent = [xAxisScale.parse(areaData.get('x0', idx)), xAxisScale.parse(areaData.get('x1', idx))];\n      var yPointExtent = [yAxisScale.parse(areaData.get('y0', idx)), yAxisScale.parse(areaData.get('y1', idx))];\n      numberUtil.asc(xPointExtent);\n      numberUtil.asc(yPointExtent);\n      var overlapped = !(xAxisExtent[0] > xPointExtent[1] || xAxisExtent[1] < xPointExtent[0] || yAxisExtent[0] > yPointExtent[1] || yAxisExtent[1] < yPointExtent[0]); // If none of the area is inside coordSys, allClipped is set to be true\n      // in layout so that label will not be displayed. See #12591\n\n      var allClipped = !overlapped;\n      areaData.setItemLayout(idx, {\n        points: points,\n        allClipped: allClipped\n      });\n      var style = areaData.getItemModel(idx).getModel('itemStyle').getItemStyle();\n      var color = (0, _helper.getVisualFromData)(seriesData, 'color');\n\n      if (!style.fill) {\n        style.fill = color;\n\n        if ((0, _util.isString)(style.fill)) {\n          style.fill = colorUtil.modifyAlpha(style.fill, 0.4);\n        }\n      }\n\n      if (!style.stroke) {\n        style.stroke = color;\n      } // Visual\n\n\n      areaData.setItemVisual(idx, 'style', style);\n    });\n    areaData.diff(inner(polygonGroup).data).add(function (idx) {\n      var layout = areaData.getItemLayout(idx);\n\n      if (!layout.allClipped) {\n        var polygon = new graphic.Polygon({\n          shape: {\n            points: layout.points\n          }\n        });\n        areaData.setItemGraphicEl(idx, polygon);\n        polygonGroup.group.add(polygon);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var polygon = inner(polygonGroup).data.getItemGraphicEl(oldIdx);\n      var layout = areaData.getItemLayout(newIdx);\n\n      if (!layout.allClipped) {\n        if (polygon) {\n          graphic.updateProps(polygon, {\n            shape: {\n              points: layout.points\n            }\n          }, maModel, newIdx);\n        } else {\n          polygon = new graphic.Polygon({\n            shape: {\n              points: layout.points\n            }\n          });\n        }\n\n        areaData.setItemGraphicEl(newIdx, polygon);\n        polygonGroup.group.add(polygon);\n      } else if (polygon) {\n        polygonGroup.group.remove(polygon);\n      }\n    }).remove(function (idx) {\n      var polygon = inner(polygonGroup).data.getItemGraphicEl(idx);\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var style = areaData.getItemVisual(idx, 'style');\n      polygon.useStyle(areaData.getItemVisual(idx, 'style'));\n      (0, _labelStyle.setLabelStyle)(polygon, (0, _labelStyle.getLabelStatesModels)(itemModel), {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        inheritColor: (0, _util.isString)(style.fill) ? colorUtil.modifyAlpha(style.fill, 1) : '#000'\n      });\n      (0, _states.setStatesStylesFromModel)(polygon, itemModel);\n      (0, _states.toggleHoverEmphasis)(polygon, null, null, itemModel.get(['emphasis', 'disabled']));\n      (0, _innerStore.getECData)(polygon).dataModel = maModel;\n    });\n    inner(polygonGroup).data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  };\n\n  MarkAreaView.type = 'markArea';\n  return MarkAreaView;\n}(_MarkerView.default);\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var areaData;\n  var dataDims;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    var coordDimsInfos_1 = (0, _util.map)(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return (0, _util.extend)((0, _util.extend)({}, info), {\n        name: coordDim,\n        // DON'T use ordinalMeta to parse and collect ordinal.\n        ordinalMeta: null\n      });\n    });\n    dataDims = (0, _util.map)(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos_1[idx % 2].type\n      };\n    });\n    areaData = new _SeriesData.default(dataDims, maModel);\n  } else {\n    dataDims = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new _SeriesData.default(dataDims, maModel);\n  }\n\n  var optData = (0, _util.map)(maModel.get('data'), (0, _util.curry)(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = (0, _util.filter)(optData, (0, _util.curry)(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    // TODO should convert to ParsedValue?\n    var rawVal = item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n    return (0, _dataValueHelper.parseDataValue)(rawVal, dataDims[dimIndex]);\n  } : function (item, dimName, dataIndex, dimIndex) {\n    return (0, _dataValueHelper.parseDataValue)(item.value, dataDims[dimIndex]);\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}\n\nvar _default = MarkAreaView;\nexports.default = _default;","map":{"version":3,"names":["inner","makeInner","markAreaTransform","seriesModel","coordSys","maModel","item","lt","markerHelper","dataTransform","rb","ltCoord","coord","rbCoord","retrieve","Infinity","result","mergeAll","x0","x","y0","y","x1","y1","isInifinity","val","isNaN","isFinite","ifMarkAreaHasOnlyDim","dimIndex","fromCoord","toCoord","otherDimIndex","markAreaFilter","item0","item1","isCoordinateSystemType","zoneFilter","dataFilter","getSingleMarkerEndPoint","data","idx","dims","api","coordinateSystem","itemModel","getItemModel","point","xPx","numberUtil","parsePercent","get","getWidth","yPx","getHeight","getMarkerPosition","getValues","pt","clampData","dataToPoint","xAxis","getAxis","yAxis","toGlobalCoord","getExtent","dimPermutations","MarkAreaView","_super","__extends","_this","apply","arguments","type","prototype","updateTransform","markAreaModel","ecModel","eachSeries","MarkerModel","getMarkerModelFromSeries","areaData_1","getData","each","points","map","dim","setItemLayout","el","getItemGraphicEl","setShape","renderSeries","seriesId","id","seriesData","areaGroupMap","markerGroupMap","polygonGroup","set","group","graphic","Group","add","markKeep","areaData","createList","setData","xAxisScale","scale","yAxisScale","xAxisExtent","yAxisExtent","xPointExtent","parse","yPointExtent","asc","overlapped","allClipped","style","getModel","getItemStyle","color","getVisualFromData","fill","isString","colorUtil","modifyAlpha","stroke","setItemVisual","diff","layout","getItemLayout","polygon","Polygon","shape","setItemGraphicEl","update","newIdx","oldIdx","updateProps","remove","execute","eachItemGraphicEl","getItemVisual","useStyle","setLabelStyle","getLabelStatesModels","labelFetcher","labelDataIndex","defaultText","getName","inheritColor","setStatesStylesFromModel","toggleHoverEmphasis","getECData","dataModel","silent","MarkerView","dataDims","coordDimsInfos_1","dimensions","coordDim","info","getDimensionInfo","mapDimension","extend","name","ordinalMeta","SeriesData","optData","curry","filter","dimValueGetter","dimName","dataIndex","rawVal","Math","floor","parseDataValue","value","initData","hasItemOption"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/component/marker/MarkAreaView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // TODO Optimize on polar\n\nimport * as colorUtil from 'zrender/lib/tool/color.js';\nimport SeriesData from '../../data/SeriesData.js';\nimport * as numberUtil from '../../util/number.js';\nimport * as graphic from '../../util/graphic.js';\nimport { toggleHoverEmphasis, setStatesStylesFromModel } from '../../util/states.js';\nimport * as markerHelper from './markerHelper.js';\nimport MarkerView from './MarkerView.js';\nimport { retrieve, mergeAll, map, curry, filter, extend, isString } from 'zrender/lib/core/util.js';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem.js';\nimport MarkerModel from './MarkerModel.js';\nimport { makeInner } from '../../util/model.js';\nimport { getVisualFromData } from '../../visual/helper.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { parseDataValue } from '../../data/helper/dataValueHelper.js';\nvar inner = makeInner();\n\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]); // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkAreaHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n  var item0 = {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  };\n  var item1 = {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  };\n\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkAreaHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkAreaHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    } //Directly returning true may also do the work,\n    //because markArea will not be shown automatically\n    //when it's not included in coordinate system.\n    //But filtering ahead can avoid keeping rendering markArea\n    //when there are too many of them.\n\n\n    return markerHelper.zoneFilter(coordSys, item0, item1);\n  }\n\n  return markerHelper.dataFilter(coordSys, item0) || markerHelper.dataFilter(coordSys, item1);\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n      // TODO: TYPE ts@4.1 may still infer it as Axis instead of Axis2D. Not sure if it's a bug\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\n\nvar MarkAreaView =\n/** @class */\nfunction (_super) {\n  __extends(MarkAreaView, _super);\n\n  function MarkAreaView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = MarkAreaView.type;\n    return _this;\n  }\n\n  MarkAreaView.prototype.updateTransform = function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = MarkerModel.getMarkerModelFromSeries(seriesModel, 'markArea');\n\n      if (maModel) {\n        var areaData_1 = maModel.getData();\n        areaData_1.each(function (idx) {\n          var points = map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData_1, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData_1.setItemLayout(idx, points);\n          var el = areaData_1.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  };\n\n  MarkAreaView.prototype.renderSeries = function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    this.markKeep(polygonGroup);\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      var points = map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      });\n      var xAxisScale = coordSys.getAxis('x').scale;\n      var yAxisScale = coordSys.getAxis('y').scale;\n      var xAxisExtent = xAxisScale.getExtent();\n      var yAxisExtent = yAxisScale.getExtent();\n      var xPointExtent = [xAxisScale.parse(areaData.get('x0', idx)), xAxisScale.parse(areaData.get('x1', idx))];\n      var yPointExtent = [yAxisScale.parse(areaData.get('y0', idx)), yAxisScale.parse(areaData.get('y1', idx))];\n      numberUtil.asc(xPointExtent);\n      numberUtil.asc(yPointExtent);\n      var overlapped = !(xAxisExtent[0] > xPointExtent[1] || xAxisExtent[1] < xPointExtent[0] || yAxisExtent[0] > yPointExtent[1] || yAxisExtent[1] < yPointExtent[0]); // If none of the area is inside coordSys, allClipped is set to be true\n      // in layout so that label will not be displayed. See #12591\n\n      var allClipped = !overlapped;\n      areaData.setItemLayout(idx, {\n        points: points,\n        allClipped: allClipped\n      });\n      var style = areaData.getItemModel(idx).getModel('itemStyle').getItemStyle();\n      var color = getVisualFromData(seriesData, 'color');\n\n      if (!style.fill) {\n        style.fill = color;\n\n        if (isString(style.fill)) {\n          style.fill = colorUtil.modifyAlpha(style.fill, 0.4);\n        }\n      }\n\n      if (!style.stroke) {\n        style.stroke = color;\n      } // Visual\n\n\n      areaData.setItemVisual(idx, 'style', style);\n    });\n    areaData.diff(inner(polygonGroup).data).add(function (idx) {\n      var layout = areaData.getItemLayout(idx);\n\n      if (!layout.allClipped) {\n        var polygon = new graphic.Polygon({\n          shape: {\n            points: layout.points\n          }\n        });\n        areaData.setItemGraphicEl(idx, polygon);\n        polygonGroup.group.add(polygon);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var polygon = inner(polygonGroup).data.getItemGraphicEl(oldIdx);\n      var layout = areaData.getItemLayout(newIdx);\n\n      if (!layout.allClipped) {\n        if (polygon) {\n          graphic.updateProps(polygon, {\n            shape: {\n              points: layout.points\n            }\n          }, maModel, newIdx);\n        } else {\n          polygon = new graphic.Polygon({\n            shape: {\n              points: layout.points\n            }\n          });\n        }\n\n        areaData.setItemGraphicEl(newIdx, polygon);\n        polygonGroup.group.add(polygon);\n      } else if (polygon) {\n        polygonGroup.group.remove(polygon);\n      }\n    }).remove(function (idx) {\n      var polygon = inner(polygonGroup).data.getItemGraphicEl(idx);\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var style = areaData.getItemVisual(idx, 'style');\n      polygon.useStyle(areaData.getItemVisual(idx, 'style'));\n      setLabelStyle(polygon, getLabelStatesModels(itemModel), {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        inheritColor: isString(style.fill) ? colorUtil.modifyAlpha(style.fill, 1) : '#000'\n      });\n      setStatesStylesFromModel(polygon, itemModel);\n      toggleHoverEmphasis(polygon, null, null, itemModel.get(['emphasis', 'disabled']));\n      getECData(polygon).dataModel = maModel;\n    });\n    inner(polygonGroup).data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  };\n\n  MarkAreaView.type = 'markArea';\n  return MarkAreaView;\n}(MarkerView);\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var areaData;\n  var dataDims;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    var coordDimsInfos_1 = map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return extend(extend({}, info), {\n        name: coordDim,\n        // DON'T use ordinalMeta to parse and collect ordinal.\n        ordinalMeta: null\n      });\n    });\n    dataDims = map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos_1[idx % 2].type\n      };\n    });\n    areaData = new SeriesData(dataDims, maModel);\n  } else {\n    dataDims = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new SeriesData(dataDims, maModel);\n  }\n\n  var optData = map(maModel.get('data'), curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = filter(optData, curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    // TODO should convert to ParsedValue?\n    var rawVal = item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n    return parseDataValue(rawVal, dataDims[dimIndex]);\n  } : function (item, dimName, dataIndex, dimIndex) {\n    return parseDataValue(item.value, dataDims[dimIndex]);\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}\n\nexport default MarkAreaView;"],"mappings":"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"},"metadata":{},"sourceType":"script"}