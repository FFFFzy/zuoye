{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _tslib = require(\"tslib\");\n\nvar _PointerPath = _interopRequireDefault(require(\"./PointerPath.js\"));\n\nvar graphic = _interopRequireWildcard(require(\"../../util/graphic.js\"));\n\nvar _states = require(\"../../util/states.js\");\n\nvar _labelStyle = require(\"../../label/labelStyle.js\");\n\nvar _Chart = _interopRequireDefault(require(\"../../view/Chart.js\"));\n\nvar _number = require(\"../../util/number.js\");\n\nvar _sausage = _interopRequireDefault(require(\"../../util/shape/sausage.js\"));\n\nvar _symbol = require(\"../../util/symbol.js\");\n\nvar _Image = _interopRequireDefault(require(\"zrender/lib/graphic/Image.js\"));\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar _innerStore = require(\"../../util/innerStore.js\");\n\nvar _PathProxy = require(\"zrender/lib/core/PathProxy.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = (0, _number.parsePercent)(center[0], api.getWidth());\n  var cy = (0, _number.parsePercent)(center[1], api.getHeight());\n  var r = (0, _number.parsePercent)(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(value, labelFormatter) {\n  var label = value == null ? '' : value + '';\n\n  if (labelFormatter) {\n    if ((0, _util.isString)(labelFormatter)) {\n      label = labelFormatter.replace('{value}', label);\n    } else if ((0, _util.isFunction)(labelFormatter)) {\n      label = labelFormatter(value);\n    }\n  }\n\n  return label;\n}\n\nvar GaugeView =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(GaugeView, _super);\n\n  function GaugeView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GaugeView.type;\n    return _this;\n  }\n\n  GaugeView.prototype.render = function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get(['axisLine', 'lineStyle', 'color']);\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n\n    this._data = seriesModel.getData();\n  };\n\n  GaugeView.prototype.dispose = function () {};\n\n  GaugeView.prototype._renderMain = function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var roundCap = axisLineModel.get('roundCap');\n    var MainPath = roundCap ? _sausage.default : graphic.Sector;\n    var showAxis = axisLineModel.get('show');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var axisLineWidth = lineStyleModel.get('width');\n    var angles = [startAngle, endAngle];\n    (0, _PathProxy.normalizeArcAngles)(angles, !clockwise);\n    startAngle = angles[0];\n    endAngle = angles[1];\n    var angleRangeSpan = endAngle - startAngle;\n    var prevEndAngle = startAngle;\n\n    for (var i = 0; showAxis && i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new MainPath({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'width']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      var i;\n\n      for (i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth);\n\n    this._renderTitleAndDetail(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderAnchor(seriesModel, posInfo);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth);\n  };\n\n  GaugeView.prototype._renderTicks = function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = (0, _number.parsePercent)(splitLineModel.get('length'), r);\n    var tickLen = (0, _number.parsePercent)(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n    var splitLineDistance = splitLineModel.get('distance');\n    var unitX;\n    var unitY;\n\n    for (var i = 0; i <= splitNumber; i++) {\n      unitX = Math.cos(angle);\n      unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var distance = splitLineDistance ? splitLineDistance + axisLineWidth : axisLineWidth;\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * (r - distance) + cx,\n            y1: unitY * (r - distance) + cy,\n            x2: unitX * (r - splitLineLen - distance) + cx,\n            y2: unitY * (r - splitLineLen - distance) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var distance = labelModel.get('distance') + splitLineDistance;\n        var label = formatLabel((0, _number.round)(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: (0, _labelStyle.createTextStyle)(labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            verticalAlign: unitY < -0.8 ? 'top' : unitY > 0.8 ? 'bottom' : 'middle',\n            align: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            inheritColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        var distance = tickModel.get('distance');\n        distance = distance ? distance + axisLineWidth : axisLineWidth;\n\n        for (var j = 0; j <= subSplitNumber; j++) {\n          unitX = Math.cos(angle);\n          unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * (r - distance) + cx,\n              y1: unitY * (r - distance) + cy,\n              x2: unitX * (r - tickLen - distance) + cx,\n              y2: unitY * (r - tickLen - distance) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  };\n\n  GaugeView.prototype._renderPointer = function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth) {\n    var group = this.group;\n    var oldData = this._data;\n    var oldProgressData = this._progressEls;\n    var progressList = [];\n    var showPointer = seriesModel.get(['pointer', 'show']);\n    var progressModel = seriesModel.getModel('progress');\n    var showProgress = progressModel.get('show');\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var valueExtent = [minVal, maxVal];\n    var angleExtent = [startAngle, endAngle];\n\n    function createPointer(idx, angle) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      var pointerWidth = (0, _number.parsePercent)(pointerModel.get('width'), posInfo.r);\n      var pointerLength = (0, _number.parsePercent)(pointerModel.get('length'), posInfo.r);\n      var pointerStr = seriesModel.get(['pointer', 'icon']);\n      var pointerOffset = pointerModel.get('offsetCenter');\n      var pointerOffsetX = (0, _number.parsePercent)(pointerOffset[0], posInfo.r);\n      var pointerOffsetY = (0, _number.parsePercent)(pointerOffset[1], posInfo.r);\n      var pointerKeepAspect = pointerModel.get('keepAspect');\n      var pointer; // not exist icon type will be set 'rect'\n\n      if (pointerStr) {\n        pointer = (0, _symbol.createSymbol)(pointerStr, pointerOffsetX - pointerWidth / 2, pointerOffsetY - pointerLength, pointerWidth, pointerLength, null, pointerKeepAspect);\n      } else {\n        pointer = new _PointerPath.default({\n          shape: {\n            angle: -Math.PI / 2,\n            width: pointerWidth,\n            r: pointerLength,\n            x: pointerOffsetX,\n            y: pointerOffsetY\n          }\n        });\n      }\n\n      pointer.rotation = -(angle + Math.PI / 2);\n      pointer.x = posInfo.cx;\n      pointer.y = posInfo.cy;\n      return pointer;\n    }\n\n    function createProgress(idx, endAngle) {\n      var roundCap = progressModel.get('roundCap');\n      var ProgressPath = roundCap ? _sausage.default : graphic.Sector;\n      var isOverlap = progressModel.get('overlap');\n      var progressWidth = isOverlap ? progressModel.get('width') : axisLineWidth / data.count();\n      var r0 = isOverlap ? posInfo.r - progressWidth : posInfo.r - (idx + 1) * progressWidth;\n      var r = isOverlap ? posInfo.r : posInfo.r - idx * progressWidth;\n      var progress = new ProgressPath({\n        shape: {\n          startAngle: startAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: r0,\n          r: r\n        }\n      });\n      isOverlap && (progress.z2 = maxVal - data.get(valueDim, idx) % maxVal);\n      return progress;\n    }\n\n    if (showProgress || showPointer) {\n      data.diff(oldData).add(function (idx) {\n        var val = data.get(valueDim, idx);\n\n        if (showPointer) {\n          var pointer = createPointer(idx, startAngle); // TODO hide pointer on NaN value?\n\n          graphic.initProps(pointer, {\n            rotation: -((isNaN(+val) ? angleExtent[0] : (0, _number.linearMap)(val, valueExtent, angleExtent, true)) + Math.PI / 2)\n          }, seriesModel);\n          group.add(pointer);\n          data.setItemGraphicEl(idx, pointer);\n        }\n\n        if (showProgress) {\n          var progress = createProgress(idx, startAngle);\n          var isClip = progressModel.get('clip');\n          graphic.initProps(progress, {\n            shape: {\n              endAngle: (0, _number.linearMap)(val, valueExtent, angleExtent, isClip)\n            }\n          }, seriesModel);\n          group.add(progress); // Add data index and series index for indexing the data by element\n          // Useful in tooltip\n\n          (0, _innerStore.setCommonECData)(seriesModel.seriesIndex, data.dataType, idx, progress);\n          progressList[idx] = progress;\n        }\n      }).update(function (newIdx, oldIdx) {\n        var val = data.get(valueDim, newIdx);\n\n        if (showPointer) {\n          var previousPointer = oldData.getItemGraphicEl(oldIdx);\n          var previousRotate = previousPointer ? previousPointer.rotation : startAngle;\n          var pointer = createPointer(newIdx, previousRotate);\n          pointer.rotation = previousRotate;\n          graphic.updateProps(pointer, {\n            rotation: -((isNaN(+val) ? angleExtent[0] : (0, _number.linearMap)(val, valueExtent, angleExtent, true)) + Math.PI / 2)\n          }, seriesModel);\n          group.add(pointer);\n          data.setItemGraphicEl(newIdx, pointer);\n        }\n\n        if (showProgress) {\n          var previousProgress = oldProgressData[oldIdx];\n          var previousEndAngle = previousProgress ? previousProgress.shape.endAngle : startAngle;\n          var progress = createProgress(newIdx, previousEndAngle);\n          var isClip = progressModel.get('clip');\n          graphic.updateProps(progress, {\n            shape: {\n              endAngle: (0, _number.linearMap)(val, valueExtent, angleExtent, isClip)\n            }\n          }, seriesModel);\n          group.add(progress); // Add data index and series index for indexing the data by element\n          // Useful in tooltip\n\n          (0, _innerStore.setCommonECData)(seriesModel.seriesIndex, data.dataType, newIdx, progress);\n          progressList[newIdx] = progress;\n        }\n      }).execute();\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var emphasisModel = itemModel.getModel('emphasis');\n        var focus = emphasisModel.get('focus');\n        var blurScope = emphasisModel.get('blurScope');\n        var emphasisDisabled = emphasisModel.get('disabled');\n\n        if (showPointer) {\n          var pointer = data.getItemGraphicEl(idx);\n          var symbolStyle = data.getItemVisual(idx, 'style');\n          var visualColor = symbolStyle.fill;\n\n          if (pointer instanceof _Image.default) {\n            var pathStyle = pointer.style;\n            pointer.useStyle((0, _util.extend)({\n              image: pathStyle.image,\n              x: pathStyle.x,\n              y: pathStyle.y,\n              width: pathStyle.width,\n              height: pathStyle.height\n            }, symbolStyle));\n          } else {\n            pointer.useStyle(symbolStyle);\n            pointer.type !== 'pointer' && pointer.setColor(visualColor);\n          }\n\n          pointer.setStyle(itemModel.getModel(['pointer', 'itemStyle']).getItemStyle());\n\n          if (pointer.style.fill === 'auto') {\n            pointer.setStyle('fill', getColor((0, _number.linearMap)(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n          }\n\n          pointer.z2EmphasisLift = 0;\n          (0, _states.setStatesStylesFromModel)(pointer, itemModel);\n          (0, _states.toggleHoverEmphasis)(pointer, focus, blurScope, emphasisDisabled);\n        }\n\n        if (showProgress) {\n          var progress = progressList[idx];\n          progress.useStyle(data.getItemVisual(idx, 'style'));\n          progress.setStyle(itemModel.getModel(['progress', 'itemStyle']).getItemStyle());\n          progress.z2EmphasisLift = 0;\n          (0, _states.setStatesStylesFromModel)(progress, itemModel);\n          (0, _states.toggleHoverEmphasis)(progress, focus, blurScope, emphasisDisabled);\n        }\n      });\n      this._progressEls = progressList;\n    }\n  };\n\n  GaugeView.prototype._renderAnchor = function (seriesModel, posInfo) {\n    var anchorModel = seriesModel.getModel('anchor');\n    var showAnchor = anchorModel.get('show');\n\n    if (showAnchor) {\n      var anchorSize = anchorModel.get('size');\n      var anchorType = anchorModel.get('icon');\n      var offsetCenter = anchorModel.get('offsetCenter');\n      var anchorKeepAspect = anchorModel.get('keepAspect');\n      var anchor = (0, _symbol.createSymbol)(anchorType, posInfo.cx - anchorSize / 2 + (0, _number.parsePercent)(offsetCenter[0], posInfo.r), posInfo.cy - anchorSize / 2 + (0, _number.parsePercent)(offsetCenter[1], posInfo.r), anchorSize, anchorSize, null, anchorKeepAspect);\n      anchor.z2 = anchorModel.get('showAbove') ? 1 : 0;\n      anchor.setStyle(anchorModel.getModel('itemStyle').getItemStyle());\n      this.group.add(anchor);\n    }\n  };\n\n  GaugeView.prototype._renderTitleAndDetail = function (seriesModel, ecModel, api, getColor, posInfo) {\n    var _this = this;\n\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var contentGroup = new graphic.Group();\n    var newTitleEls = [];\n    var newDetailEls = [];\n    var hasAnimation = seriesModel.isAnimationEnabled();\n    var showPointerAbove = seriesModel.get(['pointer', 'showAbove']);\n    data.diff(this._data).add(function (idx) {\n      newTitleEls[idx] = new graphic.Text({\n        silent: true\n      });\n      newDetailEls[idx] = new graphic.Text({\n        silent: true\n      });\n    }).update(function (idx, oldIdx) {\n      newTitleEls[idx] = _this._titleEls[oldIdx];\n      newDetailEls[idx] = _this._detailEls[oldIdx];\n    }).execute();\n    data.each(function (idx) {\n      var itemModel = data.getItemModel(idx);\n      var value = data.get(valueDim, idx);\n      var itemGroup = new graphic.Group();\n      var autoColor = getColor((0, _number.linearMap)(value, [minVal, maxVal], [0, 1], true));\n      var itemTitleModel = itemModel.getModel('title');\n\n      if (itemTitleModel.get('show')) {\n        var titleOffsetCenter = itemTitleModel.get('offsetCenter');\n        var titleX = posInfo.cx + (0, _number.parsePercent)(titleOffsetCenter[0], posInfo.r);\n        var titleY = posInfo.cy + (0, _number.parsePercent)(titleOffsetCenter[1], posInfo.r);\n        var labelEl = newTitleEls[idx];\n        labelEl.attr({\n          z2: showPointerAbove ? 0 : 2,\n          style: (0, _labelStyle.createTextStyle)(itemTitleModel, {\n            x: titleX,\n            y: titleY,\n            text: data.getName(idx),\n            align: 'center',\n            verticalAlign: 'middle'\n          }, {\n            inheritColor: autoColor\n          })\n        });\n        itemGroup.add(labelEl);\n      }\n\n      var itemDetailModel = itemModel.getModel('detail');\n\n      if (itemDetailModel.get('show')) {\n        var detailOffsetCenter = itemDetailModel.get('offsetCenter');\n        var detailX = posInfo.cx + (0, _number.parsePercent)(detailOffsetCenter[0], posInfo.r);\n        var detailY = posInfo.cy + (0, _number.parsePercent)(detailOffsetCenter[1], posInfo.r);\n        var width = (0, _number.parsePercent)(itemDetailModel.get('width'), posInfo.r);\n        var height = (0, _number.parsePercent)(itemDetailModel.get('height'), posInfo.r);\n        var detailColor = seriesModel.get(['progress', 'show']) ? data.getItemVisual(idx, 'style').fill : autoColor;\n        var labelEl = newDetailEls[idx];\n        var formatter_1 = itemDetailModel.get('formatter');\n        labelEl.attr({\n          z2: showPointerAbove ? 0 : 2,\n          style: (0, _labelStyle.createTextStyle)(itemDetailModel, {\n            x: detailX,\n            y: detailY,\n            text: formatLabel(value, formatter_1),\n            width: isNaN(width) ? null : width,\n            height: isNaN(height) ? null : height,\n            align: 'center',\n            verticalAlign: 'middle'\n          }, {\n            inheritColor: detailColor\n          })\n        });\n        (0, _labelStyle.setLabelValueAnimation)(labelEl, {\n          normal: itemDetailModel\n        }, value, function (value) {\n          return formatLabel(value, formatter_1);\n        });\n        hasAnimation && (0, _labelStyle.animateLabelValue)(labelEl, idx, data, seriesModel, {\n          getFormattedLabel: function (labelDataIndex, status, dataType, labelDimIndex, fmt, extendParams) {\n            return formatLabel(extendParams ? extendParams.interpolatedValue : value, formatter_1);\n          }\n        });\n        itemGroup.add(labelEl);\n      }\n\n      contentGroup.add(itemGroup);\n    });\n    this.group.add(contentGroup);\n    this._titleEls = newTitleEls;\n    this._detailEls = newDetailEls;\n  };\n\n  GaugeView.type = 'gauge';\n  return GaugeView;\n}(_Chart.default);\n\nvar _default = GaugeView;\nexports.default = _default;","map":{"version":3,"names":["parsePosition","seriesModel","api","center","get","width","getWidth","height","getHeight","size","Math","min","cx","parsePercent","cy","r","formatLabel","value","labelFormatter","label","isString","replace","isFunction","GaugeView","_super","__extends","_this","apply","arguments","type","prototype","render","ecModel","group","removeAll","colorList","posInfo","_renderMain","_data","getData","dispose","clockwise","startAngle","PI","endAngle","axisLineModel","getModel","roundCap","MainPath","Sausage","graphic","Sector","showAxis","lineStyleModel","axisLineWidth","angles","normalizeArcAngles","angleRangeSpan","prevEndAngle","i","length","percent","max","sector","shape","r0","silent","setStyle","fill","getLineStyle","add","getColor","_renderTicks","_renderTitleAndDetail","_renderAnchor","_renderPointer","minVal","maxVal","splitLineModel","tickModel","labelModel","splitNumber","subSplitNumber","splitLineLen","tickLen","angle","step","subStep","splitLineStyle","tickLineStyle","splitLineDistance","unitX","unitY","cos","sin","distance","splitLine","Line","x1","y1","x2","y2","style","stroke","round","autoColor","Text","createTextStyle","text","x","y","verticalAlign","align","inheritColor","j","tickLine","oldData","oldProgressData","_progressEls","progressList","showPointer","progressModel","showProgress","data","valueDim","mapDimension","valueExtent","angleExtent","createPointer","idx","itemModel","getItemModel","pointerModel","pointerWidth","pointerLength","pointerStr","pointerOffset","pointerOffsetX","pointerOffsetY","pointerKeepAspect","pointer","createSymbol","PointerPath","rotation","createProgress","ProgressPath","isOverlap","progressWidth","count","progress","z2","diff","val","initProps","isNaN","linearMap","setItemGraphicEl","isClip","setCommonECData","seriesIndex","dataType","update","newIdx","oldIdx","previousPointer","getItemGraphicEl","previousRotate","updateProps","previousProgress","previousEndAngle","execute","each","emphasisModel","focus","blurScope","emphasisDisabled","symbolStyle","getItemVisual","visualColor","ZRImage","pathStyle","useStyle","extend","image","setColor","getItemStyle","z2EmphasisLift","setStatesStylesFromModel","toggleHoverEmphasis","anchorModel","showAnchor","anchorSize","anchorType","offsetCenter","anchorKeepAspect","anchor","contentGroup","Group","newTitleEls","newDetailEls","hasAnimation","isAnimationEnabled","showPointerAbove","_titleEls","_detailEls","itemGroup","itemTitleModel","titleOffsetCenter","titleX","titleY","labelEl","attr","getName","itemDetailModel","detailOffsetCenter","detailX","detailY","detailColor","formatter_1","setLabelValueAnimation","normal","animateLabelValue","getFormattedLabel","labelDataIndex","status","labelDimIndex","fmt","extendParams","interpolatedValue","ChartView"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/chart/gauge/GaugeView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport PointerPath from './PointerPath.js';\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport { createTextStyle, setLabelValueAnimation, animateLabelValue } from '../../label/labelStyle.js';\nimport ChartView from '../../view/Chart.js';\nimport { parsePercent, round, linearMap } from '../../util/number.js';\nimport Sausage from '../../util/shape/sausage.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport ZRImage from 'zrender/lib/graphic/Image.js';\nimport { extend, isFunction, isString } from 'zrender/lib/core/util.js';\nimport { setCommonECData } from '../../util/innerStore.js';\nimport { normalizeArcAngles } from 'zrender/lib/core/PathProxy.js';\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(value, labelFormatter) {\n  var label = value == null ? '' : value + '';\n\n  if (labelFormatter) {\n    if (isString(labelFormatter)) {\n      label = labelFormatter.replace('{value}', label);\n    } else if (isFunction(labelFormatter)) {\n      label = labelFormatter(value);\n    }\n  }\n\n  return label;\n}\n\nvar GaugeView =\n/** @class */\nfunction (_super) {\n  __extends(GaugeView, _super);\n\n  function GaugeView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GaugeView.type;\n    return _this;\n  }\n\n  GaugeView.prototype.render = function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get(['axisLine', 'lineStyle', 'color']);\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n\n    this._data = seriesModel.getData();\n  };\n\n  GaugeView.prototype.dispose = function () {};\n\n  GaugeView.prototype._renderMain = function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var roundCap = axisLineModel.get('roundCap');\n    var MainPath = roundCap ? Sausage : graphic.Sector;\n    var showAxis = axisLineModel.get('show');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var axisLineWidth = lineStyleModel.get('width');\n    var angles = [startAngle, endAngle];\n    normalizeArcAngles(angles, !clockwise);\n    startAngle = angles[0];\n    endAngle = angles[1];\n    var angleRangeSpan = endAngle - startAngle;\n    var prevEndAngle = startAngle;\n\n    for (var i = 0; showAxis && i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new MainPath({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'width']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      var i;\n\n      for (i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth);\n\n    this._renderTitleAndDetail(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderAnchor(seriesModel, posInfo);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth);\n  };\n\n  GaugeView.prototype._renderTicks = function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n    var splitLineDistance = splitLineModel.get('distance');\n    var unitX;\n    var unitY;\n\n    for (var i = 0; i <= splitNumber; i++) {\n      unitX = Math.cos(angle);\n      unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var distance = splitLineDistance ? splitLineDistance + axisLineWidth : axisLineWidth;\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * (r - distance) + cx,\n            y1: unitY * (r - distance) + cy,\n            x2: unitX * (r - splitLineLen - distance) + cx,\n            y2: unitY * (r - splitLineLen - distance) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var distance = labelModel.get('distance') + splitLineDistance;\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: createTextStyle(labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            verticalAlign: unitY < -0.8 ? 'top' : unitY > 0.8 ? 'bottom' : 'middle',\n            align: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            inheritColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        var distance = tickModel.get('distance');\n        distance = distance ? distance + axisLineWidth : axisLineWidth;\n\n        for (var j = 0; j <= subSplitNumber; j++) {\n          unitX = Math.cos(angle);\n          unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * (r - distance) + cx,\n              y1: unitY * (r - distance) + cy,\n              x2: unitX * (r - tickLen - distance) + cx,\n              y2: unitY * (r - tickLen - distance) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  };\n\n  GaugeView.prototype._renderPointer = function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth) {\n    var group = this.group;\n    var oldData = this._data;\n    var oldProgressData = this._progressEls;\n    var progressList = [];\n    var showPointer = seriesModel.get(['pointer', 'show']);\n    var progressModel = seriesModel.getModel('progress');\n    var showProgress = progressModel.get('show');\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var valueExtent = [minVal, maxVal];\n    var angleExtent = [startAngle, endAngle];\n\n    function createPointer(idx, angle) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      var pointerWidth = parsePercent(pointerModel.get('width'), posInfo.r);\n      var pointerLength = parsePercent(pointerModel.get('length'), posInfo.r);\n      var pointerStr = seriesModel.get(['pointer', 'icon']);\n      var pointerOffset = pointerModel.get('offsetCenter');\n      var pointerOffsetX = parsePercent(pointerOffset[0], posInfo.r);\n      var pointerOffsetY = parsePercent(pointerOffset[1], posInfo.r);\n      var pointerKeepAspect = pointerModel.get('keepAspect');\n      var pointer; // not exist icon type will be set 'rect'\n\n      if (pointerStr) {\n        pointer = createSymbol(pointerStr, pointerOffsetX - pointerWidth / 2, pointerOffsetY - pointerLength, pointerWidth, pointerLength, null, pointerKeepAspect);\n      } else {\n        pointer = new PointerPath({\n          shape: {\n            angle: -Math.PI / 2,\n            width: pointerWidth,\n            r: pointerLength,\n            x: pointerOffsetX,\n            y: pointerOffsetY\n          }\n        });\n      }\n\n      pointer.rotation = -(angle + Math.PI / 2);\n      pointer.x = posInfo.cx;\n      pointer.y = posInfo.cy;\n      return pointer;\n    }\n\n    function createProgress(idx, endAngle) {\n      var roundCap = progressModel.get('roundCap');\n      var ProgressPath = roundCap ? Sausage : graphic.Sector;\n      var isOverlap = progressModel.get('overlap');\n      var progressWidth = isOverlap ? progressModel.get('width') : axisLineWidth / data.count();\n      var r0 = isOverlap ? posInfo.r - progressWidth : posInfo.r - (idx + 1) * progressWidth;\n      var r = isOverlap ? posInfo.r : posInfo.r - idx * progressWidth;\n      var progress = new ProgressPath({\n        shape: {\n          startAngle: startAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: r0,\n          r: r\n        }\n      });\n      isOverlap && (progress.z2 = maxVal - data.get(valueDim, idx) % maxVal);\n      return progress;\n    }\n\n    if (showProgress || showPointer) {\n      data.diff(oldData).add(function (idx) {\n        var val = data.get(valueDim, idx);\n\n        if (showPointer) {\n          var pointer = createPointer(idx, startAngle); // TODO hide pointer on NaN value?\n\n          graphic.initProps(pointer, {\n            rotation: -((isNaN(+val) ? angleExtent[0] : linearMap(val, valueExtent, angleExtent, true)) + Math.PI / 2)\n          }, seriesModel);\n          group.add(pointer);\n          data.setItemGraphicEl(idx, pointer);\n        }\n\n        if (showProgress) {\n          var progress = createProgress(idx, startAngle);\n          var isClip = progressModel.get('clip');\n          graphic.initProps(progress, {\n            shape: {\n              endAngle: linearMap(val, valueExtent, angleExtent, isClip)\n            }\n          }, seriesModel);\n          group.add(progress); // Add data index and series index for indexing the data by element\n          // Useful in tooltip\n\n          setCommonECData(seriesModel.seriesIndex, data.dataType, idx, progress);\n          progressList[idx] = progress;\n        }\n      }).update(function (newIdx, oldIdx) {\n        var val = data.get(valueDim, newIdx);\n\n        if (showPointer) {\n          var previousPointer = oldData.getItemGraphicEl(oldIdx);\n          var previousRotate = previousPointer ? previousPointer.rotation : startAngle;\n          var pointer = createPointer(newIdx, previousRotate);\n          pointer.rotation = previousRotate;\n          graphic.updateProps(pointer, {\n            rotation: -((isNaN(+val) ? angleExtent[0] : linearMap(val, valueExtent, angleExtent, true)) + Math.PI / 2)\n          }, seriesModel);\n          group.add(pointer);\n          data.setItemGraphicEl(newIdx, pointer);\n        }\n\n        if (showProgress) {\n          var previousProgress = oldProgressData[oldIdx];\n          var previousEndAngle = previousProgress ? previousProgress.shape.endAngle : startAngle;\n          var progress = createProgress(newIdx, previousEndAngle);\n          var isClip = progressModel.get('clip');\n          graphic.updateProps(progress, {\n            shape: {\n              endAngle: linearMap(val, valueExtent, angleExtent, isClip)\n            }\n          }, seriesModel);\n          group.add(progress); // Add data index and series index for indexing the data by element\n          // Useful in tooltip\n\n          setCommonECData(seriesModel.seriesIndex, data.dataType, newIdx, progress);\n          progressList[newIdx] = progress;\n        }\n      }).execute();\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var emphasisModel = itemModel.getModel('emphasis');\n        var focus = emphasisModel.get('focus');\n        var blurScope = emphasisModel.get('blurScope');\n        var emphasisDisabled = emphasisModel.get('disabled');\n\n        if (showPointer) {\n          var pointer = data.getItemGraphicEl(idx);\n          var symbolStyle = data.getItemVisual(idx, 'style');\n          var visualColor = symbolStyle.fill;\n\n          if (pointer instanceof ZRImage) {\n            var pathStyle = pointer.style;\n            pointer.useStyle(extend({\n              image: pathStyle.image,\n              x: pathStyle.x,\n              y: pathStyle.y,\n              width: pathStyle.width,\n              height: pathStyle.height\n            }, symbolStyle));\n          } else {\n            pointer.useStyle(symbolStyle);\n            pointer.type !== 'pointer' && pointer.setColor(visualColor);\n          }\n\n          pointer.setStyle(itemModel.getModel(['pointer', 'itemStyle']).getItemStyle());\n\n          if (pointer.style.fill === 'auto') {\n            pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n          }\n\n          pointer.z2EmphasisLift = 0;\n          setStatesStylesFromModel(pointer, itemModel);\n          toggleHoverEmphasis(pointer, focus, blurScope, emphasisDisabled);\n        }\n\n        if (showProgress) {\n          var progress = progressList[idx];\n          progress.useStyle(data.getItemVisual(idx, 'style'));\n          progress.setStyle(itemModel.getModel(['progress', 'itemStyle']).getItemStyle());\n          progress.z2EmphasisLift = 0;\n          setStatesStylesFromModel(progress, itemModel);\n          toggleHoverEmphasis(progress, focus, blurScope, emphasisDisabled);\n        }\n      });\n      this._progressEls = progressList;\n    }\n  };\n\n  GaugeView.prototype._renderAnchor = function (seriesModel, posInfo) {\n    var anchorModel = seriesModel.getModel('anchor');\n    var showAnchor = anchorModel.get('show');\n\n    if (showAnchor) {\n      var anchorSize = anchorModel.get('size');\n      var anchorType = anchorModel.get('icon');\n      var offsetCenter = anchorModel.get('offsetCenter');\n      var anchorKeepAspect = anchorModel.get('keepAspect');\n      var anchor = createSymbol(anchorType, posInfo.cx - anchorSize / 2 + parsePercent(offsetCenter[0], posInfo.r), posInfo.cy - anchorSize / 2 + parsePercent(offsetCenter[1], posInfo.r), anchorSize, anchorSize, null, anchorKeepAspect);\n      anchor.z2 = anchorModel.get('showAbove') ? 1 : 0;\n      anchor.setStyle(anchorModel.getModel('itemStyle').getItemStyle());\n      this.group.add(anchor);\n    }\n  };\n\n  GaugeView.prototype._renderTitleAndDetail = function (seriesModel, ecModel, api, getColor, posInfo) {\n    var _this = this;\n\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var contentGroup = new graphic.Group();\n    var newTitleEls = [];\n    var newDetailEls = [];\n    var hasAnimation = seriesModel.isAnimationEnabled();\n    var showPointerAbove = seriesModel.get(['pointer', 'showAbove']);\n    data.diff(this._data).add(function (idx) {\n      newTitleEls[idx] = new graphic.Text({\n        silent: true\n      });\n      newDetailEls[idx] = new graphic.Text({\n        silent: true\n      });\n    }).update(function (idx, oldIdx) {\n      newTitleEls[idx] = _this._titleEls[oldIdx];\n      newDetailEls[idx] = _this._detailEls[oldIdx];\n    }).execute();\n    data.each(function (idx) {\n      var itemModel = data.getItemModel(idx);\n      var value = data.get(valueDim, idx);\n      var itemGroup = new graphic.Group();\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      var itemTitleModel = itemModel.getModel('title');\n\n      if (itemTitleModel.get('show')) {\n        var titleOffsetCenter = itemTitleModel.get('offsetCenter');\n        var titleX = posInfo.cx + parsePercent(titleOffsetCenter[0], posInfo.r);\n        var titleY = posInfo.cy + parsePercent(titleOffsetCenter[1], posInfo.r);\n        var labelEl = newTitleEls[idx];\n        labelEl.attr({\n          z2: showPointerAbove ? 0 : 2,\n          style: createTextStyle(itemTitleModel, {\n            x: titleX,\n            y: titleY,\n            text: data.getName(idx),\n            align: 'center',\n            verticalAlign: 'middle'\n          }, {\n            inheritColor: autoColor\n          })\n        });\n        itemGroup.add(labelEl);\n      }\n\n      var itemDetailModel = itemModel.getModel('detail');\n\n      if (itemDetailModel.get('show')) {\n        var detailOffsetCenter = itemDetailModel.get('offsetCenter');\n        var detailX = posInfo.cx + parsePercent(detailOffsetCenter[0], posInfo.r);\n        var detailY = posInfo.cy + parsePercent(detailOffsetCenter[1], posInfo.r);\n        var width = parsePercent(itemDetailModel.get('width'), posInfo.r);\n        var height = parsePercent(itemDetailModel.get('height'), posInfo.r);\n        var detailColor = seriesModel.get(['progress', 'show']) ? data.getItemVisual(idx, 'style').fill : autoColor;\n        var labelEl = newDetailEls[idx];\n        var formatter_1 = itemDetailModel.get('formatter');\n        labelEl.attr({\n          z2: showPointerAbove ? 0 : 2,\n          style: createTextStyle(itemDetailModel, {\n            x: detailX,\n            y: detailY,\n            text: formatLabel(value, formatter_1),\n            width: isNaN(width) ? null : width,\n            height: isNaN(height) ? null : height,\n            align: 'center',\n            verticalAlign: 'middle'\n          }, {\n            inheritColor: detailColor\n          })\n        });\n        setLabelValueAnimation(labelEl, {\n          normal: itemDetailModel\n        }, value, function (value) {\n          return formatLabel(value, formatter_1);\n        });\n        hasAnimation && animateLabelValue(labelEl, idx, data, seriesModel, {\n          getFormattedLabel: function (labelDataIndex, status, dataType, labelDimIndex, fmt, extendParams) {\n            return formatLabel(extendParams ? extendParams.interpolatedValue : value, formatter_1);\n          }\n        });\n        itemGroup.add(labelEl);\n      }\n\n      contentGroup.add(itemGroup);\n    });\n    this.group.add(contentGroup);\n    this._titleEls = newTitleEls;\n    this._detailEls = newDetailEls;\n  };\n\n  GaugeView.type = 'gauge';\n  return GaugeView;\n}(ChartView);\n\nexport default GaugeView;"],"mappings":";;;;;;;;;;;AA2CA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAeA,SAASA,aAAT,CAAuBC,WAAvB,EAAoCC,GAApC,EAAyC;EACvC,IAAIC,MAAM,GAAGF,WAAW,CAACG,GAAZ,CAAgB,QAAhB,CAAb;EACA,IAAIC,KAAK,GAAGH,GAAG,CAACI,QAAJ,EAAZ;EACA,IAAIC,MAAM,GAAGL,GAAG,CAACM,SAAJ,EAAb;EACA,IAAIC,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASN,KAAT,EAAgBE,MAAhB,CAAX;EACA,IAAIK,EAAE,GAAG,IAAAC,oBAAA,EAAaV,MAAM,CAAC,CAAD,CAAnB,EAAwBD,GAAG,CAACI,QAAJ,EAAxB,CAAT;EACA,IAAIQ,EAAE,GAAG,IAAAD,oBAAA,EAAaV,MAAM,CAAC,CAAD,CAAnB,EAAwBD,GAAG,CAACM,SAAJ,EAAxB,CAAT;EACA,IAAIO,CAAC,GAAG,IAAAF,oBAAA,EAAaZ,WAAW,CAACG,GAAZ,CAAgB,QAAhB,CAAb,EAAwCK,IAAI,GAAG,CAA/C,CAAR;EACA,OAAO;IACLG,EAAE,EAAEA,EADC;IAELE,EAAE,EAAEA,EAFC;IAGLC,CAAC,EAAEA;EAHE,CAAP;AAKD;;AAED,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,cAA5B,EAA4C;EAC1C,IAAIC,KAAK,GAAGF,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqBA,KAAK,GAAG,EAAzC;;EAEA,IAAIC,cAAJ,EAAoB;IAClB,IAAI,IAAAE,cAAA,EAASF,cAAT,CAAJ,EAA8B;MAC5BC,KAAK,GAAGD,cAAc,CAACG,OAAf,CAAuB,SAAvB,EAAkCF,KAAlC,CAAR;IACD,CAFD,MAEO,IAAI,IAAAG,gBAAA,EAAWJ,cAAX,CAAJ,EAAgC;MACrCC,KAAK,GAAGD,cAAc,CAACD,KAAD,CAAtB;IACD;EACF;;EAED,OAAOE,KAAP;AACD;;AAED,IAAII,SAAS;AACb;AACA,UAAUC,MAAV,EAAkB;EAChB,IAAAC,gBAAA,EAAUF,SAAV,EAAqBC,MAArB;;EAEA,SAASD,SAAT,GAAqB;IACnB,IAAIG,KAAK,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACG,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;IAEAF,KAAK,CAACG,IAAN,GAAaN,SAAS,CAACM,IAAvB;IACA,OAAOH,KAAP;EACD;;EAEDH,SAAS,CAACO,SAAV,CAAoBC,MAApB,GAA6B,UAAU9B,WAAV,EAAuB+B,OAAvB,EAAgC9B,GAAhC,EAAqC;IAChE,KAAK+B,KAAL,CAAWC,SAAX;IACA,IAAIC,SAAS,GAAGlC,WAAW,CAACG,GAAZ,CAAgB,CAAC,UAAD,EAAa,WAAb,EAA0B,OAA1B,CAAhB,CAAhB;IACA,IAAIgC,OAAO,GAAGpC,aAAa,CAACC,WAAD,EAAcC,GAAd,CAA3B;;IAEA,KAAKmC,WAAL,CAAiBpC,WAAjB,EAA8B+B,OAA9B,EAAuC9B,GAAvC,EAA4CiC,SAA5C,EAAuDC,OAAvD;;IAEA,KAAKE,KAAL,GAAarC,WAAW,CAACsC,OAAZ,EAAb;EACD,CARD;;EAUAhB,SAAS,CAACO,SAAV,CAAoBU,OAApB,GAA8B,YAAY,CAAE,CAA5C;;EAEAjB,SAAS,CAACO,SAAV,CAAoBO,WAApB,GAAkC,UAAUpC,WAAV,EAAuB+B,OAAvB,EAAgC9B,GAAhC,EAAqCiC,SAArC,EAAgDC,OAAhD,EAAyD;IACzF,IAAIH,KAAK,GAAG,KAAKA,KAAjB;IACA,IAAIQ,SAAS,GAAGxC,WAAW,CAACG,GAAZ,CAAgB,WAAhB,CAAhB;IACA,IAAIsC,UAAU,GAAG,CAACzC,WAAW,CAACG,GAAZ,CAAgB,YAAhB,CAAD,GAAiC,GAAjC,GAAuCM,IAAI,CAACiC,EAA7D;IACA,IAAIC,QAAQ,GAAG,CAAC3C,WAAW,CAACG,GAAZ,CAAgB,UAAhB,CAAD,GAA+B,GAA/B,GAAqCM,IAAI,CAACiC,EAAzD;IACA,IAAIE,aAAa,GAAG5C,WAAW,CAAC6C,QAAZ,CAAqB,UAArB,CAApB;IACA,IAAIC,QAAQ,GAAGF,aAAa,CAACzC,GAAd,CAAkB,UAAlB,CAAf;IACA,IAAI4C,QAAQ,GAAGD,QAAQ,GAAGE,gBAAH,GAAaC,OAAO,CAACC,MAA5C;IACA,IAAIC,QAAQ,GAAGP,aAAa,CAACzC,GAAd,CAAkB,MAAlB,CAAf;IACA,IAAIiD,cAAc,GAAGR,aAAa,CAACC,QAAd,CAAuB,WAAvB,CAArB;IACA,IAAIQ,aAAa,GAAGD,cAAc,CAACjD,GAAf,CAAmB,OAAnB,CAApB;IACA,IAAImD,MAAM,GAAG,CAACb,UAAD,EAAaE,QAAb,CAAb;IACA,IAAAY,6BAAA,EAAmBD,MAAnB,EAA2B,CAACd,SAA5B;IACAC,UAAU,GAAGa,MAAM,CAAC,CAAD,CAAnB;IACAX,QAAQ,GAAGW,MAAM,CAAC,CAAD,CAAjB;IACA,IAAIE,cAAc,GAAGb,QAAQ,GAAGF,UAAhC;IACA,IAAIgB,YAAY,GAAGhB,UAAnB;;IAEA,KAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBP,QAAQ,IAAIO,CAAC,GAAGxB,SAAS,CAACyB,MAA1C,EAAkDD,CAAC,EAAnD,EAAuD;MACrD;MACA,IAAIE,OAAO,GAAGnD,IAAI,CAACC,GAAL,CAASD,IAAI,CAACoD,GAAL,CAAS3B,SAAS,CAACwB,CAAD,CAAT,CAAa,CAAb,CAAT,EAA0B,CAA1B,CAAT,EAAuC,CAAvC,CAAd;MACAf,QAAQ,GAAGF,UAAU,GAAGe,cAAc,GAAGI,OAAzC;MACA,IAAIE,MAAM,GAAG,IAAIf,QAAJ,CAAa;QACxBgB,KAAK,EAAE;UACLtB,UAAU,EAAEgB,YADP;UAELd,QAAQ,EAAEA,QAFL;UAGLhC,EAAE,EAAEwB,OAAO,CAACxB,EAHP;UAILE,EAAE,EAAEsB,OAAO,CAACtB,EAJP;UAKL2B,SAAS,EAAEA,SALN;UAMLwB,EAAE,EAAE7B,OAAO,CAACrB,CAAR,GAAYuC,aANX;UAOLvC,CAAC,EAAEqB,OAAO,CAACrB;QAPN,CADiB;QAUxBmD,MAAM,EAAE;MAVgB,CAAb,CAAb;MAYAH,MAAM,CAACI,QAAP,CAAgB;QACdC,IAAI,EAAEjC,SAAS,CAACwB,CAAD,CAAT,CAAa,CAAb;MADQ,CAAhB;MAGAI,MAAM,CAACI,QAAP,CAAgBd,cAAc,CAACgB,YAAf,EAA6B;MAC7C;MACA,CAAC,OAAD,EAAU,OAAV,CAFgB,CAAhB;MAGApC,KAAK,CAACqC,GAAN,CAAUP,MAAV;MACAL,YAAY,GAAGd,QAAf;IACD;;IAED,IAAI2B,QAAQ,GAAG,UAAUV,OAAV,EAAmB;MAChC;MACA,IAAIA,OAAO,IAAI,CAAf,EAAkB;QAChB,OAAO1B,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAP;MACD;;MAED,IAAIwB,CAAJ;;MAEA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGxB,SAAS,CAACyB,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;QACrC,IAAIxB,SAAS,CAACwB,CAAD,CAAT,CAAa,CAAb,KAAmBE,OAAnB,IAA8B,CAACF,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcxB,SAAS,CAACwB,CAAC,GAAG,CAAL,CAAT,CAAiB,CAAjB,CAAf,IAAsCE,OAAxE,EAAiF;UAC/E,OAAO1B,SAAS,CAACwB,CAAD,CAAT,CAAa,CAAb,CAAP;QACD;MACF,CAZ+B,CAY9B;;;MAGF,OAAOxB,SAAS,CAACwB,CAAC,GAAG,CAAL,CAAT,CAAiB,CAAjB,CAAP;IACD,CAhBD;;IAkBA,KAAKa,YAAL,CAAkBvE,WAAlB,EAA+B+B,OAA/B,EAAwC9B,GAAxC,EAA6CqE,QAA7C,EAAuDnC,OAAvD,EAAgEM,UAAhE,EAA4EE,QAA5E,EAAsFH,SAAtF,EAAiGa,aAAjG;;IAEA,KAAKmB,qBAAL,CAA2BxE,WAA3B,EAAwC+B,OAAxC,EAAiD9B,GAAjD,EAAsDqE,QAAtD,EAAgEnC,OAAhE;;IAEA,KAAKsC,aAAL,CAAmBzE,WAAnB,EAAgCmC,OAAhC;;IAEA,KAAKuC,cAAL,CAAoB1E,WAApB,EAAiC+B,OAAjC,EAA0C9B,GAA1C,EAA+CqE,QAA/C,EAAyDnC,OAAzD,EAAkEM,UAAlE,EAA8EE,QAA9E,EAAwFH,SAAxF,EAAmGa,aAAnG;EACD,CArED;;EAuEA/B,SAAS,CAACO,SAAV,CAAoB0C,YAApB,GAAmC,UAAUvE,WAAV,EAAuB+B,OAAvB,EAAgC9B,GAAhC,EAAqCqE,QAArC,EAA+CnC,OAA/C,EAAwDM,UAAxD,EAAoEE,QAApE,EAA8EH,SAA9E,EAAyFa,aAAzF,EAAwG;IACzI,IAAIrB,KAAK,GAAG,KAAKA,KAAjB;IACA,IAAIrB,EAAE,GAAGwB,OAAO,CAACxB,EAAjB;IACA,IAAIE,EAAE,GAAGsB,OAAO,CAACtB,EAAjB;IACA,IAAIC,CAAC,GAAGqB,OAAO,CAACrB,CAAhB;IACA,IAAI6D,MAAM,GAAG,CAAC3E,WAAW,CAACG,GAAZ,CAAgB,KAAhB,CAAd;IACA,IAAIyE,MAAM,GAAG,CAAC5E,WAAW,CAACG,GAAZ,CAAgB,KAAhB,CAAd;IACA,IAAI0E,cAAc,GAAG7E,WAAW,CAAC6C,QAAZ,CAAqB,WAArB,CAArB;IACA,IAAIiC,SAAS,GAAG9E,WAAW,CAAC6C,QAAZ,CAAqB,UAArB,CAAhB;IACA,IAAIkC,UAAU,GAAG/E,WAAW,CAAC6C,QAAZ,CAAqB,WAArB,CAAjB;IACA,IAAImC,WAAW,GAAGhF,WAAW,CAACG,GAAZ,CAAgB,aAAhB,CAAlB;IACA,IAAI8E,cAAc,GAAGH,SAAS,CAAC3E,GAAV,CAAc,aAAd,CAArB;IACA,IAAI+E,YAAY,GAAG,IAAAtE,oBAAA,EAAaiE,cAAc,CAAC1E,GAAf,CAAmB,QAAnB,CAAb,EAA2CW,CAA3C,CAAnB;IACA,IAAIqE,OAAO,GAAG,IAAAvE,oBAAA,EAAakE,SAAS,CAAC3E,GAAV,CAAc,QAAd,CAAb,EAAsCW,CAAtC,CAAd;IACA,IAAIsE,KAAK,GAAG3C,UAAZ;IACA,IAAI4C,IAAI,GAAG,CAAC1C,QAAQ,GAAGF,UAAZ,IAA0BuC,WAArC;IACA,IAAIM,OAAO,GAAGD,IAAI,GAAGJ,cAArB;IACA,IAAIM,cAAc,GAAGV,cAAc,CAAChC,QAAf,CAAwB,WAAxB,EAAqCuB,YAArC,EAArB;IACA,IAAIoB,aAAa,GAAGV,SAAS,CAACjC,QAAV,CAAmB,WAAnB,EAAgCuB,YAAhC,EAApB;IACA,IAAIqB,iBAAiB,GAAGZ,cAAc,CAAC1E,GAAf,CAAmB,UAAnB,CAAxB;IACA,IAAIuF,KAAJ;IACA,IAAIC,KAAJ;;IAEA,KAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIsB,WAArB,EAAkCtB,CAAC,EAAnC,EAAuC;MACrCgC,KAAK,GAAGjF,IAAI,CAACmF,GAAL,CAASR,KAAT,CAAR;MACAO,KAAK,GAAGlF,IAAI,CAACoF,GAAL,CAAST,KAAT,CAAR,CAFqC,CAEZ;;MAEzB,IAAIP,cAAc,CAAC1E,GAAf,CAAmB,MAAnB,CAAJ,EAAgC;QAC9B,IAAI2F,QAAQ,GAAGL,iBAAiB,GAAGA,iBAAiB,GAAGpC,aAAvB,GAAuCA,aAAvE;QACA,IAAI0C,SAAS,GAAG,IAAI9C,OAAO,CAAC+C,IAAZ,CAAiB;UAC/BjC,KAAK,EAAE;YACLkC,EAAE,EAAEP,KAAK,IAAI5E,CAAC,GAAGgF,QAAR,CAAL,GAAyBnF,EADxB;YAELuF,EAAE,EAAEP,KAAK,IAAI7E,CAAC,GAAGgF,QAAR,CAAL,GAAyBjF,EAFxB;YAGLsF,EAAE,EAAET,KAAK,IAAI5E,CAAC,GAAGoE,YAAJ,GAAmBY,QAAvB,CAAL,GAAwCnF,EAHvC;YAILyF,EAAE,EAAET,KAAK,IAAI7E,CAAC,GAAGoE,YAAJ,GAAmBY,QAAvB,CAAL,GAAwCjF;UAJvC,CADwB;UAO/BwF,KAAK,EAAEd,cAPwB;UAQ/BtB,MAAM,EAAE;QARuB,CAAjB,CAAhB;;QAWA,IAAIsB,cAAc,CAACe,MAAf,KAA0B,MAA9B,EAAsC;UACpCP,SAAS,CAAC7B,QAAV,CAAmB;YACjBoC,MAAM,EAAEhC,QAAQ,CAACZ,CAAC,GAAGsB,WAAL;UADC,CAAnB;QAGD;;QAEDhD,KAAK,CAACqC,GAAN,CAAU0B,SAAV;MACD,CAxBoC,CAwBnC;;;MAGF,IAAIhB,UAAU,CAAC5E,GAAX,CAAe,MAAf,CAAJ,EAA4B;QAC1B,IAAI2F,QAAQ,GAAGf,UAAU,CAAC5E,GAAX,CAAe,UAAf,IAA6BsF,iBAA5C;QACA,IAAIvE,KAAK,GAAGH,WAAW,CAAC,IAAAwF,aAAA,EAAM7C,CAAC,GAAGsB,WAAJ,IAAmBJ,MAAM,GAAGD,MAA5B,IAAsCA,MAA5C,CAAD,EAAsDI,UAAU,CAAC5E,GAAX,CAAe,WAAf,CAAtD,CAAvB;QACA,IAAIqG,SAAS,GAAGlC,QAAQ,CAACZ,CAAC,GAAGsB,WAAL,CAAxB;QACAhD,KAAK,CAACqC,GAAN,CAAU,IAAIpB,OAAO,CAACwD,IAAZ,CAAiB;UACzBJ,KAAK,EAAE,IAAAK,2BAAA,EAAgB3B,UAAhB,EAA4B;YACjC4B,IAAI,EAAEzF,KAD2B;YAEjC0F,CAAC,EAAElB,KAAK,IAAI5E,CAAC,GAAGoE,YAAJ,GAAmBY,QAAvB,CAAL,GAAwCnF,EAFV;YAGjCkG,CAAC,EAAElB,KAAK,IAAI7E,CAAC,GAAGoE,YAAJ,GAAmBY,QAAvB,CAAL,GAAwCjF,EAHV;YAIjCiG,aAAa,EAAEnB,KAAK,GAAG,CAAC,GAAT,GAAe,KAAf,GAAuBA,KAAK,GAAG,GAAR,GAAc,QAAd,GAAyB,QAJ9B;YAKjCoB,KAAK,EAAErB,KAAK,GAAG,CAAC,GAAT,GAAe,MAAf,GAAwBA,KAAK,GAAG,GAAR,GAAc,OAAd,GAAwB;UALtB,CAA5B,EAMJ;YACDsB,YAAY,EAAER;UADb,CANI,CADkB;UAUzBvC,MAAM,EAAE;QAViB,CAAjB,CAAV;MAYD,CA3CoC,CA2CnC;;;MAGF,IAAIa,SAAS,CAAC3E,GAAV,CAAc,MAAd,KAAyBuD,CAAC,KAAKsB,WAAnC,EAAgD;QAC9C,IAAIc,QAAQ,GAAGhB,SAAS,CAAC3E,GAAV,CAAc,UAAd,CAAf;QACA2F,QAAQ,GAAGA,QAAQ,GAAGA,QAAQ,GAAGzC,aAAd,GAA8BA,aAAjD;;QAEA,KAAK,IAAI4D,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIhC,cAArB,EAAqCgC,CAAC,EAAtC,EAA0C;UACxCvB,KAAK,GAAGjF,IAAI,CAACmF,GAAL,CAASR,KAAT,CAAR;UACAO,KAAK,GAAGlF,IAAI,CAACoF,GAAL,CAAST,KAAT,CAAR;UACA,IAAI8B,QAAQ,GAAG,IAAIjE,OAAO,CAAC+C,IAAZ,CAAiB;YAC9BjC,KAAK,EAAE;cACLkC,EAAE,EAAEP,KAAK,IAAI5E,CAAC,GAAGgF,QAAR,CAAL,GAAyBnF,EADxB;cAELuF,EAAE,EAAEP,KAAK,IAAI7E,CAAC,GAAGgF,QAAR,CAAL,GAAyBjF,EAFxB;cAGLsF,EAAE,EAAET,KAAK,IAAI5E,CAAC,GAAGqE,OAAJ,GAAcW,QAAlB,CAAL,GAAmCnF,EAHlC;cAILyF,EAAE,EAAET,KAAK,IAAI7E,CAAC,GAAGqE,OAAJ,GAAcW,QAAlB,CAAL,GAAmCjF;YAJlC,CADuB;YAO9BoD,MAAM,EAAE,IAPsB;YAQ9BoC,KAAK,EAAEb;UARuB,CAAjB,CAAf;;UAWA,IAAIA,aAAa,CAACc,MAAd,KAAyB,MAA7B,EAAqC;YACnCY,QAAQ,CAAChD,QAAT,CAAkB;cAChBoC,MAAM,EAAEhC,QAAQ,CAAC,CAACZ,CAAC,GAAGuD,CAAC,GAAGhC,cAAT,IAA2BD,WAA5B;YADA,CAAlB;UAGD;;UAEDhD,KAAK,CAACqC,GAAN,CAAU6C,QAAV;UACA9B,KAAK,IAAIE,OAAT;QACD;;QAEDF,KAAK,IAAIE,OAAT;MACD,CA7BD,MA6BO;QACLF,KAAK,IAAIC,IAAT;MACD;IACF;EACF,CAtGD;;EAwGA/D,SAAS,CAACO,SAAV,CAAoB6C,cAApB,GAAqC,UAAU1E,WAAV,EAAuB+B,OAAvB,EAAgC9B,GAAhC,EAAqCqE,QAArC,EAA+CnC,OAA/C,EAAwDM,UAAxD,EAAoEE,QAApE,EAA8EH,SAA9E,EAAyFa,aAAzF,EAAwG;IAC3I,IAAIrB,KAAK,GAAG,KAAKA,KAAjB;IACA,IAAImF,OAAO,GAAG,KAAK9E,KAAnB;IACA,IAAI+E,eAAe,GAAG,KAAKC,YAA3B;IACA,IAAIC,YAAY,GAAG,EAAnB;IACA,IAAIC,WAAW,GAAGvH,WAAW,CAACG,GAAZ,CAAgB,CAAC,SAAD,EAAY,MAAZ,CAAhB,CAAlB;IACA,IAAIqH,aAAa,GAAGxH,WAAW,CAAC6C,QAAZ,CAAqB,UAArB,CAApB;IACA,IAAI4E,YAAY,GAAGD,aAAa,CAACrH,GAAd,CAAkB,MAAlB,CAAnB;IACA,IAAIuH,IAAI,GAAG1H,WAAW,CAACsC,OAAZ,EAAX;IACA,IAAIqF,QAAQ,GAAGD,IAAI,CAACE,YAAL,CAAkB,OAAlB,CAAf;IACA,IAAIjD,MAAM,GAAG,CAAC3E,WAAW,CAACG,GAAZ,CAAgB,KAAhB,CAAd;IACA,IAAIyE,MAAM,GAAG,CAAC5E,WAAW,CAACG,GAAZ,CAAgB,KAAhB,CAAd;IACA,IAAI0H,WAAW,GAAG,CAAClD,MAAD,EAASC,MAAT,CAAlB;IACA,IAAIkD,WAAW,GAAG,CAACrF,UAAD,EAAaE,QAAb,CAAlB;;IAEA,SAASoF,aAAT,CAAuBC,GAAvB,EAA4B5C,KAA5B,EAAmC;MACjC,IAAI6C,SAAS,GAAGP,IAAI,CAACQ,YAAL,CAAkBF,GAAlB,CAAhB;MACA,IAAIG,YAAY,GAAGF,SAAS,CAACpF,QAAV,CAAmB,SAAnB,CAAnB;MACA,IAAIuF,YAAY,GAAG,IAAAxH,oBAAA,EAAauH,YAAY,CAAChI,GAAb,CAAiB,OAAjB,CAAb,EAAwCgC,OAAO,CAACrB,CAAhD,CAAnB;MACA,IAAIuH,aAAa,GAAG,IAAAzH,oBAAA,EAAauH,YAAY,CAAChI,GAAb,CAAiB,QAAjB,CAAb,EAAyCgC,OAAO,CAACrB,CAAjD,CAApB;MACA,IAAIwH,UAAU,GAAGtI,WAAW,CAACG,GAAZ,CAAgB,CAAC,SAAD,EAAY,MAAZ,CAAhB,CAAjB;MACA,IAAIoI,aAAa,GAAGJ,YAAY,CAAChI,GAAb,CAAiB,cAAjB,CAApB;MACA,IAAIqI,cAAc,GAAG,IAAA5H,oBAAA,EAAa2H,aAAa,CAAC,CAAD,CAA1B,EAA+BpG,OAAO,CAACrB,CAAvC,CAArB;MACA,IAAI2H,cAAc,GAAG,IAAA7H,oBAAA,EAAa2H,aAAa,CAAC,CAAD,CAA1B,EAA+BpG,OAAO,CAACrB,CAAvC,CAArB;MACA,IAAI4H,iBAAiB,GAAGP,YAAY,CAAChI,GAAb,CAAiB,YAAjB,CAAxB;MACA,IAAIwI,OAAJ,CAViC,CAUpB;;MAEb,IAAIL,UAAJ,EAAgB;QACdK,OAAO,GAAG,IAAAC,oBAAA,EAAaN,UAAb,EAAyBE,cAAc,GAAGJ,YAAY,GAAG,CAAzD,EAA4DK,cAAc,GAAGJ,aAA7E,EAA4FD,YAA5F,EAA0GC,aAA1G,EAAyH,IAAzH,EAA+HK,iBAA/H,CAAV;MACD,CAFD,MAEO;QACLC,OAAO,GAAG,IAAIE,oBAAJ,CAAgB;UACxB9E,KAAK,EAAE;YACLqB,KAAK,EAAE,CAAC3E,IAAI,CAACiC,EAAN,GAAW,CADb;YAELtC,KAAK,EAAEgI,YAFF;YAGLtH,CAAC,EAAEuH,aAHE;YAILzB,CAAC,EAAE4B,cAJE;YAKL3B,CAAC,EAAE4B;UALE;QADiB,CAAhB,CAAV;MASD;;MAEDE,OAAO,CAACG,QAAR,GAAmB,EAAE1D,KAAK,GAAG3E,IAAI,CAACiC,EAAL,GAAU,CAApB,CAAnB;MACAiG,OAAO,CAAC/B,CAAR,GAAYzE,OAAO,CAACxB,EAApB;MACAgI,OAAO,CAAC9B,CAAR,GAAY1E,OAAO,CAACtB,EAApB;MACA,OAAO8H,OAAP;IACD;;IAED,SAASI,cAAT,CAAwBf,GAAxB,EAA6BrF,QAA7B,EAAuC;MACrC,IAAIG,QAAQ,GAAG0E,aAAa,CAACrH,GAAd,CAAkB,UAAlB,CAAf;MACA,IAAI6I,YAAY,GAAGlG,QAAQ,GAAGE,gBAAH,GAAaC,OAAO,CAACC,MAAhD;MACA,IAAI+F,SAAS,GAAGzB,aAAa,CAACrH,GAAd,CAAkB,SAAlB,CAAhB;MACA,IAAI+I,aAAa,GAAGD,SAAS,GAAGzB,aAAa,CAACrH,GAAd,CAAkB,OAAlB,CAAH,GAAgCkD,aAAa,GAAGqE,IAAI,CAACyB,KAAL,EAA7E;MACA,IAAInF,EAAE,GAAGiF,SAAS,GAAG9G,OAAO,CAACrB,CAAR,GAAYoI,aAAf,GAA+B/G,OAAO,CAACrB,CAAR,GAAY,CAACkH,GAAG,GAAG,CAAP,IAAYkB,aAAzE;MACA,IAAIpI,CAAC,GAAGmI,SAAS,GAAG9G,OAAO,CAACrB,CAAX,GAAeqB,OAAO,CAACrB,CAAR,GAAYkH,GAAG,GAAGkB,aAAlD;MACA,IAAIE,QAAQ,GAAG,IAAIJ,YAAJ,CAAiB;QAC9BjF,KAAK,EAAE;UACLtB,UAAU,EAAEA,UADP;UAELE,QAAQ,EAAEA,QAFL;UAGLhC,EAAE,EAAEwB,OAAO,CAACxB,EAHP;UAILE,EAAE,EAAEsB,OAAO,CAACtB,EAJP;UAKL2B,SAAS,EAAEA,SALN;UAMLwB,EAAE,EAAEA,EANC;UAOLlD,CAAC,EAAEA;QAPE;MADuB,CAAjB,CAAf;MAWAmI,SAAS,KAAKG,QAAQ,CAACC,EAAT,GAAczE,MAAM,GAAG8C,IAAI,CAACvH,GAAL,CAASwH,QAAT,EAAmBK,GAAnB,IAA0BpD,MAAtD,CAAT;MACA,OAAOwE,QAAP;IACD;;IAED,IAAI3B,YAAY,IAAIF,WAApB,EAAiC;MAC/BG,IAAI,CAAC4B,IAAL,CAAUnC,OAAV,EAAmB9C,GAAnB,CAAuB,UAAU2D,GAAV,EAAe;QACpC,IAAIuB,GAAG,GAAG7B,IAAI,CAACvH,GAAL,CAASwH,QAAT,EAAmBK,GAAnB,CAAV;;QAEA,IAAIT,WAAJ,EAAiB;UACf,IAAIoB,OAAO,GAAGZ,aAAa,CAACC,GAAD,EAAMvF,UAAN,CAA3B,CADe,CAC+B;;UAE9CQ,OAAO,CAACuG,SAAR,CAAkBb,OAAlB,EAA2B;YACzBG,QAAQ,EAAE,EAAE,CAACW,KAAK,CAAC,CAACF,GAAF,CAAL,GAAczB,WAAW,CAAC,CAAD,CAAzB,GAA+B,IAAA4B,iBAAA,EAAUH,GAAV,EAAe1B,WAAf,EAA4BC,WAA5B,EAAyC,IAAzC,CAAhC,IAAkFrH,IAAI,CAACiC,EAAL,GAAU,CAA9F;UADe,CAA3B,EAEG1C,WAFH;UAGAgC,KAAK,CAACqC,GAAN,CAAUsE,OAAV;UACAjB,IAAI,CAACiC,gBAAL,CAAsB3B,GAAtB,EAA2BW,OAA3B;QACD;;QAED,IAAIlB,YAAJ,EAAkB;UAChB,IAAI2B,QAAQ,GAAGL,cAAc,CAACf,GAAD,EAAMvF,UAAN,CAA7B;UACA,IAAImH,MAAM,GAAGpC,aAAa,CAACrH,GAAd,CAAkB,MAAlB,CAAb;UACA8C,OAAO,CAACuG,SAAR,CAAkBJ,QAAlB,EAA4B;YAC1BrF,KAAK,EAAE;cACLpB,QAAQ,EAAE,IAAA+G,iBAAA,EAAUH,GAAV,EAAe1B,WAAf,EAA4BC,WAA5B,EAAyC8B,MAAzC;YADL;UADmB,CAA5B,EAIG5J,WAJH;UAKAgC,KAAK,CAACqC,GAAN,CAAU+E,QAAV,EARgB,CAQK;UACrB;;UAEA,IAAAS,2BAAA,EAAgB7J,WAAW,CAAC8J,WAA5B,EAAyCpC,IAAI,CAACqC,QAA9C,EAAwD/B,GAAxD,EAA6DoB,QAA7D;UACA9B,YAAY,CAACU,GAAD,CAAZ,GAAoBoB,QAApB;QACD;MACF,CA3BD,EA2BGY,MA3BH,CA2BU,UAAUC,MAAV,EAAkBC,MAAlB,EAA0B;QAClC,IAAIX,GAAG,GAAG7B,IAAI,CAACvH,GAAL,CAASwH,QAAT,EAAmBsC,MAAnB,CAAV;;QAEA,IAAI1C,WAAJ,EAAiB;UACf,IAAI4C,eAAe,GAAGhD,OAAO,CAACiD,gBAAR,CAAyBF,MAAzB,CAAtB;UACA,IAAIG,cAAc,GAAGF,eAAe,GAAGA,eAAe,CAACrB,QAAnB,GAA8BrG,UAAlE;UACA,IAAIkG,OAAO,GAAGZ,aAAa,CAACkC,MAAD,EAASI,cAAT,CAA3B;UACA1B,OAAO,CAACG,QAAR,GAAmBuB,cAAnB;UACApH,OAAO,CAACqH,WAAR,CAAoB3B,OAApB,EAA6B;YAC3BG,QAAQ,EAAE,EAAE,CAACW,KAAK,CAAC,CAACF,GAAF,CAAL,GAAczB,WAAW,CAAC,CAAD,CAAzB,GAA+B,IAAA4B,iBAAA,EAAUH,GAAV,EAAe1B,WAAf,EAA4BC,WAA5B,EAAyC,IAAzC,CAAhC,IAAkFrH,IAAI,CAACiC,EAAL,GAAU,CAA9F;UADiB,CAA7B,EAEG1C,WAFH;UAGAgC,KAAK,CAACqC,GAAN,CAAUsE,OAAV;UACAjB,IAAI,CAACiC,gBAAL,CAAsBM,MAAtB,EAA8BtB,OAA9B;QACD;;QAED,IAAIlB,YAAJ,EAAkB;UAChB,IAAI8C,gBAAgB,GAAGnD,eAAe,CAAC8C,MAAD,CAAtC;UACA,IAAIM,gBAAgB,GAAGD,gBAAgB,GAAGA,gBAAgB,CAACxG,KAAjB,CAAuBpB,QAA1B,GAAqCF,UAA5E;UACA,IAAI2G,QAAQ,GAAGL,cAAc,CAACkB,MAAD,EAASO,gBAAT,CAA7B;UACA,IAAIZ,MAAM,GAAGpC,aAAa,CAACrH,GAAd,CAAkB,MAAlB,CAAb;UACA8C,OAAO,CAACqH,WAAR,CAAoBlB,QAApB,EAA8B;YAC5BrF,KAAK,EAAE;cACLpB,QAAQ,EAAE,IAAA+G,iBAAA,EAAUH,GAAV,EAAe1B,WAAf,EAA4BC,WAA5B,EAAyC8B,MAAzC;YADL;UADqB,CAA9B,EAIG5J,WAJH;UAKAgC,KAAK,CAACqC,GAAN,CAAU+E,QAAV,EAVgB,CAUK;UACrB;;UAEA,IAAAS,2BAAA,EAAgB7J,WAAW,CAAC8J,WAA5B,EAAyCpC,IAAI,CAACqC,QAA9C,EAAwDE,MAAxD,EAAgEb,QAAhE;UACA9B,YAAY,CAAC2C,MAAD,CAAZ,GAAuBb,QAAvB;QACD;MACF,CA1DD,EA0DGqB,OA1DH;MA2DA/C,IAAI,CAACgD,IAAL,CAAU,UAAU1C,GAAV,EAAe;QACvB,IAAIC,SAAS,GAAGP,IAAI,CAACQ,YAAL,CAAkBF,GAAlB,CAAhB;QACA,IAAI2C,aAAa,GAAG1C,SAAS,CAACpF,QAAV,CAAmB,UAAnB,CAApB;QACA,IAAI+H,KAAK,GAAGD,aAAa,CAACxK,GAAd,CAAkB,OAAlB,CAAZ;QACA,IAAI0K,SAAS,GAAGF,aAAa,CAACxK,GAAd,CAAkB,WAAlB,CAAhB;QACA,IAAI2K,gBAAgB,GAAGH,aAAa,CAACxK,GAAd,CAAkB,UAAlB,CAAvB;;QAEA,IAAIoH,WAAJ,EAAiB;UACf,IAAIoB,OAAO,GAAGjB,IAAI,CAAC0C,gBAAL,CAAsBpC,GAAtB,CAAd;UACA,IAAI+C,WAAW,GAAGrD,IAAI,CAACsD,aAAL,CAAmBhD,GAAnB,EAAwB,OAAxB,CAAlB;UACA,IAAIiD,WAAW,GAAGF,WAAW,CAAC5G,IAA9B;;UAEA,IAAIwE,OAAO,YAAYuC,cAAvB,EAAgC;YAC9B,IAAIC,SAAS,GAAGxC,OAAO,CAACtC,KAAxB;YACAsC,OAAO,CAACyC,QAAR,CAAiB,IAAAC,YAAA,EAAO;cACtBC,KAAK,EAAEH,SAAS,CAACG,KADK;cAEtB1E,CAAC,EAAEuE,SAAS,CAACvE,CAFS;cAGtBC,CAAC,EAAEsE,SAAS,CAACtE,CAHS;cAItBzG,KAAK,EAAE+K,SAAS,CAAC/K,KAJK;cAKtBE,MAAM,EAAE6K,SAAS,CAAC7K;YALI,CAAP,EAMdyK,WANc,CAAjB;UAOD,CATD,MASO;YACLpC,OAAO,CAACyC,QAAR,CAAiBL,WAAjB;YACApC,OAAO,CAAC/G,IAAR,KAAiB,SAAjB,IAA8B+G,OAAO,CAAC4C,QAAR,CAAiBN,WAAjB,CAA9B;UACD;;UAEDtC,OAAO,CAACzE,QAAR,CAAiB+D,SAAS,CAACpF,QAAV,CAAmB,CAAC,SAAD,EAAY,WAAZ,CAAnB,EAA6C2I,YAA7C,EAAjB;;UAEA,IAAI7C,OAAO,CAACtC,KAAR,CAAclC,IAAd,KAAuB,MAA3B,EAAmC;YACjCwE,OAAO,CAACzE,QAAR,CAAiB,MAAjB,EAAyBI,QAAQ,CAAC,IAAAoF,iBAAA,EAAUhC,IAAI,CAACvH,GAAL,CAASwH,QAAT,EAAmBK,GAAnB,CAAV,EAAmCH,WAAnC,EAAgD,CAAC,CAAD,EAAI,CAAJ,CAAhD,EAAwD,IAAxD,CAAD,CAAjC;UACD;;UAEDc,OAAO,CAAC8C,cAAR,GAAyB,CAAzB;UACA,IAAAC,gCAAA,EAAyB/C,OAAzB,EAAkCV,SAAlC;UACA,IAAA0D,2BAAA,EAAoBhD,OAApB,EAA6BiC,KAA7B,EAAoCC,SAApC,EAA+CC,gBAA/C;QACD;;QAED,IAAIrD,YAAJ,EAAkB;UAChB,IAAI2B,QAAQ,GAAG9B,YAAY,CAACU,GAAD,CAA3B;UACAoB,QAAQ,CAACgC,QAAT,CAAkB1D,IAAI,CAACsD,aAAL,CAAmBhD,GAAnB,EAAwB,OAAxB,CAAlB;UACAoB,QAAQ,CAAClF,QAAT,CAAkB+D,SAAS,CAACpF,QAAV,CAAmB,CAAC,UAAD,EAAa,WAAb,CAAnB,EAA8C2I,YAA9C,EAAlB;UACApC,QAAQ,CAACqC,cAAT,GAA0B,CAA1B;UACA,IAAAC,gCAAA,EAAyBtC,QAAzB,EAAmCnB,SAAnC;UACA,IAAA0D,2BAAA,EAAoBvC,QAApB,EAA8BwB,KAA9B,EAAqCC,SAArC,EAAgDC,gBAAhD;QACD;MACF,CA7CD;MA8CA,KAAKzD,YAAL,GAAoBC,YAApB;IACD;EACF,CAjLD;;EAmLAhG,SAAS,CAACO,SAAV,CAAoB4C,aAApB,GAAoC,UAAUzE,WAAV,EAAuBmC,OAAvB,EAAgC;IAClE,IAAIyJ,WAAW,GAAG5L,WAAW,CAAC6C,QAAZ,CAAqB,QAArB,CAAlB;IACA,IAAIgJ,UAAU,GAAGD,WAAW,CAACzL,GAAZ,CAAgB,MAAhB,CAAjB;;IAEA,IAAI0L,UAAJ,EAAgB;MACd,IAAIC,UAAU,GAAGF,WAAW,CAACzL,GAAZ,CAAgB,MAAhB,CAAjB;MACA,IAAI4L,UAAU,GAAGH,WAAW,CAACzL,GAAZ,CAAgB,MAAhB,CAAjB;MACA,IAAI6L,YAAY,GAAGJ,WAAW,CAACzL,GAAZ,CAAgB,cAAhB,CAAnB;MACA,IAAI8L,gBAAgB,GAAGL,WAAW,CAACzL,GAAZ,CAAgB,YAAhB,CAAvB;MACA,IAAI+L,MAAM,GAAG,IAAAtD,oBAAA,EAAamD,UAAb,EAAyB5J,OAAO,CAACxB,EAAR,GAAamL,UAAU,GAAG,CAA1B,GAA8B,IAAAlL,oBAAA,EAAaoL,YAAY,CAAC,CAAD,CAAzB,EAA8B7J,OAAO,CAACrB,CAAtC,CAAvD,EAAiGqB,OAAO,CAACtB,EAAR,GAAaiL,UAAU,GAAG,CAA1B,GAA8B,IAAAlL,oBAAA,EAAaoL,YAAY,CAAC,CAAD,CAAzB,EAA8B7J,OAAO,CAACrB,CAAtC,CAA/H,EAAyKgL,UAAzK,EAAqLA,UAArL,EAAiM,IAAjM,EAAuMG,gBAAvM,CAAb;MACAC,MAAM,CAAC7C,EAAP,GAAYuC,WAAW,CAACzL,GAAZ,CAAgB,WAAhB,IAA+B,CAA/B,GAAmC,CAA/C;MACA+L,MAAM,CAAChI,QAAP,CAAgB0H,WAAW,CAAC/I,QAAZ,CAAqB,WAArB,EAAkC2I,YAAlC,EAAhB;MACA,KAAKxJ,KAAL,CAAWqC,GAAX,CAAe6H,MAAf;IACD;EACF,CAdD;;EAgBA5K,SAAS,CAACO,SAAV,CAAoB2C,qBAApB,GAA4C,UAAUxE,WAAV,EAAuB+B,OAAvB,EAAgC9B,GAAhC,EAAqCqE,QAArC,EAA+CnC,OAA/C,EAAwD;IAClG,IAAIV,KAAK,GAAG,IAAZ;;IAEA,IAAIiG,IAAI,GAAG1H,WAAW,CAACsC,OAAZ,EAAX;IACA,IAAIqF,QAAQ,GAAGD,IAAI,CAACE,YAAL,CAAkB,OAAlB,CAAf;IACA,IAAIjD,MAAM,GAAG,CAAC3E,WAAW,CAACG,GAAZ,CAAgB,KAAhB,CAAd;IACA,IAAIyE,MAAM,GAAG,CAAC5E,WAAW,CAACG,GAAZ,CAAgB,KAAhB,CAAd;IACA,IAAIgM,YAAY,GAAG,IAAIlJ,OAAO,CAACmJ,KAAZ,EAAnB;IACA,IAAIC,WAAW,GAAG,EAAlB;IACA,IAAIC,YAAY,GAAG,EAAnB;IACA,IAAIC,YAAY,GAAGvM,WAAW,CAACwM,kBAAZ,EAAnB;IACA,IAAIC,gBAAgB,GAAGzM,WAAW,CAACG,GAAZ,CAAgB,CAAC,SAAD,EAAY,WAAZ,CAAhB,CAAvB;IACAuH,IAAI,CAAC4B,IAAL,CAAU,KAAKjH,KAAf,EAAsBgC,GAAtB,CAA0B,UAAU2D,GAAV,EAAe;MACvCqE,WAAW,CAACrE,GAAD,CAAX,GAAmB,IAAI/E,OAAO,CAACwD,IAAZ,CAAiB;QAClCxC,MAAM,EAAE;MAD0B,CAAjB,CAAnB;MAGAqI,YAAY,CAACtE,GAAD,CAAZ,GAAoB,IAAI/E,OAAO,CAACwD,IAAZ,CAAiB;QACnCxC,MAAM,EAAE;MAD2B,CAAjB,CAApB;IAGD,CAPD,EAOG+F,MAPH,CAOU,UAAUhC,GAAV,EAAekC,MAAf,EAAuB;MAC/BmC,WAAW,CAACrE,GAAD,CAAX,GAAmBvG,KAAK,CAACiL,SAAN,CAAgBxC,MAAhB,CAAnB;MACAoC,YAAY,CAACtE,GAAD,CAAZ,GAAoBvG,KAAK,CAACkL,UAAN,CAAiBzC,MAAjB,CAApB;IACD,CAVD,EAUGO,OAVH;IAWA/C,IAAI,CAACgD,IAAL,CAAU,UAAU1C,GAAV,EAAe;MACvB,IAAIC,SAAS,GAAGP,IAAI,CAACQ,YAAL,CAAkBF,GAAlB,CAAhB;MACA,IAAIhH,KAAK,GAAG0G,IAAI,CAACvH,GAAL,CAASwH,QAAT,EAAmBK,GAAnB,CAAZ;MACA,IAAI4E,SAAS,GAAG,IAAI3J,OAAO,CAACmJ,KAAZ,EAAhB;MACA,IAAI5F,SAAS,GAAGlC,QAAQ,CAAC,IAAAoF,iBAAA,EAAU1I,KAAV,EAAiB,CAAC2D,MAAD,EAASC,MAAT,CAAjB,EAAmC,CAAC,CAAD,EAAI,CAAJ,CAAnC,EAA2C,IAA3C,CAAD,CAAxB;MACA,IAAIiI,cAAc,GAAG5E,SAAS,CAACpF,QAAV,CAAmB,OAAnB,CAArB;;MAEA,IAAIgK,cAAc,CAAC1M,GAAf,CAAmB,MAAnB,CAAJ,EAAgC;QAC9B,IAAI2M,iBAAiB,GAAGD,cAAc,CAAC1M,GAAf,CAAmB,cAAnB,CAAxB;QACA,IAAI4M,MAAM,GAAG5K,OAAO,CAACxB,EAAR,GAAa,IAAAC,oBAAA,EAAakM,iBAAiB,CAAC,CAAD,CAA9B,EAAmC3K,OAAO,CAACrB,CAA3C,CAA1B;QACA,IAAIkM,MAAM,GAAG7K,OAAO,CAACtB,EAAR,GAAa,IAAAD,oBAAA,EAAakM,iBAAiB,CAAC,CAAD,CAA9B,EAAmC3K,OAAO,CAACrB,CAA3C,CAA1B;QACA,IAAImM,OAAO,GAAGZ,WAAW,CAACrE,GAAD,CAAzB;QACAiF,OAAO,CAACC,IAAR,CAAa;UACX7D,EAAE,EAAEoD,gBAAgB,GAAG,CAAH,GAAO,CADhB;UAEXpG,KAAK,EAAE,IAAAK,2BAAA,EAAgBmG,cAAhB,EAAgC;YACrCjG,CAAC,EAAEmG,MADkC;YAErClG,CAAC,EAAEmG,MAFkC;YAGrCrG,IAAI,EAAEe,IAAI,CAACyF,OAAL,CAAanF,GAAb,CAH+B;YAIrCjB,KAAK,EAAE,QAJ8B;YAKrCD,aAAa,EAAE;UALsB,CAAhC,EAMJ;YACDE,YAAY,EAAER;UADb,CANI;QAFI,CAAb;QAYAoG,SAAS,CAACvI,GAAV,CAAc4I,OAAd;MACD;;MAED,IAAIG,eAAe,GAAGnF,SAAS,CAACpF,QAAV,CAAmB,QAAnB,CAAtB;;MAEA,IAAIuK,eAAe,CAACjN,GAAhB,CAAoB,MAApB,CAAJ,EAAiC;QAC/B,IAAIkN,kBAAkB,GAAGD,eAAe,CAACjN,GAAhB,CAAoB,cAApB,CAAzB;QACA,IAAImN,OAAO,GAAGnL,OAAO,CAACxB,EAAR,GAAa,IAAAC,oBAAA,EAAayM,kBAAkB,CAAC,CAAD,CAA/B,EAAoClL,OAAO,CAACrB,CAA5C,CAA3B;QACA,IAAIyM,OAAO,GAAGpL,OAAO,CAACtB,EAAR,GAAa,IAAAD,oBAAA,EAAayM,kBAAkB,CAAC,CAAD,CAA/B,EAAoClL,OAAO,CAACrB,CAA5C,CAA3B;QACA,IAAIV,KAAK,GAAG,IAAAQ,oBAAA,EAAawM,eAAe,CAACjN,GAAhB,CAAoB,OAApB,CAAb,EAA2CgC,OAAO,CAACrB,CAAnD,CAAZ;QACA,IAAIR,MAAM,GAAG,IAAAM,oBAAA,EAAawM,eAAe,CAACjN,GAAhB,CAAoB,QAApB,CAAb,EAA4CgC,OAAO,CAACrB,CAApD,CAAb;QACA,IAAI0M,WAAW,GAAGxN,WAAW,CAACG,GAAZ,CAAgB,CAAC,UAAD,EAAa,MAAb,CAAhB,IAAwCuH,IAAI,CAACsD,aAAL,CAAmBhD,GAAnB,EAAwB,OAAxB,EAAiC7D,IAAzE,GAAgFqC,SAAlG;QACA,IAAIyG,OAAO,GAAGX,YAAY,CAACtE,GAAD,CAA1B;QACA,IAAIyF,WAAW,GAAGL,eAAe,CAACjN,GAAhB,CAAoB,WAApB,CAAlB;QACA8M,OAAO,CAACC,IAAR,CAAa;UACX7D,EAAE,EAAEoD,gBAAgB,GAAG,CAAH,GAAO,CADhB;UAEXpG,KAAK,EAAE,IAAAK,2BAAA,EAAgB0G,eAAhB,EAAiC;YACtCxG,CAAC,EAAE0G,OADmC;YAEtCzG,CAAC,EAAE0G,OAFmC;YAGtC5G,IAAI,EAAE5F,WAAW,CAACC,KAAD,EAAQyM,WAAR,CAHqB;YAItCrN,KAAK,EAAEqJ,KAAK,CAACrJ,KAAD,CAAL,GAAe,IAAf,GAAsBA,KAJS;YAKtCE,MAAM,EAAEmJ,KAAK,CAACnJ,MAAD,CAAL,GAAgB,IAAhB,GAAuBA,MALO;YAMtCyG,KAAK,EAAE,QAN+B;YAOtCD,aAAa,EAAE;UAPuB,CAAjC,EAQJ;YACDE,YAAY,EAAEwG;UADb,CARI;QAFI,CAAb;QAcA,IAAAE,kCAAA,EAAuBT,OAAvB,EAAgC;UAC9BU,MAAM,EAAEP;QADsB,CAAhC,EAEGpM,KAFH,EAEU,UAAUA,KAAV,EAAiB;UACzB,OAAOD,WAAW,CAACC,KAAD,EAAQyM,WAAR,CAAlB;QACD,CAJD;QAKAlB,YAAY,IAAI,IAAAqB,6BAAA,EAAkBX,OAAlB,EAA2BjF,GAA3B,EAAgCN,IAAhC,EAAsC1H,WAAtC,EAAmD;UACjE6N,iBAAiB,EAAE,UAAUC,cAAV,EAA0BC,MAA1B,EAAkChE,QAAlC,EAA4CiE,aAA5C,EAA2DC,GAA3D,EAAgEC,YAAhE,EAA8E;YAC/F,OAAOnN,WAAW,CAACmN,YAAY,GAAGA,YAAY,CAACC,iBAAhB,GAAoCnN,KAAjD,EAAwDyM,WAAxD,CAAlB;UACD;QAHgE,CAAnD,CAAhB;QAKAb,SAAS,CAACvI,GAAV,CAAc4I,OAAd;MACD;;MAEDd,YAAY,CAAC9H,GAAb,CAAiBuI,SAAjB;IACD,CAlED;IAmEA,KAAK5K,KAAL,CAAWqC,GAAX,CAAe8H,YAAf;IACA,KAAKO,SAAL,GAAiBL,WAAjB;IACA,KAAKM,UAAL,GAAkBL,YAAlB;EACD,CA7FD;;EA+FAhL,SAAS,CAACM,IAAV,GAAiB,OAAjB;EACA,OAAON,SAAP;AACD,CAzeD,CAyeE8M,cAzeF,CAFA;;eA6ee9M,S"},"metadata":{},"sourceType":"script"}