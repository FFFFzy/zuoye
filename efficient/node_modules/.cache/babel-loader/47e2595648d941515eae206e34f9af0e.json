{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _VisualMapping = _interopRequireDefault(require(\"../../visual/VisualMapping.js\"));\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar _color = require(\"zrender/lib/tool/color.js\");\n\nvar _model = require(\"../../util/model.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar inner = (0, _model.makeInner)();\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\nexports.default = _default;\n\nfunction travelTree(node, designatedVisual, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout();\n  var data = node.hostTree.data; // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = nodeModel.getModel(ITEM_STYLE_NORMAL);\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, seriesModel);\n  var existsStyle = data.ensureUniqueItemVisual(node.dataIndex, 'style'); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  existsStyle.stroke = borderColor;\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals); // Apply visual to this node.\n\n    existsStyle.fill = thisNodeColor;\n  } else {\n    var mapping_1 = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    (0, _util.each)(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping_1, seriesModel);\n        travelTree(child, childVisual, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, seriesModel) {\n  var visuals = (0, _util.extend)({}, designatedVisual);\n  var designatedVisualItemStyle = seriesModel.designatedVisualItemStyle;\n  (0, _util.each)(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    designatedVisualItemStyle[visualName] = designatedVisual[visualName];\n    var val = nodeItemStyleModel.get(visualName);\n    designatedVisualItemStyle[visualName] = null;\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = (0, _color.modifyHSL)(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = (0, _color.modifyAlpha)(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null // Can only be string\n  ? (0, _color.modifyHSL)(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new _VisualMapping.default(opt);\n  inner(mapping).drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return (0, _util.isArray)(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = (0, _util.extend)({}, visuals);\n\n  if (mapping) {\n    // Only support color, colorAlpha, colorSaturation.\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && inner(mapping).drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}","map":{"version":3,"names":["ITEM_STYLE_NORMAL","inner","makeInner","seriesType","reset","seriesModel","tree","getData","root","isRemoved","travelTree","getViewRoot","getAncestors","node","designatedVisual","viewRootAncestors","nodeModel","getModel","nodeLayout","getLayout","data","hostTree","invisible","isInView","nodeItemStyleModel","visuals","buildVisuals","existsStyle","ensureUniqueItemVisual","dataIndex","borderColor","get","borderColorSaturation","thisNodeColor","calculateColor","calculateBorderColor","stroke","viewChildren","length","fill","mapping_1","buildVisualMapping","each","child","index","depth","childVisual","mapVisual","extend","designatedVisualItemStyle","visualName","val","color","getValueVisualDefine","colorAlpha","colorSaturation","modifyHSL","modifyAlpha","name","value","rangeVisual","getRangeVisual","visualMin","visualMax","dataExtent","slice","colorMappingBy","opt","type","visual","range","mappingMethod","loop","mapping","VisualMapping","drColorMappingBy","isArray","childVisuals","mappingType","mapIdToIndex","getId","getValue","mapValueToVisual"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/chart/treemap/treemapVisual.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport VisualMapping from '../../visual/VisualMapping.js';\nimport { each, extend, isArray } from 'zrender/lib/core/util.js';\nimport { modifyHSL, modifyAlpha } from 'zrender/lib/tool/color.js';\nimport { makeInner } from '../../util/model.js';\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar inner = makeInner();\nexport default {\n  seriesType: 'treemap',\n  reset: function (seriesModel) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout();\n  var data = node.hostTree.data; // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = nodeModel.getModel(ITEM_STYLE_NORMAL);\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, seriesModel);\n  var existsStyle = data.ensureUniqueItemVisual(node.dataIndex, 'style'); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  existsStyle.stroke = borderColor;\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals); // Apply visual to this node.\n\n    existsStyle.fill = thisNodeColor;\n  } else {\n    var mapping_1 = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping_1, seriesModel);\n        travelTree(child, childVisual, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, seriesModel) {\n  var visuals = extend({}, designatedVisual);\n  var designatedVisualItemStyle = seriesModel.designatedVisualItemStyle;\n  each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    designatedVisualItemStyle[visualName] = designatedVisual[visualName];\n    var val = nodeItemStyleModel.get(visualName);\n    designatedVisualItemStyle[visualName] = null;\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null // Can only be string\n  ? modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  inner(mapping).drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = extend({}, visuals);\n\n  if (mapping) {\n    // Only support color, colorAlpha, colorSaturation.\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && inner(mapping).drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}