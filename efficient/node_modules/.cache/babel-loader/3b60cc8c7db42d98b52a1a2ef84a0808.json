{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSectorCalculateTextPosition = createSectorCalculateTextPosition;\nexports.setSectorTextRotation = setSectorTextRotation;\n\nvar _text = require(\"zrender/lib/contain/text.js\");\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction createSectorCalculateTextPosition(positionMapping, opts) {\n  opts = opts || {};\n  var isRoundCap = opts.isRoundCap;\n  return function (out, opts, boundingRect) {\n    var textPosition = opts.position;\n\n    if (!textPosition || textPosition instanceof Array) {\n      return (0, _text.calculateTextPosition)(out, opts, boundingRect);\n    }\n\n    var mappedSectorPosition = positionMapping(textPosition);\n    var distance = opts.distance != null ? opts.distance : 5;\n    var sector = this.shape;\n    var cx = sector.cx;\n    var cy = sector.cy;\n    var r = sector.r;\n    var r0 = sector.r0;\n    var middleR = (r + r0) / 2;\n    var startAngle = sector.startAngle;\n    var endAngle = sector.endAngle;\n    var middleAngle = (startAngle + endAngle) / 2;\n    var extraDist = isRoundCap ? Math.abs(r - r0) / 2 : 0;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin; // base position: top-left\n\n    var x = cx + r * mathCos(startAngle);\n    var y = cy + r * mathSin(startAngle);\n    var textAlign = 'left';\n    var textVerticalAlign = 'top';\n\n    switch (mappedSectorPosition) {\n      case 'startArc':\n        x = cx + (r0 - distance) * mathCos(middleAngle);\n        y = cy + (r0 - distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'top';\n        break;\n\n      case 'insideStartArc':\n        x = cx + (r0 + distance) * mathCos(middleAngle);\n        y = cy + (r0 + distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        break;\n\n      case 'startAngle':\n        x = cx + middleR * mathCos(startAngle) + adjustAngleDistanceX(startAngle, distance + extraDist, false);\n        y = cy + middleR * mathSin(startAngle) + adjustAngleDistanceY(startAngle, distance + extraDist, false);\n        textAlign = 'right';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'insideStartAngle':\n        x = cx + middleR * mathCos(startAngle) + adjustAngleDistanceX(startAngle, -distance + extraDist, false);\n        y = cy + middleR * mathSin(startAngle) + adjustAngleDistanceY(startAngle, -distance + extraDist, false);\n        textAlign = 'left';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'middle':\n        x = cx + middleR * mathCos(middleAngle);\n        y = cy + middleR * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'endArc':\n        x = cx + (r + distance) * mathCos(middleAngle);\n        y = cy + (r + distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        break;\n\n      case 'insideEndArc':\n        x = cx + (r - distance) * mathCos(middleAngle);\n        y = cy + (r - distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'top';\n        break;\n\n      case 'endAngle':\n        x = cx + middleR * mathCos(endAngle) + adjustAngleDistanceX(endAngle, distance + extraDist, true);\n        y = cy + middleR * mathSin(endAngle) + adjustAngleDistanceY(endAngle, distance + extraDist, true);\n        textAlign = 'left';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'insideEndAngle':\n        x = cx + middleR * mathCos(endAngle) + adjustAngleDistanceX(endAngle, -distance + extraDist, true);\n        y = cy + middleR * mathSin(endAngle) + adjustAngleDistanceY(endAngle, -distance + extraDist, true);\n        textAlign = 'right';\n        textVerticalAlign = 'middle';\n        break;\n\n      default:\n        return (0, _text.calculateTextPosition)(out, opts, boundingRect);\n    }\n\n    out = out || {};\n    out.x = x;\n    out.y = y;\n    out.align = textAlign;\n    out.verticalAlign = textVerticalAlign;\n    return out;\n  };\n}\n\nfunction setSectorTextRotation(sector, textPosition, positionMapping, rotateType) {\n  if ((0, _util.isNumber)(rotateType)) {\n    // user-set rotation\n    sector.setTextConfig({\n      rotation: rotateType\n    });\n    return;\n  } else if ((0, _util.isArray)(textPosition)) {\n    // user-set position, use 0 as auto rotation\n    sector.setTextConfig({\n      rotation: 0\n    });\n    return;\n  }\n\n  var shape = sector.shape;\n  var startAngle = shape.clockwise ? shape.startAngle : shape.endAngle;\n  var endAngle = shape.clockwise ? shape.endAngle : shape.startAngle;\n  var middleAngle = (startAngle + endAngle) / 2;\n  var anchorAngle;\n  var mappedSectorPosition = positionMapping(textPosition);\n\n  switch (mappedSectorPosition) {\n    case 'startArc':\n    case 'insideStartArc':\n    case 'middle':\n    case 'insideEndArc':\n    case 'endArc':\n      anchorAngle = middleAngle;\n      break;\n\n    case 'startAngle':\n    case 'insideStartAngle':\n      anchorAngle = startAngle;\n      break;\n\n    case 'endAngle':\n    case 'insideEndAngle':\n      anchorAngle = endAngle;\n      break;\n\n    default:\n      sector.setTextConfig({\n        rotation: 0\n      });\n      return;\n  }\n\n  var rotate = Math.PI * 1.5 - anchorAngle;\n  /**\n   * TODO: labels with rotate > Math.PI / 2 should be rotate another\n   * half round flipped to increase readability. However, only middle\n   * position supports this for now, because in other positions, the\n   * anchor point is not at the center of the text, so the positions\n   * after rotating is not as expected.\n   */\n\n  if (mappedSectorPosition === 'middle' && rotate > Math.PI / 2 && rotate < Math.PI * 1.5) {\n    rotate -= Math.PI;\n  }\n\n  sector.setTextConfig({\n    rotation: rotate\n  });\n}\n\nfunction adjustAngleDistanceX(angle, distance, isEnd) {\n  return distance * Math.sin(angle) * (isEnd ? -1 : 1);\n}\n\nfunction adjustAngleDistanceY(angle, distance, isEnd) {\n  return distance * Math.cos(angle) * (isEnd ? 1 : -1);\n}","map":{"version":3,"names":["createSectorCalculateTextPosition","positionMapping","opts","isRoundCap","out","boundingRect","textPosition","position","Array","calculateTextPosition","mappedSectorPosition","distance","sector","shape","cx","cy","r","r0","middleR","startAngle","endAngle","middleAngle","extraDist","Math","abs","mathCos","cos","mathSin","sin","x","y","textAlign","textVerticalAlign","adjustAngleDistanceX","adjustAngleDistanceY","align","verticalAlign","setSectorTextRotation","rotateType","isNumber","setTextConfig","rotation","isArray","clockwise","anchorAngle","rotate","PI","angle","isEnd"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/label/sectorLabel.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { calculateTextPosition } from 'zrender/lib/contain/text.js';\nimport { isArray, isNumber } from 'zrender/lib/core/util.js';\nexport function createSectorCalculateTextPosition(positionMapping, opts) {\n  opts = opts || {};\n  var isRoundCap = opts.isRoundCap;\n  return function (out, opts, boundingRect) {\n    var textPosition = opts.position;\n\n    if (!textPosition || textPosition instanceof Array) {\n      return calculateTextPosition(out, opts, boundingRect);\n    }\n\n    var mappedSectorPosition = positionMapping(textPosition);\n    var distance = opts.distance != null ? opts.distance : 5;\n    var sector = this.shape;\n    var cx = sector.cx;\n    var cy = sector.cy;\n    var r = sector.r;\n    var r0 = sector.r0;\n    var middleR = (r + r0) / 2;\n    var startAngle = sector.startAngle;\n    var endAngle = sector.endAngle;\n    var middleAngle = (startAngle + endAngle) / 2;\n    var extraDist = isRoundCap ? Math.abs(r - r0) / 2 : 0;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin; // base position: top-left\n\n    var x = cx + r * mathCos(startAngle);\n    var y = cy + r * mathSin(startAngle);\n    var textAlign = 'left';\n    var textVerticalAlign = 'top';\n\n    switch (mappedSectorPosition) {\n      case 'startArc':\n        x = cx + (r0 - distance) * mathCos(middleAngle);\n        y = cy + (r0 - distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'top';\n        break;\n\n      case 'insideStartArc':\n        x = cx + (r0 + distance) * mathCos(middleAngle);\n        y = cy + (r0 + distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        break;\n\n      case 'startAngle':\n        x = cx + middleR * mathCos(startAngle) + adjustAngleDistanceX(startAngle, distance + extraDist, false);\n        y = cy + middleR * mathSin(startAngle) + adjustAngleDistanceY(startAngle, distance + extraDist, false);\n        textAlign = 'right';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'insideStartAngle':\n        x = cx + middleR * mathCos(startAngle) + adjustAngleDistanceX(startAngle, -distance + extraDist, false);\n        y = cy + middleR * mathSin(startAngle) + adjustAngleDistanceY(startAngle, -distance + extraDist, false);\n        textAlign = 'left';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'middle':\n        x = cx + middleR * mathCos(middleAngle);\n        y = cy + middleR * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'endArc':\n        x = cx + (r + distance) * mathCos(middleAngle);\n        y = cy + (r + distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        break;\n\n      case 'insideEndArc':\n        x = cx + (r - distance) * mathCos(middleAngle);\n        y = cy + (r - distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'top';\n        break;\n\n      case 'endAngle':\n        x = cx + middleR * mathCos(endAngle) + adjustAngleDistanceX(endAngle, distance + extraDist, true);\n        y = cy + middleR * mathSin(endAngle) + adjustAngleDistanceY(endAngle, distance + extraDist, true);\n        textAlign = 'left';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'insideEndAngle':\n        x = cx + middleR * mathCos(endAngle) + adjustAngleDistanceX(endAngle, -distance + extraDist, true);\n        y = cy + middleR * mathSin(endAngle) + adjustAngleDistanceY(endAngle, -distance + extraDist, true);\n        textAlign = 'right';\n        textVerticalAlign = 'middle';\n        break;\n\n      default:\n        return calculateTextPosition(out, opts, boundingRect);\n    }\n\n    out = out || {};\n    out.x = x;\n    out.y = y;\n    out.align = textAlign;\n    out.verticalAlign = textVerticalAlign;\n    return out;\n  };\n}\nexport function setSectorTextRotation(sector, textPosition, positionMapping, rotateType) {\n  if (isNumber(rotateType)) {\n    // user-set rotation\n    sector.setTextConfig({\n      rotation: rotateType\n    });\n    return;\n  } else if (isArray(textPosition)) {\n    // user-set position, use 0 as auto rotation\n    sector.setTextConfig({\n      rotation: 0\n    });\n    return;\n  }\n\n  var shape = sector.shape;\n  var startAngle = shape.clockwise ? shape.startAngle : shape.endAngle;\n  var endAngle = shape.clockwise ? shape.endAngle : shape.startAngle;\n  var middleAngle = (startAngle + endAngle) / 2;\n  var anchorAngle;\n  var mappedSectorPosition = positionMapping(textPosition);\n\n  switch (mappedSectorPosition) {\n    case 'startArc':\n    case 'insideStartArc':\n    case 'middle':\n    case 'insideEndArc':\n    case 'endArc':\n      anchorAngle = middleAngle;\n      break;\n\n    case 'startAngle':\n    case 'insideStartAngle':\n      anchorAngle = startAngle;\n      break;\n\n    case 'endAngle':\n    case 'insideEndAngle':\n      anchorAngle = endAngle;\n      break;\n\n    default:\n      sector.setTextConfig({\n        rotation: 0\n      });\n      return;\n  }\n\n  var rotate = Math.PI * 1.5 - anchorAngle;\n  /**\n   * TODO: labels with rotate > Math.PI / 2 should be rotate another\n   * half round flipped to increase readability. However, only middle\n   * position supports this for now, because in other positions, the\n   * anchor point is not at the center of the text, so the positions\n   * after rotating is not as expected.\n   */\n\n  if (mappedSectorPosition === 'middle' && rotate > Math.PI / 2 && rotate < Math.PI * 1.5) {\n    rotate -= Math.PI;\n  }\n\n  sector.setTextConfig({\n    rotation: rotate\n  });\n}\n\nfunction adjustAngleDistanceX(angle, distance, isEnd) {\n  return distance * Math.sin(angle) * (isEnd ? -1 : 1);\n}\n\nfunction adjustAngleDistanceY(angle, distance, isEnd) {\n  return distance * Math.cos(angle) * (isEnd ? 1 : -1);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}