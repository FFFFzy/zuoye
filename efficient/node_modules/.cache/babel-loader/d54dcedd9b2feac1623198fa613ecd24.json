{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar _number = require(\"../util/number.js\");\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n */\n\nvar Axis =\n/** @class */\nfunction () {\n  function Axis(dim, scale, extent) {\n    this.onBand = false;\n    this.inverse = false;\n    this.dim = dim;\n    this.scale = scale;\n    this._extent = extent || [0, 0];\n  }\n  /**\n   * If axis extent contain given coord\n   */\n\n\n  Axis.prototype.contain = function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  };\n  /**\n   * If axis extent contain given data\n   */\n\n\n  Axis.prototype.containData = function (data) {\n    return this.scale.contain(data);\n  };\n  /**\n   * Get coord extent.\n   */\n\n\n  Axis.prototype.getExtent = function () {\n    return this._extent.slice();\n  };\n  /**\n   * Get precision used for formatting\n   */\n\n\n  Axis.prototype.getPixelPrecision = function (dataExtent) {\n    return (0, _number.getPixelPrecision)(dataExtent || this.scale.getExtent(), this._extent);\n  };\n  /**\n   * Set coord extent\n   */\n\n\n  Axis.prototype.setExtent = function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  };\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   */\n\n\n  Axis.prototype.dataToCoord = function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return (0, _number.linearMap)(data, NORMALIZED_EXTENT, extent, clamp);\n  };\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   */\n\n\n  Axis.prototype.coordToData = function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = (0, _number.linearMap)(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  };\n  /**\n   * Convert pixel point to data in axis\n   */\n\n\n  Axis.prototype.pointToData = function (point, clamp) {\n    // Should be implemented in derived class if necessary.\n    return;\n  };\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param opt.tickModel default: axis.model.getModel('axisTick')\n   * @param opt.clamp If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   */\n\n\n  Axis.prototype.getTicksCoords = function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = (0, _axisTickLabelBuilder.createAxisTicks)(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = (0, _util.map)(ticks, function (tickVal) {\n      return {\n        coord: this.dataToCoord(this.scale.type === 'ordinal' ? this.scale.getRawOrdinalNumber(tickVal) : tickVal),\n        tickValue: tickVal\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  };\n\n  Axis.prototype.getMinorTicksCoords = function () {\n    if (this.scale.type === 'ordinal') {\n      // Category axis doesn't support minor ticks\n      return [];\n    }\n\n    var minorTickModel = this.model.getModel('minorTick');\n    var splitNumber = minorTickModel.get('splitNumber'); // Protection.\n\n    if (!(splitNumber > 0 && splitNumber < 100)) {\n      splitNumber = 5;\n    }\n\n    var minorTicks = this.scale.getMinorTicks(splitNumber);\n    var minorTicksCoords = (0, _util.map)(minorTicks, function (minorTicksGroup) {\n      return (0, _util.map)(minorTicksGroup, function (minorTick) {\n        return {\n          coord: this.dataToCoord(minorTick),\n          tickValue: minorTick\n        };\n      }, this);\n    }, this);\n    return minorTicksCoords;\n  };\n\n  Axis.prototype.getViewLabels = function () {\n    return (0, _axisTickLabelBuilder.createAxisLabels)(this).labels;\n  };\n\n  Axis.prototype.getLabelModel = function () {\n    return this.model.getModel('axisLabel');\n  };\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   */\n\n\n  Axis.prototype.getTickModel = function () {\n    return this.model.getModel('axisTick');\n  };\n  /**\n   * Get width of band\n   */\n\n\n  Axis.prototype.getBandWidth = function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  };\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return Auto interval for cateogry axis tick and label\n   */\n\n\n  Axis.prototype.calculateCategoryInterval = function () {\n    return (0, _axisTickLabelBuilder.calculateCategoryInterval)(this);\n  };\n\n  return Axis;\n}();\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n  var diffSize;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var crossLen = ticksCoords[ticksLen - 1].tickValue - ticksCoords[0].tickValue;\n    var shift_1 = (ticksCoords[ticksLen - 1].coord - ticksCoords[0].coord) / crossLen;\n    (0, _util.each)(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift_1 / 2;\n    });\n    var dataExtent = axis.scale.getExtent();\n    diffSize = 1 + dataExtent[1] - ticksCoords[ticksLen - 1].tickValue;\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift_1 * diffSize\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1]; // Handling clamp.\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    // Avoid rounding error cause calculated tick coord different with extent.\n    // It may cause an extra unecessary tick added.\n    a = (0, _number.round)(a);\n    b = (0, _number.round)(b);\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nexports.default = _default;","map":{"version":3,"names":["NORMALIZED_EXTENT","Axis","dim","scale","extent","onBand","inverse","_extent","prototype","contain","coord","min","Math","max","containData","data","getExtent","slice","getPixelPrecision","dataExtent","setExtent","start","end","dataToCoord","clamp","normalize","type","fixExtentWithBands","count","linearMap","coordToData","t","pointToData","point","getTicksCoords","opt","tickModel","getTickModel","result","createAxisTicks","ticks","ticksCoords","map","tickVal","getRawOrdinalNumber","tickValue","alignWithLabel","get","fixOnBandTicksCoords","getMinorTicksCoords","minorTickModel","model","getModel","splitNumber","minorTicks","getMinorTicks","minorTicksCoords","minorTicksGroup","minorTick","getViewLabels","createAxisLabels","labels","getLabelModel","getBandWidth","axisExtent","len","size","abs","calculateCategoryInterval","nTick","margin","axis","ticksLen","length","last","diffSize","crossLen","shift_1","each","ticksItem","push","littleThan","shift","unshift","pop","a","b","round"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/coord/Axis.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each, map } from 'zrender/lib/core/util.js';\nimport { linearMap, getPixelPrecision, round } from '../util/number.js';\nimport { createAxisTicks, createAxisLabels, calculateCategoryInterval } from './axisTickLabelBuilder.js';\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n */\n\nvar Axis =\n/** @class */\nfunction () {\n  function Axis(dim, scale, extent) {\n    this.onBand = false;\n    this.inverse = false;\n    this.dim = dim;\n    this.scale = scale;\n    this._extent = extent || [0, 0];\n  }\n  /**\n   * If axis extent contain given coord\n   */\n\n\n  Axis.prototype.contain = function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  };\n  /**\n   * If axis extent contain given data\n   */\n\n\n  Axis.prototype.containData = function (data) {\n    return this.scale.contain(data);\n  };\n  /**\n   * Get coord extent.\n   */\n\n\n  Axis.prototype.getExtent = function () {\n    return this._extent.slice();\n  };\n  /**\n   * Get precision used for formatting\n   */\n\n\n  Axis.prototype.getPixelPrecision = function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  };\n  /**\n   * Set coord extent\n   */\n\n\n  Axis.prototype.setExtent = function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  };\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   */\n\n\n  Axis.prototype.dataToCoord = function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  };\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   */\n\n\n  Axis.prototype.coordToData = function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  };\n  /**\n   * Convert pixel point to data in axis\n   */\n\n\n  Axis.prototype.pointToData = function (point, clamp) {\n    // Should be implemented in derived class if necessary.\n    return;\n  };\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param opt.tickModel default: axis.model.getModel('axisTick')\n   * @param opt.clamp If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   */\n\n\n  Axis.prototype.getTicksCoords = function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickVal) {\n      return {\n        coord: this.dataToCoord(this.scale.type === 'ordinal' ? this.scale.getRawOrdinalNumber(tickVal) : tickVal),\n        tickValue: tickVal\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  };\n\n  Axis.prototype.getMinorTicksCoords = function () {\n    if (this.scale.type === 'ordinal') {\n      // Category axis doesn't support minor ticks\n      return [];\n    }\n\n    var minorTickModel = this.model.getModel('minorTick');\n    var splitNumber = minorTickModel.get('splitNumber'); // Protection.\n\n    if (!(splitNumber > 0 && splitNumber < 100)) {\n      splitNumber = 5;\n    }\n\n    var minorTicks = this.scale.getMinorTicks(splitNumber);\n    var minorTicksCoords = map(minorTicks, function (minorTicksGroup) {\n      return map(minorTicksGroup, function (minorTick) {\n        return {\n          coord: this.dataToCoord(minorTick),\n          tickValue: minorTick\n        };\n      }, this);\n    }, this);\n    return minorTicksCoords;\n  };\n\n  Axis.prototype.getViewLabels = function () {\n    return createAxisLabels(this).labels;\n  };\n\n  Axis.prototype.getLabelModel = function () {\n    return this.model.getModel('axisLabel');\n  };\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   */\n\n\n  Axis.prototype.getTickModel = function () {\n    return this.model.getModel('axisTick');\n  };\n  /**\n   * Get width of band\n   */\n\n\n  Axis.prototype.getBandWidth = function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  };\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return Auto interval for cateogry axis tick and label\n   */\n\n\n  Axis.prototype.calculateCategoryInterval = function () {\n    return calculateCategoryInterval(this);\n  };\n\n  return Axis;\n}();\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n  var diffSize;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var crossLen = ticksCoords[ticksLen - 1].tickValue - ticksCoords[0].tickValue;\n    var shift_1 = (ticksCoords[ticksLen - 1].coord - ticksCoords[0].coord) / crossLen;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift_1 / 2;\n    });\n    var dataExtent = axis.scale.getExtent();\n    diffSize = 1 + dataExtent[1] - ticksCoords[ticksLen - 1].tickValue;\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift_1 * diffSize\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1]; // Handling clamp.\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    // Avoid rounding error cause calculated tick coord different with extent.\n    // It may cause an extra unecessary tick added.\n    a = round(a);\n    b = round(b);\n    return inverse ? a > b : a < b;\n  }\n}\n\nexport default Axis;"],"mappings":"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"},"metadata":{},"sourceType":"script"}