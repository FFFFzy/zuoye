{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeViewBoxTransform = makeViewBoxTransform;\nexports.parseSVG = parseSVG;\nObject.defineProperty(exports, \"parseXML\", {\n  enumerable: true,\n  get: function () {\n    return _parseXML.parseXML;\n  }\n});\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar _Group = _interopRequireDefault(require(\"../graphic/Group.js\"));\n\nvar _Image = _interopRequireDefault(require(\"../graphic/Image.js\"));\n\nvar _Circle = _interopRequireDefault(require(\"../graphic/shape/Circle.js\"));\n\nvar _Rect = _interopRequireDefault(require(\"../graphic/shape/Rect.js\"));\n\nvar _Ellipse = _interopRequireDefault(require(\"../graphic/shape/Ellipse.js\"));\n\nvar _Line = _interopRequireDefault(require(\"../graphic/shape/Line.js\"));\n\nvar _Polygon = _interopRequireDefault(require(\"../graphic/shape/Polygon.js\"));\n\nvar _Polyline = _interopRequireDefault(require(\"../graphic/shape/Polyline.js\"));\n\nvar matrix = _interopRequireWildcard(require(\"../core/matrix.js\"));\n\nvar _path = require(\"./path.js\");\n\nvar _util = require(\"../core/util.js\");\n\nvar _LinearGradient = _interopRequireDefault(require(\"../graphic/LinearGradient.js\"));\n\nvar _RadialGradient = _interopRequireDefault(require(\"../graphic/RadialGradient.js\"));\n\nvar _TSpan = _interopRequireDefault(require(\"../graphic/TSpan.js\"));\n\nvar _parseXML = require(\"./parseXML.js\");\n\n;\nvar nodeParsers;\nvar INHERITABLE_STYLE_ATTRIBUTES_MAP = {\n  'fill': 'fill',\n  'stroke': 'stroke',\n  'stroke-width': 'lineWidth',\n  'opacity': 'opacity',\n  'fill-opacity': 'fillOpacity',\n  'stroke-opacity': 'strokeOpacity',\n  'stroke-dasharray': 'lineDash',\n  'stroke-dashoffset': 'lineDashOffset',\n  'stroke-linecap': 'lineCap',\n  'stroke-linejoin': 'lineJoin',\n  'stroke-miterlimit': 'miterLimit',\n  'font-family': 'fontFamily',\n  'font-size': 'fontSize',\n  'font-style': 'fontStyle',\n  'font-weight': 'fontWeight',\n  'text-anchor': 'textAlign',\n  'visibility': 'visibility',\n  'display': 'display'\n};\nvar INHERITABLE_STYLE_ATTRIBUTES_MAP_KEYS = (0, _util.keys)(INHERITABLE_STYLE_ATTRIBUTES_MAP);\nvar SELF_STYLE_ATTRIBUTES_MAP = {\n  'alignment-baseline': 'textBaseline',\n  'stop-color': 'stopColor'\n};\nvar SELF_STYLE_ATTRIBUTES_MAP_KEYS = (0, _util.keys)(SELF_STYLE_ATTRIBUTES_MAP);\n\nvar SVGParser = function () {\n  function SVGParser() {\n    this._defs = {};\n    this._root = null;\n  }\n\n  SVGParser.prototype.parse = function (xml, opt) {\n    opt = opt || {};\n    var svg = (0, _parseXML.parseXML)(xml);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!svg) {\n        throw new Error('Illegal svg');\n      }\n    }\n\n    this._defsUsePending = [];\n    var root = new _Group.default();\n    this._root = root;\n    var named = [];\n    var viewBox = svg.getAttribute('viewBox') || '';\n    var width = parseFloat(svg.getAttribute('width') || opt.width);\n    var height = parseFloat(svg.getAttribute('height') || opt.height);\n    isNaN(width) && (width = null);\n    isNaN(height) && (height = null);\n    parseAttributes(svg, root, null, true, false);\n    var child = svg.firstChild;\n\n    while (child) {\n      this._parseNode(child, root, named, null, false, false);\n\n      child = child.nextSibling;\n    }\n\n    applyDefs(this._defs, this._defsUsePending);\n    this._defsUsePending = [];\n    var viewBoxRect;\n    var viewBoxTransform;\n\n    if (viewBox) {\n      var viewBoxArr = splitNumberSequence(viewBox);\n\n      if (viewBoxArr.length >= 4) {\n        viewBoxRect = {\n          x: parseFloat(viewBoxArr[0] || 0),\n          y: parseFloat(viewBoxArr[1] || 0),\n          width: parseFloat(viewBoxArr[2]),\n          height: parseFloat(viewBoxArr[3])\n        };\n      }\n    }\n\n    if (viewBoxRect && width != null && height != null) {\n      viewBoxTransform = makeViewBoxTransform(viewBoxRect, {\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      });\n\n      if (!opt.ignoreViewBox) {\n        var elRoot = root;\n        root = new _Group.default();\n        root.add(elRoot);\n        elRoot.scaleX = elRoot.scaleY = viewBoxTransform.scale;\n        elRoot.x = viewBoxTransform.x;\n        elRoot.y = viewBoxTransform.y;\n      }\n    }\n\n    if (!opt.ignoreRootClip && width != null && height != null) {\n      root.setClipPath(new _Rect.default({\n        shape: {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        }\n      }));\n    }\n\n    return {\n      root: root,\n      width: width,\n      height: height,\n      viewBoxRect: viewBoxRect,\n      viewBoxTransform: viewBoxTransform,\n      named: named\n    };\n  };\n\n  SVGParser.prototype._parseNode = function (xmlNode, parentGroup, named, namedFrom, isInDefs, isInText) {\n    var nodeName = xmlNode.nodeName.toLowerCase();\n    var el;\n    var namedFromForSub = namedFrom;\n\n    if (nodeName === 'defs') {\n      isInDefs = true;\n    }\n\n    if (nodeName === 'text') {\n      isInText = true;\n    }\n\n    if (nodeName === 'defs' || nodeName === 'switch') {\n      el = parentGroup;\n    } else {\n      if (!isInDefs) {\n        var parser_1 = nodeParsers[nodeName];\n\n        if (parser_1 && (0, _util.hasOwn)(nodeParsers, nodeName)) {\n          el = parser_1.call(this, xmlNode, parentGroup);\n          var nameAttr = xmlNode.getAttribute('name');\n\n          if (nameAttr) {\n            var newNamed = {\n              name: nameAttr,\n              namedFrom: null,\n              svgNodeTagLower: nodeName,\n              el: el\n            };\n            named.push(newNamed);\n\n            if (nodeName === 'g') {\n              namedFromForSub = newNamed;\n            }\n          } else if (namedFrom) {\n            named.push({\n              name: namedFrom.name,\n              namedFrom: namedFrom,\n              svgNodeTagLower: nodeName,\n              el: el\n            });\n          }\n\n          parentGroup.add(el);\n        }\n      }\n\n      var parser = paintServerParsers[nodeName];\n\n      if (parser && (0, _util.hasOwn)(paintServerParsers, nodeName)) {\n        var def = parser.call(this, xmlNode);\n        var id = xmlNode.getAttribute('id');\n\n        if (id) {\n          this._defs[id] = def;\n        }\n      }\n    }\n\n    if (el && el.isGroup) {\n      var child = xmlNode.firstChild;\n\n      while (child) {\n        if (child.nodeType === 1) {\n          this._parseNode(child, el, named, namedFromForSub, isInDefs, isInText);\n        } else if (child.nodeType === 3 && isInText) {\n          this._parseText(child, el);\n        }\n\n        child = child.nextSibling;\n      }\n    }\n  };\n\n  SVGParser.prototype._parseText = function (xmlNode, parentGroup) {\n    var text = new _TSpan.default({\n      style: {\n        text: xmlNode.textContent\n      },\n      silent: true,\n      x: this._textX || 0,\n      y: this._textY || 0\n    });\n    inheritStyle(parentGroup, text);\n    parseAttributes(xmlNode, text, this._defsUsePending, false, false);\n    applyTextAlignment(text, parentGroup);\n    var textStyle = text.style;\n    var fontSize = textStyle.fontSize;\n\n    if (fontSize && fontSize < 9) {\n      textStyle.fontSize = 9;\n      text.scaleX *= fontSize / 9;\n      text.scaleY *= fontSize / 9;\n    }\n\n    var font = (textStyle.fontSize || textStyle.fontFamily) && [textStyle.fontStyle, textStyle.fontWeight, (textStyle.fontSize || 12) + 'px', textStyle.fontFamily || 'sans-serif'].join(' ');\n    textStyle.font = font;\n    var rect = text.getBoundingRect();\n    this._textX += rect.width;\n    parentGroup.add(text);\n    return text;\n  };\n\n  SVGParser.internalField = function () {\n    nodeParsers = {\n      'g': function (xmlNode, parentGroup) {\n        var g = new _Group.default();\n        inheritStyle(parentGroup, g);\n        parseAttributes(xmlNode, g, this._defsUsePending, false, false);\n        return g;\n      },\n      'rect': function (xmlNode, parentGroup) {\n        var rect = new _Rect.default();\n        inheritStyle(parentGroup, rect);\n        parseAttributes(xmlNode, rect, this._defsUsePending, false, false);\n        rect.setShape({\n          x: parseFloat(xmlNode.getAttribute('x') || '0'),\n          y: parseFloat(xmlNode.getAttribute('y') || '0'),\n          width: parseFloat(xmlNode.getAttribute('width') || '0'),\n          height: parseFloat(xmlNode.getAttribute('height') || '0')\n        });\n        rect.silent = true;\n        return rect;\n      },\n      'circle': function (xmlNode, parentGroup) {\n        var circle = new _Circle.default();\n        inheritStyle(parentGroup, circle);\n        parseAttributes(xmlNode, circle, this._defsUsePending, false, false);\n        circle.setShape({\n          cx: parseFloat(xmlNode.getAttribute('cx') || '0'),\n          cy: parseFloat(xmlNode.getAttribute('cy') || '0'),\n          r: parseFloat(xmlNode.getAttribute('r') || '0')\n        });\n        circle.silent = true;\n        return circle;\n      },\n      'line': function (xmlNode, parentGroup) {\n        var line = new _Line.default();\n        inheritStyle(parentGroup, line);\n        parseAttributes(xmlNode, line, this._defsUsePending, false, false);\n        line.setShape({\n          x1: parseFloat(xmlNode.getAttribute('x1') || '0'),\n          y1: parseFloat(xmlNode.getAttribute('y1') || '0'),\n          x2: parseFloat(xmlNode.getAttribute('x2') || '0'),\n          y2: parseFloat(xmlNode.getAttribute('y2') || '0')\n        });\n        line.silent = true;\n        return line;\n      },\n      'ellipse': function (xmlNode, parentGroup) {\n        var ellipse = new _Ellipse.default();\n        inheritStyle(parentGroup, ellipse);\n        parseAttributes(xmlNode, ellipse, this._defsUsePending, false, false);\n        ellipse.setShape({\n          cx: parseFloat(xmlNode.getAttribute('cx') || '0'),\n          cy: parseFloat(xmlNode.getAttribute('cy') || '0'),\n          rx: parseFloat(xmlNode.getAttribute('rx') || '0'),\n          ry: parseFloat(xmlNode.getAttribute('ry') || '0')\n        });\n        ellipse.silent = true;\n        return ellipse;\n      },\n      'polygon': function (xmlNode, parentGroup) {\n        var pointsStr = xmlNode.getAttribute('points');\n        var pointsArr;\n\n        if (pointsStr) {\n          pointsArr = parsePoints(pointsStr);\n        }\n\n        var polygon = new _Polygon.default({\n          shape: {\n            points: pointsArr || []\n          },\n          silent: true\n        });\n        inheritStyle(parentGroup, polygon);\n        parseAttributes(xmlNode, polygon, this._defsUsePending, false, false);\n        return polygon;\n      },\n      'polyline': function (xmlNode, parentGroup) {\n        var pointsStr = xmlNode.getAttribute('points');\n        var pointsArr;\n\n        if (pointsStr) {\n          pointsArr = parsePoints(pointsStr);\n        }\n\n        var polyline = new _Polyline.default({\n          shape: {\n            points: pointsArr || []\n          },\n          silent: true\n        });\n        inheritStyle(parentGroup, polyline);\n        parseAttributes(xmlNode, polyline, this._defsUsePending, false, false);\n        return polyline;\n      },\n      'image': function (xmlNode, parentGroup) {\n        var img = new _Image.default();\n        inheritStyle(parentGroup, img);\n        parseAttributes(xmlNode, img, this._defsUsePending, false, false);\n        img.setStyle({\n          image: xmlNode.getAttribute('xlink:href') || xmlNode.getAttribute('href'),\n          x: +xmlNode.getAttribute('x'),\n          y: +xmlNode.getAttribute('y'),\n          width: +xmlNode.getAttribute('width'),\n          height: +xmlNode.getAttribute('height')\n        });\n        img.silent = true;\n        return img;\n      },\n      'text': function (xmlNode, parentGroup) {\n        var x = xmlNode.getAttribute('x') || '0';\n        var y = xmlNode.getAttribute('y') || '0';\n        var dx = xmlNode.getAttribute('dx') || '0';\n        var dy = xmlNode.getAttribute('dy') || '0';\n        this._textX = parseFloat(x) + parseFloat(dx);\n        this._textY = parseFloat(y) + parseFloat(dy);\n        var g = new _Group.default();\n        inheritStyle(parentGroup, g);\n        parseAttributes(xmlNode, g, this._defsUsePending, false, true);\n        return g;\n      },\n      'tspan': function (xmlNode, parentGroup) {\n        var x = xmlNode.getAttribute('x');\n        var y = xmlNode.getAttribute('y');\n\n        if (x != null) {\n          this._textX = parseFloat(x);\n        }\n\n        if (y != null) {\n          this._textY = parseFloat(y);\n        }\n\n        var dx = xmlNode.getAttribute('dx') || '0';\n        var dy = xmlNode.getAttribute('dy') || '0';\n        var g = new _Group.default();\n        inheritStyle(parentGroup, g);\n        parseAttributes(xmlNode, g, this._defsUsePending, false, true);\n        this._textX += parseFloat(dx);\n        this._textY += parseFloat(dy);\n        return g;\n      },\n      'path': function (xmlNode, parentGroup) {\n        var d = xmlNode.getAttribute('d') || '';\n        var path = (0, _path.createFromString)(d);\n        inheritStyle(parentGroup, path);\n        parseAttributes(xmlNode, path, this._defsUsePending, false, false);\n        path.silent = true;\n        return path;\n      }\n    };\n  }();\n\n  return SVGParser;\n}();\n\nvar paintServerParsers = {\n  'lineargradient': function (xmlNode) {\n    var x1 = parseInt(xmlNode.getAttribute('x1') || '0', 10);\n    var y1 = parseInt(xmlNode.getAttribute('y1') || '0', 10);\n    var x2 = parseInt(xmlNode.getAttribute('x2') || '10', 10);\n    var y2 = parseInt(xmlNode.getAttribute('y2') || '0', 10);\n    var gradient = new _LinearGradient.default(x1, y1, x2, y2);\n    parsePaintServerUnit(xmlNode, gradient);\n    parseGradientColorStops(xmlNode, gradient);\n    return gradient;\n  },\n  'radialgradient': function (xmlNode) {\n    var cx = parseInt(xmlNode.getAttribute('cx') || '0', 10);\n    var cy = parseInt(xmlNode.getAttribute('cy') || '0', 10);\n    var r = parseInt(xmlNode.getAttribute('r') || '0', 10);\n    var gradient = new _RadialGradient.default(cx, cy, r);\n    parsePaintServerUnit(xmlNode, gradient);\n    parseGradientColorStops(xmlNode, gradient);\n    return gradient;\n  }\n};\n\nfunction parsePaintServerUnit(xmlNode, gradient) {\n  var gradientUnits = xmlNode.getAttribute('gradientUnits');\n\n  if (gradientUnits === 'userSpaceOnUse') {\n    gradient.global = true;\n  }\n}\n\nfunction parseGradientColorStops(xmlNode, gradient) {\n  var stop = xmlNode.firstChild;\n\n  while (stop) {\n    if (stop.nodeType === 1 && stop.nodeName.toLocaleLowerCase() === 'stop') {\n      var offsetStr = stop.getAttribute('offset');\n      var offset = void 0;\n\n      if (offsetStr && offsetStr.indexOf('%') > 0) {\n        offset = parseInt(offsetStr, 10) / 100;\n      } else if (offsetStr) {\n        offset = parseFloat(offsetStr);\n      } else {\n        offset = 0;\n      }\n\n      var styleVals = {};\n      parseInlineStyle(stop, styleVals, styleVals);\n      var stopColor = styleVals.stopColor || stop.getAttribute('stop-color') || '#000000';\n      gradient.colorStops.push({\n        offset: offset,\n        color: stopColor\n      });\n    }\n\n    stop = stop.nextSibling;\n  }\n}\n\nfunction inheritStyle(parent, child) {\n  if (parent && parent.__inheritedStyle) {\n    if (!child.__inheritedStyle) {\n      child.__inheritedStyle = {};\n    }\n\n    (0, _util.defaults)(child.__inheritedStyle, parent.__inheritedStyle);\n  }\n}\n\nfunction parsePoints(pointsString) {\n  var list = splitNumberSequence(pointsString);\n  var points = [];\n\n  for (var i = 0; i < list.length; i += 2) {\n    var x = parseFloat(list[i]);\n    var y = parseFloat(list[i + 1]);\n    points.push([x, y]);\n  }\n\n  return points;\n}\n\nfunction parseAttributes(xmlNode, el, defsUsePending, onlyInlineStyle, isTextGroup) {\n  var disp = el;\n  var inheritedStyle = disp.__inheritedStyle = disp.__inheritedStyle || {};\n  var selfStyle = {};\n\n  if (xmlNode.nodeType === 1) {\n    parseTransformAttribute(xmlNode, el);\n    parseInlineStyle(xmlNode, inheritedStyle, selfStyle);\n\n    if (!onlyInlineStyle) {\n      parseAttributeStyle(xmlNode, inheritedStyle, selfStyle);\n    }\n  }\n\n  disp.style = disp.style || {};\n\n  if (inheritedStyle.fill != null) {\n    disp.style.fill = getFillStrokeStyle(disp, 'fill', inheritedStyle.fill, defsUsePending);\n  }\n\n  if (inheritedStyle.stroke != null) {\n    disp.style.stroke = getFillStrokeStyle(disp, 'stroke', inheritedStyle.stroke, defsUsePending);\n  }\n\n  (0, _util.each)(['lineWidth', 'opacity', 'fillOpacity', 'strokeOpacity', 'miterLimit', 'fontSize'], function (propName) {\n    if (inheritedStyle[propName] != null) {\n      disp.style[propName] = parseFloat(inheritedStyle[propName]);\n    }\n  });\n  (0, _util.each)(['lineDashOffset', 'lineCap', 'lineJoin', 'fontWeight', 'fontFamily', 'fontStyle', 'textAlign'], function (propName) {\n    if (inheritedStyle[propName] != null) {\n      disp.style[propName] = inheritedStyle[propName];\n    }\n  });\n\n  if (isTextGroup) {\n    disp.__selfStyle = selfStyle;\n  }\n\n  if (inheritedStyle.lineDash) {\n    disp.style.lineDash = (0, _util.map)(splitNumberSequence(inheritedStyle.lineDash), function (str) {\n      return parseFloat(str);\n    });\n  }\n\n  if (inheritedStyle.visibility === 'hidden' || inheritedStyle.visibility === 'collapse') {\n    disp.invisible = true;\n  }\n\n  if (inheritedStyle.display === 'none') {\n    disp.ignore = true;\n  }\n}\n\nfunction applyTextAlignment(text, parentGroup) {\n  var parentSelfStyle = parentGroup.__selfStyle;\n\n  if (parentSelfStyle) {\n    var textBaseline = parentSelfStyle.textBaseline;\n    var zrTextBaseline = textBaseline;\n\n    if (!textBaseline || textBaseline === 'auto') {\n      zrTextBaseline = 'alphabetic';\n    } else if (textBaseline === 'baseline') {\n      zrTextBaseline = 'alphabetic';\n    } else if (textBaseline === 'before-edge' || textBaseline === 'text-before-edge') {\n      zrTextBaseline = 'top';\n    } else if (textBaseline === 'after-edge' || textBaseline === 'text-after-edge') {\n      zrTextBaseline = 'bottom';\n    } else if (textBaseline === 'central' || textBaseline === 'mathematical') {\n      zrTextBaseline = 'middle';\n    }\n\n    text.style.textBaseline = zrTextBaseline;\n  }\n\n  var parentInheritedStyle = parentGroup.__inheritedStyle;\n\n  if (parentInheritedStyle) {\n    var textAlign = parentInheritedStyle.textAlign;\n    var zrTextAlign = textAlign;\n\n    if (textAlign) {\n      if (textAlign === 'middle') {\n        zrTextAlign = 'center';\n      }\n\n      text.style.textAlign = zrTextAlign;\n    }\n  }\n}\n\nvar urlRegex = /^url\\(\\s*#(.*?)\\)/;\n\nfunction getFillStrokeStyle(el, method, str, defsUsePending) {\n  var urlMatch = str && str.match(urlRegex);\n\n  if (urlMatch) {\n    var url = (0, _util.trim)(urlMatch[1]);\n    defsUsePending.push([el, method, url]);\n    return;\n  }\n\n  if (str === 'none') {\n    str = null;\n  }\n\n  return str;\n}\n\nfunction applyDefs(defs, defsUsePending) {\n  for (var i = 0; i < defsUsePending.length; i++) {\n    var item = defsUsePending[i];\n    item[0].style[item[1]] = defs[item[2]];\n  }\n}\n\nvar numberReg = /-?([0-9]*\\.)?[0-9]+([eE]-?[0-9]+)?/g;\n\nfunction splitNumberSequence(rawStr) {\n  return rawStr.match(numberReg) || [];\n}\n\nvar transformRegex = /(translate|scale|rotate|skewX|skewY|matrix)\\(([\\-\\s0-9\\.eE,]*)\\)/g;\nvar DEGREE_TO_ANGLE = Math.PI / 180;\n\nfunction parseTransformAttribute(xmlNode, node) {\n  var transform = xmlNode.getAttribute('transform');\n\n  if (transform) {\n    transform = transform.replace(/,/g, ' ');\n    var transformOps_1 = [];\n    var mt = null;\n    transform.replace(transformRegex, function (str, type, value) {\n      transformOps_1.push(type, value);\n      return '';\n    });\n\n    for (var i = transformOps_1.length - 1; i > 0; i -= 2) {\n      var value = transformOps_1[i];\n      var type = transformOps_1[i - 1];\n      var valueArr = splitNumberSequence(value);\n      mt = mt || matrix.create();\n\n      switch (type) {\n        case 'translate':\n          matrix.translate(mt, mt, [parseFloat(valueArr[0]), parseFloat(valueArr[1] || '0')]);\n          break;\n\n        case 'scale':\n          matrix.scale(mt, mt, [parseFloat(valueArr[0]), parseFloat(valueArr[1] || valueArr[0])]);\n          break;\n\n        case 'rotate':\n          matrix.rotate(mt, mt, -parseFloat(valueArr[0]) * DEGREE_TO_ANGLE);\n          break;\n\n        case 'skewX':\n          var sx = Math.tan(parseFloat(valueArr[0]) * DEGREE_TO_ANGLE);\n          matrix.mul(mt, [1, 0, sx, 1, 0, 0], mt);\n          break;\n\n        case 'skewY':\n          var sy = Math.tan(parseFloat(valueArr[0]) * DEGREE_TO_ANGLE);\n          matrix.mul(mt, [1, sy, 0, 1, 0, 0], mt);\n          break;\n\n        case 'matrix':\n          mt[0] = parseFloat(valueArr[0]);\n          mt[1] = parseFloat(valueArr[1]);\n          mt[2] = parseFloat(valueArr[2]);\n          mt[3] = parseFloat(valueArr[3]);\n          mt[4] = parseFloat(valueArr[4]);\n          mt[5] = parseFloat(valueArr[5]);\n          break;\n      }\n    }\n\n    node.setLocalTransform(mt);\n  }\n}\n\nvar styleRegex = /([^\\s:;]+)\\s*:\\s*([^:;]+)/g;\n\nfunction parseInlineStyle(xmlNode, inheritableStyleResult, selfStyleResult) {\n  var style = xmlNode.getAttribute('style');\n\n  if (!style) {\n    return;\n  }\n\n  styleRegex.lastIndex = 0;\n  var styleRegResult;\n\n  while ((styleRegResult = styleRegex.exec(style)) != null) {\n    var svgStlAttr = styleRegResult[1];\n    var zrInheritableStlAttr = (0, _util.hasOwn)(INHERITABLE_STYLE_ATTRIBUTES_MAP, svgStlAttr) ? INHERITABLE_STYLE_ATTRIBUTES_MAP[svgStlAttr] : null;\n\n    if (zrInheritableStlAttr) {\n      inheritableStyleResult[zrInheritableStlAttr] = styleRegResult[2];\n    }\n\n    var zrSelfStlAttr = (0, _util.hasOwn)(SELF_STYLE_ATTRIBUTES_MAP, svgStlAttr) ? SELF_STYLE_ATTRIBUTES_MAP[svgStlAttr] : null;\n\n    if (zrSelfStlAttr) {\n      selfStyleResult[zrSelfStlAttr] = styleRegResult[2];\n    }\n  }\n}\n\nfunction parseAttributeStyle(xmlNode, inheritableStyleResult, selfStyleResult) {\n  for (var i = 0; i < INHERITABLE_STYLE_ATTRIBUTES_MAP_KEYS.length; i++) {\n    var svgAttrName = INHERITABLE_STYLE_ATTRIBUTES_MAP_KEYS[i];\n    var attrValue = xmlNode.getAttribute(svgAttrName);\n\n    if (attrValue != null) {\n      inheritableStyleResult[INHERITABLE_STYLE_ATTRIBUTES_MAP[svgAttrName]] = attrValue;\n    }\n  }\n\n  for (var i = 0; i < SELF_STYLE_ATTRIBUTES_MAP_KEYS.length; i++) {\n    var svgAttrName = SELF_STYLE_ATTRIBUTES_MAP_KEYS[i];\n    var attrValue = xmlNode.getAttribute(svgAttrName);\n\n    if (attrValue != null) {\n      selfStyleResult[SELF_STYLE_ATTRIBUTES_MAP[svgAttrName]] = attrValue;\n    }\n  }\n}\n\nfunction makeViewBoxTransform(viewBoxRect, boundingRect) {\n  var scaleX = boundingRect.width / viewBoxRect.width;\n  var scaleY = boundingRect.height / viewBoxRect.height;\n  var scale = Math.min(scaleX, scaleY);\n  return {\n    scale: scale,\n    x: -(viewBoxRect.x + viewBoxRect.width / 2) * scale + (boundingRect.x + boundingRect.width / 2),\n    y: -(viewBoxRect.y + viewBoxRect.height / 2) * scale + (boundingRect.y + boundingRect.height / 2)\n  };\n}\n\nfunction parseSVG(xml, opt) {\n  var parser = new SVGParser();\n  return parser.parse(xml, opt);\n}","map":{"version":3,"names":["nodeParsers","INHERITABLE_STYLE_ATTRIBUTES_MAP","INHERITABLE_STYLE_ATTRIBUTES_MAP_KEYS","keys","SELF_STYLE_ATTRIBUTES_MAP","SELF_STYLE_ATTRIBUTES_MAP_KEYS","SVGParser","_defs","_root","prototype","parse","xml","opt","svg","parseXML","process","env","NODE_ENV","Error","_defsUsePending","root","Group","named","viewBox","getAttribute","width","parseFloat","height","isNaN","parseAttributes","child","firstChild","_parseNode","nextSibling","applyDefs","viewBoxRect","viewBoxTransform","viewBoxArr","splitNumberSequence","length","x","y","makeViewBoxTransform","ignoreViewBox","elRoot","add","scaleX","scaleY","scale","ignoreRootClip","setClipPath","Rect","shape","xmlNode","parentGroup","namedFrom","isInDefs","isInText","nodeName","toLowerCase","el","namedFromForSub","parser_1","hasOwn","call","nameAttr","newNamed","name","svgNodeTagLower","push","parser","paintServerParsers","def","id","isGroup","nodeType","_parseText","text","TSpan","style","textContent","silent","_textX","_textY","inheritStyle","applyTextAlignment","textStyle","fontSize","font","fontFamily","fontStyle","fontWeight","join","rect","getBoundingRect","internalField","g","setShape","circle","Circle","cx","cy","r","line","Line","x1","y1","x2","y2","ellipse","Ellipse","rx","ry","pointsStr","pointsArr","parsePoints","polygon","Polygon","points","polyline","Polyline","img","ZRImage","setStyle","image","dx","dy","d","path","createFromString","parseInt","gradient","LinearGradient","parsePaintServerUnit","parseGradientColorStops","RadialGradient","gradientUnits","global","stop","toLocaleLowerCase","offsetStr","offset","indexOf","styleVals","parseInlineStyle","stopColor","colorStops","color","parent","__inheritedStyle","defaults","pointsString","list","i","defsUsePending","onlyInlineStyle","isTextGroup","disp","inheritedStyle","selfStyle","parseTransformAttribute","parseAttributeStyle","fill","getFillStrokeStyle","stroke","each","propName","__selfStyle","lineDash","map","str","visibility","invisible","display","ignore","parentSelfStyle","textBaseline","zrTextBaseline","parentInheritedStyle","textAlign","zrTextAlign","urlRegex","method","urlMatch","match","url","trim","defs","item","numberReg","rawStr","transformRegex","DEGREE_TO_ANGLE","Math","PI","node","transform","replace","transformOps_1","mt","type","value","valueArr","matrix","create","translate","rotate","sx","tan","mul","sy","setLocalTransform","styleRegex","inheritableStyleResult","selfStyleResult","lastIndex","styleRegResult","exec","svgStlAttr","zrInheritableStlAttr","zrSelfStlAttr","svgAttrName","attrValue","boundingRect","min","parseSVG"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/zrender/lib/tool/parseSVG.js"],"sourcesContent":["import Group from '../graphic/Group.js';\nimport ZRImage from '../graphic/Image.js';\nimport Circle from '../graphic/shape/Circle.js';\nimport Rect from '../graphic/shape/Rect.js';\nimport Ellipse from '../graphic/shape/Ellipse.js';\nimport Line from '../graphic/shape/Line.js';\nimport Polygon from '../graphic/shape/Polygon.js';\nimport Polyline from '../graphic/shape/Polyline.js';\nimport * as matrix from '../core/matrix.js';\nimport { createFromString } from './path.js';\nimport { defaults, trim, each, map, keys, hasOwn } from '../core/util.js';\nimport LinearGradient from '../graphic/LinearGradient.js';\nimport RadialGradient from '../graphic/RadialGradient.js';\nimport TSpan from '../graphic/TSpan.js';\nimport { parseXML } from './parseXML.js';\n;\nvar nodeParsers;\nvar INHERITABLE_STYLE_ATTRIBUTES_MAP = {\n    'fill': 'fill',\n    'stroke': 'stroke',\n    'stroke-width': 'lineWidth',\n    'opacity': 'opacity',\n    'fill-opacity': 'fillOpacity',\n    'stroke-opacity': 'strokeOpacity',\n    'stroke-dasharray': 'lineDash',\n    'stroke-dashoffset': 'lineDashOffset',\n    'stroke-linecap': 'lineCap',\n    'stroke-linejoin': 'lineJoin',\n    'stroke-miterlimit': 'miterLimit',\n    'font-family': 'fontFamily',\n    'font-size': 'fontSize',\n    'font-style': 'fontStyle',\n    'font-weight': 'fontWeight',\n    'text-anchor': 'textAlign',\n    'visibility': 'visibility',\n    'display': 'display'\n};\nvar INHERITABLE_STYLE_ATTRIBUTES_MAP_KEYS = keys(INHERITABLE_STYLE_ATTRIBUTES_MAP);\nvar SELF_STYLE_ATTRIBUTES_MAP = {\n    'alignment-baseline': 'textBaseline',\n    'stop-color': 'stopColor'\n};\nvar SELF_STYLE_ATTRIBUTES_MAP_KEYS = keys(SELF_STYLE_ATTRIBUTES_MAP);\nvar SVGParser = (function () {\n    function SVGParser() {\n        this._defs = {};\n        this._root = null;\n    }\n    SVGParser.prototype.parse = function (xml, opt) {\n        opt = opt || {};\n        var svg = parseXML(xml);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!svg) {\n                throw new Error('Illegal svg');\n            }\n        }\n        this._defsUsePending = [];\n        var root = new Group();\n        this._root = root;\n        var named = [];\n        var viewBox = svg.getAttribute('viewBox') || '';\n        var width = parseFloat((svg.getAttribute('width') || opt.width));\n        var height = parseFloat((svg.getAttribute('height') || opt.height));\n        isNaN(width) && (width = null);\n        isNaN(height) && (height = null);\n        parseAttributes(svg, root, null, true, false);\n        var child = svg.firstChild;\n        while (child) {\n            this._parseNode(child, root, named, null, false, false);\n            child = child.nextSibling;\n        }\n        applyDefs(this._defs, this._defsUsePending);\n        this._defsUsePending = [];\n        var viewBoxRect;\n        var viewBoxTransform;\n        if (viewBox) {\n            var viewBoxArr = splitNumberSequence(viewBox);\n            if (viewBoxArr.length >= 4) {\n                viewBoxRect = {\n                    x: parseFloat((viewBoxArr[0] || 0)),\n                    y: parseFloat((viewBoxArr[1] || 0)),\n                    width: parseFloat(viewBoxArr[2]),\n                    height: parseFloat(viewBoxArr[3])\n                };\n            }\n        }\n        if (viewBoxRect && width != null && height != null) {\n            viewBoxTransform = makeViewBoxTransform(viewBoxRect, { x: 0, y: 0, width: width, height: height });\n            if (!opt.ignoreViewBox) {\n                var elRoot = root;\n                root = new Group();\n                root.add(elRoot);\n                elRoot.scaleX = elRoot.scaleY = viewBoxTransform.scale;\n                elRoot.x = viewBoxTransform.x;\n                elRoot.y = viewBoxTransform.y;\n            }\n        }\n        if (!opt.ignoreRootClip && width != null && height != null) {\n            root.setClipPath(new Rect({\n                shape: { x: 0, y: 0, width: width, height: height }\n            }));\n        }\n        return {\n            root: root,\n            width: width,\n            height: height,\n            viewBoxRect: viewBoxRect,\n            viewBoxTransform: viewBoxTransform,\n            named: named\n        };\n    };\n    SVGParser.prototype._parseNode = function (xmlNode, parentGroup, named, namedFrom, isInDefs, isInText) {\n        var nodeName = xmlNode.nodeName.toLowerCase();\n        var el;\n        var namedFromForSub = namedFrom;\n        if (nodeName === 'defs') {\n            isInDefs = true;\n        }\n        if (nodeName === 'text') {\n            isInText = true;\n        }\n        if (nodeName === 'defs' || nodeName === 'switch') {\n            el = parentGroup;\n        }\n        else {\n            if (!isInDefs) {\n                var parser_1 = nodeParsers[nodeName];\n                if (parser_1 && hasOwn(nodeParsers, nodeName)) {\n                    el = parser_1.call(this, xmlNode, parentGroup);\n                    var nameAttr = xmlNode.getAttribute('name');\n                    if (nameAttr) {\n                        var newNamed = {\n                            name: nameAttr,\n                            namedFrom: null,\n                            svgNodeTagLower: nodeName,\n                            el: el\n                        };\n                        named.push(newNamed);\n                        if (nodeName === 'g') {\n                            namedFromForSub = newNamed;\n                        }\n                    }\n                    else if (namedFrom) {\n                        named.push({\n                            name: namedFrom.name,\n                            namedFrom: namedFrom,\n                            svgNodeTagLower: nodeName,\n                            el: el\n                        });\n                    }\n                    parentGroup.add(el);\n                }\n            }\n            var parser = paintServerParsers[nodeName];\n            if (parser && hasOwn(paintServerParsers, nodeName)) {\n                var def = parser.call(this, xmlNode);\n                var id = xmlNode.getAttribute('id');\n                if (id) {\n                    this._defs[id] = def;\n                }\n            }\n        }\n        if (el && el.isGroup) {\n            var child = xmlNode.firstChild;\n            while (child) {\n                if (child.nodeType === 1) {\n                    this._parseNode(child, el, named, namedFromForSub, isInDefs, isInText);\n                }\n                else if (child.nodeType === 3 && isInText) {\n                    this._parseText(child, el);\n                }\n                child = child.nextSibling;\n            }\n        }\n    };\n    SVGParser.prototype._parseText = function (xmlNode, parentGroup) {\n        var text = new TSpan({\n            style: {\n                text: xmlNode.textContent\n            },\n            silent: true,\n            x: this._textX || 0,\n            y: this._textY || 0\n        });\n        inheritStyle(parentGroup, text);\n        parseAttributes(xmlNode, text, this._defsUsePending, false, false);\n        applyTextAlignment(text, parentGroup);\n        var textStyle = text.style;\n        var fontSize = textStyle.fontSize;\n        if (fontSize && fontSize < 9) {\n            textStyle.fontSize = 9;\n            text.scaleX *= fontSize / 9;\n            text.scaleY *= fontSize / 9;\n        }\n        var font = (textStyle.fontSize || textStyle.fontFamily) && [\n            textStyle.fontStyle,\n            textStyle.fontWeight,\n            (textStyle.fontSize || 12) + 'px',\n            textStyle.fontFamily || 'sans-serif'\n        ].join(' ');\n        textStyle.font = font;\n        var rect = text.getBoundingRect();\n        this._textX += rect.width;\n        parentGroup.add(text);\n        return text;\n    };\n    SVGParser.internalField = (function () {\n        nodeParsers = {\n            'g': function (xmlNode, parentGroup) {\n                var g = new Group();\n                inheritStyle(parentGroup, g);\n                parseAttributes(xmlNode, g, this._defsUsePending, false, false);\n                return g;\n            },\n            'rect': function (xmlNode, parentGroup) {\n                var rect = new Rect();\n                inheritStyle(parentGroup, rect);\n                parseAttributes(xmlNode, rect, this._defsUsePending, false, false);\n                rect.setShape({\n                    x: parseFloat(xmlNode.getAttribute('x') || '0'),\n                    y: parseFloat(xmlNode.getAttribute('y') || '0'),\n                    width: parseFloat(xmlNode.getAttribute('width') || '0'),\n                    height: parseFloat(xmlNode.getAttribute('height') || '0')\n                });\n                rect.silent = true;\n                return rect;\n            },\n            'circle': function (xmlNode, parentGroup) {\n                var circle = new Circle();\n                inheritStyle(parentGroup, circle);\n                parseAttributes(xmlNode, circle, this._defsUsePending, false, false);\n                circle.setShape({\n                    cx: parseFloat(xmlNode.getAttribute('cx') || '0'),\n                    cy: parseFloat(xmlNode.getAttribute('cy') || '0'),\n                    r: parseFloat(xmlNode.getAttribute('r') || '0')\n                });\n                circle.silent = true;\n                return circle;\n            },\n            'line': function (xmlNode, parentGroup) {\n                var line = new Line();\n                inheritStyle(parentGroup, line);\n                parseAttributes(xmlNode, line, this._defsUsePending, false, false);\n                line.setShape({\n                    x1: parseFloat(xmlNode.getAttribute('x1') || '0'),\n                    y1: parseFloat(xmlNode.getAttribute('y1') || '0'),\n                    x2: parseFloat(xmlNode.getAttribute('x2') || '0'),\n                    y2: parseFloat(xmlNode.getAttribute('y2') || '0')\n                });\n                line.silent = true;\n                return line;\n            },\n            'ellipse': function (xmlNode, parentGroup) {\n                var ellipse = new Ellipse();\n                inheritStyle(parentGroup, ellipse);\n                parseAttributes(xmlNode, ellipse, this._defsUsePending, false, false);\n                ellipse.setShape({\n                    cx: parseFloat(xmlNode.getAttribute('cx') || '0'),\n                    cy: parseFloat(xmlNode.getAttribute('cy') || '0'),\n                    rx: parseFloat(xmlNode.getAttribute('rx') || '0'),\n                    ry: parseFloat(xmlNode.getAttribute('ry') || '0')\n                });\n                ellipse.silent = true;\n                return ellipse;\n            },\n            'polygon': function (xmlNode, parentGroup) {\n                var pointsStr = xmlNode.getAttribute('points');\n                var pointsArr;\n                if (pointsStr) {\n                    pointsArr = parsePoints(pointsStr);\n                }\n                var polygon = new Polygon({\n                    shape: {\n                        points: pointsArr || []\n                    },\n                    silent: true\n                });\n                inheritStyle(parentGroup, polygon);\n                parseAttributes(xmlNode, polygon, this._defsUsePending, false, false);\n                return polygon;\n            },\n            'polyline': function (xmlNode, parentGroup) {\n                var pointsStr = xmlNode.getAttribute('points');\n                var pointsArr;\n                if (pointsStr) {\n                    pointsArr = parsePoints(pointsStr);\n                }\n                var polyline = new Polyline({\n                    shape: {\n                        points: pointsArr || []\n                    },\n                    silent: true\n                });\n                inheritStyle(parentGroup, polyline);\n                parseAttributes(xmlNode, polyline, this._defsUsePending, false, false);\n                return polyline;\n            },\n            'image': function (xmlNode, parentGroup) {\n                var img = new ZRImage();\n                inheritStyle(parentGroup, img);\n                parseAttributes(xmlNode, img, this._defsUsePending, false, false);\n                img.setStyle({\n                    image: xmlNode.getAttribute('xlink:href') || xmlNode.getAttribute('href'),\n                    x: +xmlNode.getAttribute('x'),\n                    y: +xmlNode.getAttribute('y'),\n                    width: +xmlNode.getAttribute('width'),\n                    height: +xmlNode.getAttribute('height')\n                });\n                img.silent = true;\n                return img;\n            },\n            'text': function (xmlNode, parentGroup) {\n                var x = xmlNode.getAttribute('x') || '0';\n                var y = xmlNode.getAttribute('y') || '0';\n                var dx = xmlNode.getAttribute('dx') || '0';\n                var dy = xmlNode.getAttribute('dy') || '0';\n                this._textX = parseFloat(x) + parseFloat(dx);\n                this._textY = parseFloat(y) + parseFloat(dy);\n                var g = new Group();\n                inheritStyle(parentGroup, g);\n                parseAttributes(xmlNode, g, this._defsUsePending, false, true);\n                return g;\n            },\n            'tspan': function (xmlNode, parentGroup) {\n                var x = xmlNode.getAttribute('x');\n                var y = xmlNode.getAttribute('y');\n                if (x != null) {\n                    this._textX = parseFloat(x);\n                }\n                if (y != null) {\n                    this._textY = parseFloat(y);\n                }\n                var dx = xmlNode.getAttribute('dx') || '0';\n                var dy = xmlNode.getAttribute('dy') || '0';\n                var g = new Group();\n                inheritStyle(parentGroup, g);\n                parseAttributes(xmlNode, g, this._defsUsePending, false, true);\n                this._textX += parseFloat(dx);\n                this._textY += parseFloat(dy);\n                return g;\n            },\n            'path': function (xmlNode, parentGroup) {\n                var d = xmlNode.getAttribute('d') || '';\n                var path = createFromString(d);\n                inheritStyle(parentGroup, path);\n                parseAttributes(xmlNode, path, this._defsUsePending, false, false);\n                path.silent = true;\n                return path;\n            }\n        };\n    })();\n    return SVGParser;\n}());\nvar paintServerParsers = {\n    'lineargradient': function (xmlNode) {\n        var x1 = parseInt(xmlNode.getAttribute('x1') || '0', 10);\n        var y1 = parseInt(xmlNode.getAttribute('y1') || '0', 10);\n        var x2 = parseInt(xmlNode.getAttribute('x2') || '10', 10);\n        var y2 = parseInt(xmlNode.getAttribute('y2') || '0', 10);\n        var gradient = new LinearGradient(x1, y1, x2, y2);\n        parsePaintServerUnit(xmlNode, gradient);\n        parseGradientColorStops(xmlNode, gradient);\n        return gradient;\n    },\n    'radialgradient': function (xmlNode) {\n        var cx = parseInt(xmlNode.getAttribute('cx') || '0', 10);\n        var cy = parseInt(xmlNode.getAttribute('cy') || '0', 10);\n        var r = parseInt(xmlNode.getAttribute('r') || '0', 10);\n        var gradient = new RadialGradient(cx, cy, r);\n        parsePaintServerUnit(xmlNode, gradient);\n        parseGradientColorStops(xmlNode, gradient);\n        return gradient;\n    }\n};\nfunction parsePaintServerUnit(xmlNode, gradient) {\n    var gradientUnits = xmlNode.getAttribute('gradientUnits');\n    if (gradientUnits === 'userSpaceOnUse') {\n        gradient.global = true;\n    }\n}\nfunction parseGradientColorStops(xmlNode, gradient) {\n    var stop = xmlNode.firstChild;\n    while (stop) {\n        if (stop.nodeType === 1\n            && stop.nodeName.toLocaleLowerCase() === 'stop') {\n            var offsetStr = stop.getAttribute('offset');\n            var offset = void 0;\n            if (offsetStr && offsetStr.indexOf('%') > 0) {\n                offset = parseInt(offsetStr, 10) / 100;\n            }\n            else if (offsetStr) {\n                offset = parseFloat(offsetStr);\n            }\n            else {\n                offset = 0;\n            }\n            var styleVals = {};\n            parseInlineStyle(stop, styleVals, styleVals);\n            var stopColor = styleVals.stopColor\n                || stop.getAttribute('stop-color')\n                || '#000000';\n            gradient.colorStops.push({\n                offset: offset,\n                color: stopColor\n            });\n        }\n        stop = stop.nextSibling;\n    }\n}\nfunction inheritStyle(parent, child) {\n    if (parent && parent.__inheritedStyle) {\n        if (!child.__inheritedStyle) {\n            child.__inheritedStyle = {};\n        }\n        defaults(child.__inheritedStyle, parent.__inheritedStyle);\n    }\n}\nfunction parsePoints(pointsString) {\n    var list = splitNumberSequence(pointsString);\n    var points = [];\n    for (var i = 0; i < list.length; i += 2) {\n        var x = parseFloat(list[i]);\n        var y = parseFloat(list[i + 1]);\n        points.push([x, y]);\n    }\n    return points;\n}\nfunction parseAttributes(xmlNode, el, defsUsePending, onlyInlineStyle, isTextGroup) {\n    var disp = el;\n    var inheritedStyle = disp.__inheritedStyle = disp.__inheritedStyle || {};\n    var selfStyle = {};\n    if (xmlNode.nodeType === 1) {\n        parseTransformAttribute(xmlNode, el);\n        parseInlineStyle(xmlNode, inheritedStyle, selfStyle);\n        if (!onlyInlineStyle) {\n            parseAttributeStyle(xmlNode, inheritedStyle, selfStyle);\n        }\n    }\n    disp.style = disp.style || {};\n    if (inheritedStyle.fill != null) {\n        disp.style.fill = getFillStrokeStyle(disp, 'fill', inheritedStyle.fill, defsUsePending);\n    }\n    if (inheritedStyle.stroke != null) {\n        disp.style.stroke = getFillStrokeStyle(disp, 'stroke', inheritedStyle.stroke, defsUsePending);\n    }\n    each([\n        'lineWidth', 'opacity', 'fillOpacity', 'strokeOpacity', 'miterLimit', 'fontSize'\n    ], function (propName) {\n        if (inheritedStyle[propName] != null) {\n            disp.style[propName] = parseFloat(inheritedStyle[propName]);\n        }\n    });\n    each([\n        'lineDashOffset', 'lineCap', 'lineJoin', 'fontWeight', 'fontFamily', 'fontStyle', 'textAlign'\n    ], function (propName) {\n        if (inheritedStyle[propName] != null) {\n            disp.style[propName] = inheritedStyle[propName];\n        }\n    });\n    if (isTextGroup) {\n        disp.__selfStyle = selfStyle;\n    }\n    if (inheritedStyle.lineDash) {\n        disp.style.lineDash = map(splitNumberSequence(inheritedStyle.lineDash), function (str) {\n            return parseFloat(str);\n        });\n    }\n    if (inheritedStyle.visibility === 'hidden' || inheritedStyle.visibility === 'collapse') {\n        disp.invisible = true;\n    }\n    if (inheritedStyle.display === 'none') {\n        disp.ignore = true;\n    }\n}\nfunction applyTextAlignment(text, parentGroup) {\n    var parentSelfStyle = parentGroup.__selfStyle;\n    if (parentSelfStyle) {\n        var textBaseline = parentSelfStyle.textBaseline;\n        var zrTextBaseline = textBaseline;\n        if (!textBaseline || textBaseline === 'auto') {\n            zrTextBaseline = 'alphabetic';\n        }\n        else if (textBaseline === 'baseline') {\n            zrTextBaseline = 'alphabetic';\n        }\n        else if (textBaseline === 'before-edge' || textBaseline === 'text-before-edge') {\n            zrTextBaseline = 'top';\n        }\n        else if (textBaseline === 'after-edge' || textBaseline === 'text-after-edge') {\n            zrTextBaseline = 'bottom';\n        }\n        else if (textBaseline === 'central' || textBaseline === 'mathematical') {\n            zrTextBaseline = 'middle';\n        }\n        text.style.textBaseline = zrTextBaseline;\n    }\n    var parentInheritedStyle = parentGroup.__inheritedStyle;\n    if (parentInheritedStyle) {\n        var textAlign = parentInheritedStyle.textAlign;\n        var zrTextAlign = textAlign;\n        if (textAlign) {\n            if (textAlign === 'middle') {\n                zrTextAlign = 'center';\n            }\n            text.style.textAlign = zrTextAlign;\n        }\n    }\n}\nvar urlRegex = /^url\\(\\s*#(.*?)\\)/;\nfunction getFillStrokeStyle(el, method, str, defsUsePending) {\n    var urlMatch = str && str.match(urlRegex);\n    if (urlMatch) {\n        var url = trim(urlMatch[1]);\n        defsUsePending.push([el, method, url]);\n        return;\n    }\n    if (str === 'none') {\n        str = null;\n    }\n    return str;\n}\nfunction applyDefs(defs, defsUsePending) {\n    for (var i = 0; i < defsUsePending.length; i++) {\n        var item = defsUsePending[i];\n        item[0].style[item[1]] = defs[item[2]];\n    }\n}\nvar numberReg = /-?([0-9]*\\.)?[0-9]+([eE]-?[0-9]+)?/g;\nfunction splitNumberSequence(rawStr) {\n    return rawStr.match(numberReg) || [];\n}\nvar transformRegex = /(translate|scale|rotate|skewX|skewY|matrix)\\(([\\-\\s0-9\\.eE,]*)\\)/g;\nvar DEGREE_TO_ANGLE = Math.PI / 180;\nfunction parseTransformAttribute(xmlNode, node) {\n    var transform = xmlNode.getAttribute('transform');\n    if (transform) {\n        transform = transform.replace(/,/g, ' ');\n        var transformOps_1 = [];\n        var mt = null;\n        transform.replace(transformRegex, function (str, type, value) {\n            transformOps_1.push(type, value);\n            return '';\n        });\n        for (var i = transformOps_1.length - 1; i > 0; i -= 2) {\n            var value = transformOps_1[i];\n            var type = transformOps_1[i - 1];\n            var valueArr = splitNumberSequence(value);\n            mt = mt || matrix.create();\n            switch (type) {\n                case 'translate':\n                    matrix.translate(mt, mt, [parseFloat(valueArr[0]), parseFloat(valueArr[1] || '0')]);\n                    break;\n                case 'scale':\n                    matrix.scale(mt, mt, [parseFloat(valueArr[0]), parseFloat(valueArr[1] || valueArr[0])]);\n                    break;\n                case 'rotate':\n                    matrix.rotate(mt, mt, -parseFloat(valueArr[0]) * DEGREE_TO_ANGLE);\n                    break;\n                case 'skewX':\n                    var sx = Math.tan(parseFloat(valueArr[0]) * DEGREE_TO_ANGLE);\n                    matrix.mul(mt, [1, 0, sx, 1, 0, 0], mt);\n                    break;\n                case 'skewY':\n                    var sy = Math.tan(parseFloat(valueArr[0]) * DEGREE_TO_ANGLE);\n                    matrix.mul(mt, [1, sy, 0, 1, 0, 0], mt);\n                    break;\n                case 'matrix':\n                    mt[0] = parseFloat(valueArr[0]);\n                    mt[1] = parseFloat(valueArr[1]);\n                    mt[2] = parseFloat(valueArr[2]);\n                    mt[3] = parseFloat(valueArr[3]);\n                    mt[4] = parseFloat(valueArr[4]);\n                    mt[5] = parseFloat(valueArr[5]);\n                    break;\n            }\n        }\n        node.setLocalTransform(mt);\n    }\n}\nvar styleRegex = /([^\\s:;]+)\\s*:\\s*([^:;]+)/g;\nfunction parseInlineStyle(xmlNode, inheritableStyleResult, selfStyleResult) {\n    var style = xmlNode.getAttribute('style');\n    if (!style) {\n        return;\n    }\n    styleRegex.lastIndex = 0;\n    var styleRegResult;\n    while ((styleRegResult = styleRegex.exec(style)) != null) {\n        var svgStlAttr = styleRegResult[1];\n        var zrInheritableStlAttr = hasOwn(INHERITABLE_STYLE_ATTRIBUTES_MAP, svgStlAttr)\n            ? INHERITABLE_STYLE_ATTRIBUTES_MAP[svgStlAttr]\n            : null;\n        if (zrInheritableStlAttr) {\n            inheritableStyleResult[zrInheritableStlAttr] = styleRegResult[2];\n        }\n        var zrSelfStlAttr = hasOwn(SELF_STYLE_ATTRIBUTES_MAP, svgStlAttr)\n            ? SELF_STYLE_ATTRIBUTES_MAP[svgStlAttr]\n            : null;\n        if (zrSelfStlAttr) {\n            selfStyleResult[zrSelfStlAttr] = styleRegResult[2];\n        }\n    }\n}\nfunction parseAttributeStyle(xmlNode, inheritableStyleResult, selfStyleResult) {\n    for (var i = 0; i < INHERITABLE_STYLE_ATTRIBUTES_MAP_KEYS.length; i++) {\n        var svgAttrName = INHERITABLE_STYLE_ATTRIBUTES_MAP_KEYS[i];\n        var attrValue = xmlNode.getAttribute(svgAttrName);\n        if (attrValue != null) {\n            inheritableStyleResult[INHERITABLE_STYLE_ATTRIBUTES_MAP[svgAttrName]] = attrValue;\n        }\n    }\n    for (var i = 0; i < SELF_STYLE_ATTRIBUTES_MAP_KEYS.length; i++) {\n        var svgAttrName = SELF_STYLE_ATTRIBUTES_MAP_KEYS[i];\n        var attrValue = xmlNode.getAttribute(svgAttrName);\n        if (attrValue != null) {\n            selfStyleResult[SELF_STYLE_ATTRIBUTES_MAP[svgAttrName]] = attrValue;\n        }\n    }\n}\nexport function makeViewBoxTransform(viewBoxRect, boundingRect) {\n    var scaleX = boundingRect.width / viewBoxRect.width;\n    var scaleY = boundingRect.height / viewBoxRect.height;\n    var scale = Math.min(scaleX, scaleY);\n    return {\n        scale: scale,\n        x: -(viewBoxRect.x + viewBoxRect.width / 2) * scale + (boundingRect.x + boundingRect.width / 2),\n        y: -(viewBoxRect.y + viewBoxRect.height / 2) * scale + (boundingRect.y + boundingRect.height / 2)\n    };\n}\nexport function parseSVG(xml, opt) {\n    var parser = new SVGParser();\n    return parser.parse(xml, opt);\n}\nexport { parseXML };\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}