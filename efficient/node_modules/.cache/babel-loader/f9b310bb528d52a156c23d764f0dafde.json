{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar uidBase = 0;\n\nvar OrdinalMeta =\n/** @class */\nfunction () {\n  function OrdinalMeta(opt) {\n    this.categories = opt.categories || [];\n    this._needCollect = opt.needCollect;\n    this._deduplication = opt.deduplication;\n    this.uid = ++uidBase;\n  }\n\n  OrdinalMeta.createByAxisModel = function (axisModel) {\n    var option = axisModel.option;\n    var data = option.data;\n    var categories = data && (0, _util.map)(data, getName);\n    return new OrdinalMeta({\n      categories: categories,\n      needCollect: !categories,\n      // deduplication is default in axis.\n      deduplication: option.dedplication !== false\n    });\n  };\n\n  ;\n\n  OrdinalMeta.prototype.getOrdinal = function (category) {\n    // @ts-ignore\n    return this._getOrCreateMap().get(category);\n  };\n  /**\n   * @return The ordinal. If not found, return NaN.\n   */\n\n\n  OrdinalMeta.prototype.parseAndCollect = function (category) {\n    var index;\n    var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n    // This feature is only supported when !needCollect, because we should\n    // consider a common case: a value is 2017, which is a number but is\n    // expected to be tread as a category. This case usually happen in dataset,\n    // where it happent to be no need of the index feature.\n\n    if (!(0, _util.isString)(category) && !needCollect) {\n      return category;\n    } // Optimize for the scenario:\n    // category is ['2012-01-01', '2012-01-02', ...], where the input\n    // data has been ensured not duplicate and is large data.\n    // Notice, if a dataset dimension provide categroies, usually echarts\n    // should remove duplication except user tell echarts dont do that\n    // (set axis.deduplication = false), because echarts do not know whether\n    // the values in the category dimension has duplication (consider the\n    // parallel-aqi example)\n\n\n    if (needCollect && !this._deduplication) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      return index;\n    }\n\n    var map = this._getOrCreateMap(); // @ts-ignore\n\n\n    index = map.get(category);\n\n    if (index == null) {\n      if (needCollect) {\n        index = this.categories.length;\n        this.categories[index] = category; // @ts-ignore\n\n        map.set(category, index);\n      } else {\n        index = NaN;\n      }\n    }\n\n    return index;\n  }; // Consider big data, do not create map until needed.\n\n\n  OrdinalMeta.prototype._getOrCreateMap = function () {\n    return this._map || (this._map = (0, _util.createHashMap)(this.categories));\n  };\n\n  return OrdinalMeta;\n}();\n\nfunction getName(obj) {\n  if ((0, _util.isObject)(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nexports.default = _default;","map":{"version":3,"names":["uidBase","OrdinalMeta","opt","categories","_needCollect","needCollect","_deduplication","deduplication","uid","createByAxisModel","axisModel","option","data","map","getName","dedplication","prototype","getOrdinal","category","_getOrCreateMap","get","parseAndCollect","index","isString","length","set","NaN","_map","createHashMap","obj","isObject","value"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/data/OrdinalMeta.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { createHashMap, isObject, map, isString } from 'zrender/lib/core/util.js';\nvar uidBase = 0;\n\nvar OrdinalMeta =\n/** @class */\nfunction () {\n  function OrdinalMeta(opt) {\n    this.categories = opt.categories || [];\n    this._needCollect = opt.needCollect;\n    this._deduplication = opt.deduplication;\n    this.uid = ++uidBase;\n  }\n\n  OrdinalMeta.createByAxisModel = function (axisModel) {\n    var option = axisModel.option;\n    var data = option.data;\n    var categories = data && map(data, getName);\n    return new OrdinalMeta({\n      categories: categories,\n      needCollect: !categories,\n      // deduplication is default in axis.\n      deduplication: option.dedplication !== false\n    });\n  };\n\n  ;\n\n  OrdinalMeta.prototype.getOrdinal = function (category) {\n    // @ts-ignore\n    return this._getOrCreateMap().get(category);\n  };\n  /**\n   * @return The ordinal. If not found, return NaN.\n   */\n\n\n  OrdinalMeta.prototype.parseAndCollect = function (category) {\n    var index;\n    var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n    // This feature is only supported when !needCollect, because we should\n    // consider a common case: a value is 2017, which is a number but is\n    // expected to be tread as a category. This case usually happen in dataset,\n    // where it happent to be no need of the index feature.\n\n    if (!isString(category) && !needCollect) {\n      return category;\n    } // Optimize for the scenario:\n    // category is ['2012-01-01', '2012-01-02', ...], where the input\n    // data has been ensured not duplicate and is large data.\n    // Notice, if a dataset dimension provide categroies, usually echarts\n    // should remove duplication except user tell echarts dont do that\n    // (set axis.deduplication = false), because echarts do not know whether\n    // the values in the category dimension has duplication (consider the\n    // parallel-aqi example)\n\n\n    if (needCollect && !this._deduplication) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      return index;\n    }\n\n    var map = this._getOrCreateMap(); // @ts-ignore\n\n\n    index = map.get(category);\n\n    if (index == null) {\n      if (needCollect) {\n        index = this.categories.length;\n        this.categories[index] = category; // @ts-ignore\n\n        map.set(category, index);\n      } else {\n        index = NaN;\n      }\n    }\n\n    return index;\n  }; // Consider big data, do not create map until needed.\n\n\n  OrdinalMeta.prototype._getOrCreateMap = function () {\n    return this._map || (this._map = createHashMap(this.categories));\n  };\n\n  return OrdinalMeta;\n}();\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nexport default OrdinalMeta;"],"mappings":"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"},"metadata":{},"sourceType":"script"}