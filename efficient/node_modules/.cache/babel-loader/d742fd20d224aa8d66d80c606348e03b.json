{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _graphic = require(\"./graphic.js\");\n\nvar _core = require(\"./core.js\");\n\nvar _helper = require(\"./helper.js\");\n\nvar _util = require(\"../core/util.js\");\n\nvar _patch = _interopRequireWildcard(require(\"./patch.js\"));\n\nvar _helper2 = require(\"../canvas/helper.js\");\n\nvar svgId = 0;\n\nvar SVGPainter = function () {\n  function SVGPainter(root, storage, opts) {\n    this.type = 'svg';\n    this.refreshHover = createMethodNotSupport('refreshHover');\n    this.configLayer = createMethodNotSupport('configLayer');\n    this.storage = storage;\n    this._opts = opts = (0, _util.extend)({}, opts);\n    this.root = root;\n    this._id = 'zr' + svgId++;\n    this._oldVNode = (0, _core.createSVGVNode)(opts.width, opts.height);\n\n    if (root && !opts.ssr) {\n      var viewport = this._viewport = document.createElement('div');\n      viewport.style.cssText = 'position:relative;overflow:hidden';\n      var svgDom = this._svgDom = this._oldVNode.elm = (0, _core.createElement)('svg');\n      (0, _patch.updateAttrs)(null, this._oldVNode);\n      viewport.appendChild(svgDom);\n      root.appendChild(viewport);\n    }\n\n    this.resize(opts.width, opts.height);\n  }\n\n  SVGPainter.prototype.getType = function () {\n    return this.type;\n  };\n\n  SVGPainter.prototype.getViewportRoot = function () {\n    return this._viewport;\n  };\n\n  SVGPainter.prototype.getViewportRootOffset = function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  };\n\n  SVGPainter.prototype.getSvgDom = function () {\n    return this._svgDom;\n  };\n\n  SVGPainter.prototype.refresh = function () {\n    if (this.root) {\n      var vnode = this.renderToVNode({\n        willUpdate: true\n      });\n      vnode.attrs.style = 'position:absolute;left:0;top:0;user-select:none';\n      (0, _patch.default)(this._oldVNode, vnode);\n      this._oldVNode = vnode;\n    }\n  };\n\n  SVGPainter.prototype.renderOneToVNode = function (el) {\n    return (0, _graphic.brush)(el, (0, _core.createBrushScope)(this._id));\n  };\n\n  SVGPainter.prototype.renderToVNode = function (opts) {\n    opts = opts || {};\n    var list = this.storage.getDisplayList(true);\n    var bgColor = this._backgroundColor;\n    var width = this._width;\n    var height = this._height;\n    var scope = (0, _core.createBrushScope)(this._id);\n    scope.animation = opts.animation;\n    scope.willUpdate = opts.willUpdate;\n    scope.compress = opts.compress;\n    var children = [];\n\n    if (bgColor && bgColor !== 'none') {\n      var _a = (0, _helper.normalizeColor)(bgColor),\n          color = _a.color,\n          opacity = _a.opacity;\n\n      this._bgVNode = (0, _core.createVNode)('rect', 'bg', {\n        width: width,\n        height: height,\n        x: '0',\n        y: '0',\n        id: '0',\n        fill: color,\n        'fill-opacity': opacity\n      });\n      children.push(this._bgVNode);\n    } else {\n      this._bgVNode = null;\n    }\n\n    var mainVNode = !opts.compress ? this._mainVNode = (0, _core.createVNode)('g', 'main', {}, []) : null;\n\n    this._paintList(list, scope, mainVNode ? mainVNode.children : children);\n\n    mainVNode && children.push(mainVNode);\n    var defs = (0, _util.map)((0, _util.keys)(scope.defs), function (id) {\n      return scope.defs[id];\n    });\n\n    if (defs.length) {\n      children.push((0, _core.createVNode)('defs', 'defs', {}, defs));\n    }\n\n    if (opts.animation) {\n      var animationCssStr = (0, _core.getCssString)(scope.cssNodes, scope.cssAnims, {\n        newline: true\n      });\n\n      if (animationCssStr) {\n        var styleNode = (0, _core.createVNode)('style', 'stl', {}, [], animationCssStr);\n        children.push(styleNode);\n      }\n    }\n\n    return (0, _core.createSVGVNode)(width, height, children, opts.useViewBox);\n  };\n\n  SVGPainter.prototype.renderToString = function (opts) {\n    opts = opts || {};\n    return (0, _core.vNodeToString)(this.renderToVNode({\n      animation: (0, _util.retrieve2)(opts.cssAnimation, true),\n      willUpdate: false,\n      compress: true,\n      useViewBox: (0, _util.retrieve2)(opts.useViewBox, true)\n    }), {\n      newline: true\n    });\n  };\n\n  SVGPainter.prototype.setBackgroundColor = function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n    var bgVNode = this._bgVNode;\n\n    if (bgVNode && bgVNode.elm) {\n      var _a = (0, _helper.normalizeColor)(backgroundColor),\n          color = _a.color,\n          opacity = _a.opacity;\n\n      bgVNode.elm.setAttribute('fill', color);\n\n      if (opacity < 1) {\n        bgVNode.elm.setAttribute('fill-opacity', opacity);\n      }\n    }\n  };\n\n  SVGPainter.prototype.getSvgRoot = function () {\n    return this._mainVNode && this._mainVNode.elm;\n  };\n\n  SVGPainter.prototype._paintList = function (list, scope, out) {\n    var listLen = list.length;\n    var clipPathsGroupsStack = [];\n    var clipPathsGroupsStackDepth = 0;\n    var currentClipPathGroup;\n    var prevClipPaths;\n    var clipGroupNodeIdx = 0;\n\n    for (var i = 0; i < listLen; i++) {\n      var displayable = list[i];\n\n      if (!displayable.invisible) {\n        var clipPaths = displayable.__clipPaths;\n        var len = clipPaths && clipPaths.length || 0;\n        var prevLen = prevClipPaths && prevClipPaths.length || 0;\n        var lca = void 0;\n\n        for (lca = Math.max(len - 1, prevLen - 1); lca >= 0; lca--) {\n          if (clipPaths && prevClipPaths && clipPaths[lca] === prevClipPaths[lca]) {\n            break;\n          }\n        }\n\n        for (var i_1 = prevLen - 1; i_1 > lca; i_1--) {\n          clipPathsGroupsStackDepth--;\n          currentClipPathGroup = clipPathsGroupsStack[clipPathsGroupsStackDepth - 1];\n        }\n\n        for (var i_2 = lca + 1; i_2 < len; i_2++) {\n          var groupAttrs = {};\n          (0, _graphic.setClipPath)(clipPaths[i_2], groupAttrs, scope);\n          var g = (0, _core.createVNode)('g', 'clip-g-' + clipGroupNodeIdx++, groupAttrs, []);\n          (currentClipPathGroup ? currentClipPathGroup.children : out).push(g);\n          clipPathsGroupsStack[clipPathsGroupsStackDepth++] = g;\n          currentClipPathGroup = g;\n        }\n\n        prevClipPaths = clipPaths;\n        var ret = (0, _graphic.brush)(displayable, scope);\n\n        if (ret) {\n          (currentClipPathGroup ? currentClipPathGroup.children : out).push(ret);\n        }\n      }\n    }\n  };\n\n  SVGPainter.prototype.resize = function (width, height) {\n    var opts = this._opts;\n    var root = this.root;\n    var viewport = this._viewport;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n\n    if (root && viewport) {\n      viewport.style.display = 'none';\n      width = (0, _helper2.getSize)(root, 0, opts);\n      height = (0, _helper2.getSize)(root, 1, opts);\n      viewport.style.display = '';\n    }\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n\n      if (viewport) {\n        var viewportStyle = viewport.style;\n        viewportStyle.width = width + 'px';\n        viewportStyle.height = height + 'px';\n      }\n\n      var svgDom = this._svgDom;\n\n      if (svgDom) {\n        svgDom.setAttribute('width', width);\n        svgDom.setAttribute('height', height);\n      }\n    }\n  };\n\n  SVGPainter.prototype.getWidth = function () {\n    return this._width;\n  };\n\n  SVGPainter.prototype.getHeight = function () {\n    return this._height;\n  };\n\n  SVGPainter.prototype.dispose = function () {\n    if (this.root) {\n      this.root.innerHTML = '';\n    }\n\n    this._svgDom = this._viewport = this.storage = this._oldVNode = this._bgVNode = this._mainVNode = null;\n  };\n\n  SVGPainter.prototype.clear = function () {\n    if (this._svgDom) {\n      this._svgDom.innerHTML = null;\n    }\n\n    this._oldVNode = null;\n  };\n\n  SVGPainter.prototype.toDataURL = function (base64) {\n    var str = encodeURIComponent(this.renderToString());\n    var prefix = 'data:image/svg+xml;';\n\n    if (base64) {\n      str = (0, _helper.encodeBase64)(str);\n      return str && prefix + 'base64,' + str;\n    }\n\n    return prefix + 'charset=UTF-8,' + str;\n  };\n\n  return SVGPainter;\n}();\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    if (process.env.NODE_ENV !== 'production') {\n      (0, _util.logError)('In SVG mode painter not support method \"' + method + '\"');\n    }\n  };\n}\n\nvar _default = SVGPainter;\nexports.default = _default;","map":{"version":3,"names":["svgId","SVGPainter","root","storage","opts","type","refreshHover","createMethodNotSupport","configLayer","_opts","extend","_id","_oldVNode","createSVGVNode","width","height","ssr","viewport","_viewport","document","createElement","style","cssText","svgDom","_svgDom","elm","updateAttrs","appendChild","resize","prototype","getType","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","getSvgDom","refresh","vnode","renderToVNode","willUpdate","attrs","patch","renderOneToVNode","el","brush","createBrushScope","list","getDisplayList","bgColor","_backgroundColor","_width","_height","scope","animation","compress","children","_a","normalizeColor","color","opacity","_bgVNode","createVNode","x","y","id","fill","push","mainVNode","_mainVNode","_paintList","defs","map","keys","length","animationCssStr","getCssString","cssNodes","cssAnims","newline","styleNode","useViewBox","renderToString","vNodeToString","retrieve2","cssAnimation","setBackgroundColor","backgroundColor","bgVNode","setAttribute","getSvgRoot","out","listLen","clipPathsGroupsStack","clipPathsGroupsStackDepth","currentClipPathGroup","prevClipPaths","clipGroupNodeIdx","i","displayable","invisible","clipPaths","__clipPaths","len","prevLen","lca","Math","max","i_1","i_2","groupAttrs","setClipPath","g","ret","display","getSize","viewportStyle","getWidth","getHeight","dispose","innerHTML","clear","toDataURL","base64","str","encodeURIComponent","prefix","encodeBase64","method","process","env","NODE_ENV","logError"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/zrender/lib/svg/Painter.js"],"sourcesContent":["import { brush, setClipPath } from './graphic.js';\nimport { createElement, createVNode, vNodeToString, getCssString, createBrushScope, createSVGVNode } from './core.js';\nimport { normalizeColor, encodeBase64 } from './helper.js';\nimport { extend, keys, logError, map, retrieve2 } from '../core/util.js';\nimport patch, { updateAttrs } from './patch.js';\nimport { getSize } from '../canvas/helper.js';\nvar svgId = 0;\nvar SVGPainter = (function () {\n    function SVGPainter(root, storage, opts) {\n        this.type = 'svg';\n        this.refreshHover = createMethodNotSupport('refreshHover');\n        this.configLayer = createMethodNotSupport('configLayer');\n        this.storage = storage;\n        this._opts = opts = extend({}, opts);\n        this.root = root;\n        this._id = 'zr' + svgId++;\n        this._oldVNode = createSVGVNode(opts.width, opts.height);\n        if (root && !opts.ssr) {\n            var viewport = this._viewport = document.createElement('div');\n            viewport.style.cssText = 'position:relative;overflow:hidden';\n            var svgDom = this._svgDom = this._oldVNode.elm = createElement('svg');\n            updateAttrs(null, this._oldVNode);\n            viewport.appendChild(svgDom);\n            root.appendChild(viewport);\n        }\n        this.resize(opts.width, opts.height);\n    }\n    SVGPainter.prototype.getType = function () {\n        return this.type;\n    };\n    SVGPainter.prototype.getViewportRoot = function () {\n        return this._viewport;\n    };\n    SVGPainter.prototype.getViewportRootOffset = function () {\n        var viewportRoot = this.getViewportRoot();\n        if (viewportRoot) {\n            return {\n                offsetLeft: viewportRoot.offsetLeft || 0,\n                offsetTop: viewportRoot.offsetTop || 0\n            };\n        }\n    };\n    SVGPainter.prototype.getSvgDom = function () {\n        return this._svgDom;\n    };\n    SVGPainter.prototype.refresh = function () {\n        if (this.root) {\n            var vnode = this.renderToVNode({\n                willUpdate: true\n            });\n            vnode.attrs.style = 'position:absolute;left:0;top:0;user-select:none';\n            patch(this._oldVNode, vnode);\n            this._oldVNode = vnode;\n        }\n    };\n    SVGPainter.prototype.renderOneToVNode = function (el) {\n        return brush(el, createBrushScope(this._id));\n    };\n    SVGPainter.prototype.renderToVNode = function (opts) {\n        opts = opts || {};\n        var list = this.storage.getDisplayList(true);\n        var bgColor = this._backgroundColor;\n        var width = this._width;\n        var height = this._height;\n        var scope = createBrushScope(this._id);\n        scope.animation = opts.animation;\n        scope.willUpdate = opts.willUpdate;\n        scope.compress = opts.compress;\n        var children = [];\n        if (bgColor && bgColor !== 'none') {\n            var _a = normalizeColor(bgColor), color = _a.color, opacity = _a.opacity;\n            this._bgVNode = createVNode('rect', 'bg', {\n                width: width,\n                height: height,\n                x: '0',\n                y: '0',\n                id: '0',\n                fill: color,\n                'fill-opacity': opacity\n            });\n            children.push(this._bgVNode);\n        }\n        else {\n            this._bgVNode = null;\n        }\n        var mainVNode = !opts.compress\n            ? (this._mainVNode = createVNode('g', 'main', {}, [])) : null;\n        this._paintList(list, scope, mainVNode ? mainVNode.children : children);\n        mainVNode && children.push(mainVNode);\n        var defs = map(keys(scope.defs), function (id) { return scope.defs[id]; });\n        if (defs.length) {\n            children.push(createVNode('defs', 'defs', {}, defs));\n        }\n        if (opts.animation) {\n            var animationCssStr = getCssString(scope.cssNodes, scope.cssAnims, { newline: true });\n            if (animationCssStr) {\n                var styleNode = createVNode('style', 'stl', {}, [], animationCssStr);\n                children.push(styleNode);\n            }\n        }\n        return createSVGVNode(width, height, children, opts.useViewBox);\n    };\n    SVGPainter.prototype.renderToString = function (opts) {\n        opts = opts || {};\n        return vNodeToString(this.renderToVNode({\n            animation: retrieve2(opts.cssAnimation, true),\n            willUpdate: false,\n            compress: true,\n            useViewBox: retrieve2(opts.useViewBox, true)\n        }), { newline: true });\n    };\n    SVGPainter.prototype.setBackgroundColor = function (backgroundColor) {\n        this._backgroundColor = backgroundColor;\n        var bgVNode = this._bgVNode;\n        if (bgVNode && bgVNode.elm) {\n            var _a = normalizeColor(backgroundColor), color = _a.color, opacity = _a.opacity;\n            bgVNode.elm.setAttribute('fill', color);\n            if (opacity < 1) {\n                bgVNode.elm.setAttribute('fill-opacity', opacity);\n            }\n        }\n    };\n    SVGPainter.prototype.getSvgRoot = function () {\n        return this._mainVNode && this._mainVNode.elm;\n    };\n    SVGPainter.prototype._paintList = function (list, scope, out) {\n        var listLen = list.length;\n        var clipPathsGroupsStack = [];\n        var clipPathsGroupsStackDepth = 0;\n        var currentClipPathGroup;\n        var prevClipPaths;\n        var clipGroupNodeIdx = 0;\n        for (var i = 0; i < listLen; i++) {\n            var displayable = list[i];\n            if (!displayable.invisible) {\n                var clipPaths = displayable.__clipPaths;\n                var len = clipPaths && clipPaths.length || 0;\n                var prevLen = prevClipPaths && prevClipPaths.length || 0;\n                var lca = void 0;\n                for (lca = Math.max(len - 1, prevLen - 1); lca >= 0; lca--) {\n                    if (clipPaths && prevClipPaths\n                        && clipPaths[lca] === prevClipPaths[lca]) {\n                        break;\n                    }\n                }\n                for (var i_1 = prevLen - 1; i_1 > lca; i_1--) {\n                    clipPathsGroupsStackDepth--;\n                    currentClipPathGroup = clipPathsGroupsStack[clipPathsGroupsStackDepth - 1];\n                }\n                for (var i_2 = lca + 1; i_2 < len; i_2++) {\n                    var groupAttrs = {};\n                    setClipPath(clipPaths[i_2], groupAttrs, scope);\n                    var g = createVNode('g', 'clip-g-' + clipGroupNodeIdx++, groupAttrs, []);\n                    (currentClipPathGroup ? currentClipPathGroup.children : out).push(g);\n                    clipPathsGroupsStack[clipPathsGroupsStackDepth++] = g;\n                    currentClipPathGroup = g;\n                }\n                prevClipPaths = clipPaths;\n                var ret = brush(displayable, scope);\n                if (ret) {\n                    (currentClipPathGroup ? currentClipPathGroup.children : out).push(ret);\n                }\n            }\n        }\n    };\n    SVGPainter.prototype.resize = function (width, height) {\n        var opts = this._opts;\n        var root = this.root;\n        var viewport = this._viewport;\n        width != null && (opts.width = width);\n        height != null && (opts.height = height);\n        if (root && viewport) {\n            viewport.style.display = 'none';\n            width = getSize(root, 0, opts);\n            height = getSize(root, 1, opts);\n            viewport.style.display = '';\n        }\n        if (this._width !== width || this._height !== height) {\n            this._width = width;\n            this._height = height;\n            if (viewport) {\n                var viewportStyle = viewport.style;\n                viewportStyle.width = width + 'px';\n                viewportStyle.height = height + 'px';\n            }\n            var svgDom = this._svgDom;\n            if (svgDom) {\n                svgDom.setAttribute('width', width);\n                svgDom.setAttribute('height', height);\n            }\n        }\n    };\n    SVGPainter.prototype.getWidth = function () {\n        return this._width;\n    };\n    SVGPainter.prototype.getHeight = function () {\n        return this._height;\n    };\n    SVGPainter.prototype.dispose = function () {\n        if (this.root) {\n            this.root.innerHTML = '';\n        }\n        this._svgDom =\n            this._viewport =\n                this.storage =\n                    this._oldVNode =\n                        this._bgVNode =\n                            this._mainVNode = null;\n    };\n    SVGPainter.prototype.clear = function () {\n        if (this._svgDom) {\n            this._svgDom.innerHTML = null;\n        }\n        this._oldVNode = null;\n    };\n    SVGPainter.prototype.toDataURL = function (base64) {\n        var str = encodeURIComponent(this.renderToString());\n        var prefix = 'data:image/svg+xml;';\n        if (base64) {\n            str = encodeBase64(str);\n            return str && prefix + 'base64,' + str;\n        }\n        return prefix + 'charset=UTF-8,' + str;\n    };\n    return SVGPainter;\n}());\nfunction createMethodNotSupport(method) {\n    return function () {\n        if (process.env.NODE_ENV !== 'production') {\n            logError('In SVG mode painter not support method \"' + method + '\"');\n        }\n    };\n}\nexport default SVGPainter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}