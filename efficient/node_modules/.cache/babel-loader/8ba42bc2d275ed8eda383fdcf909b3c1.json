{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.install = install;\n\nvar _tslib = require(\"tslib\");\n\nvar _Component = _interopRequireDefault(require(\"../../view/Component.js\"));\n\nvar _GridModel = _interopRequireDefault(require(\"../../coord/cartesian/GridModel.js\"));\n\nvar _graphic = require(\"../../util/graphic.js\");\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar _AxisModel = require(\"../../coord/cartesian/AxisModel.js\");\n\nvar _axisModelCreator = _interopRequireDefault(require(\"../../coord/axisModelCreator.js\"));\n\nvar _Grid = _interopRequireDefault(require(\"../../coord/cartesian/Grid.js\"));\n\nvar _CartesianAxisView = require(\"../axis/CartesianAxisView.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\nvar GridView =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(GridView, _super);\n\n  function GridView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'grid';\n    return _this;\n  }\n\n  GridView.prototype.render = function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new _graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: (0, _util.defaults)({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  };\n\n  GridView.type = 'grid';\n  return GridView;\n}(_Component.default);\n\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  offset: 0\n};\n\nfunction install(registers) {\n  registers.registerComponentView(GridView);\n  registers.registerComponentModel(_GridModel.default);\n  registers.registerCoordinateSystem('cartesian2d', _Grid.default);\n  (0, _axisModelCreator.default)(registers, 'x', _AxisModel.CartesianAxisModel, extraOption);\n  (0, _axisModelCreator.default)(registers, 'y', _AxisModel.CartesianAxisModel, extraOption);\n  registers.registerComponentView(_CartesianAxisView.CartesianXAxisView);\n  registers.registerComponentView(_CartesianAxisView.CartesianYAxisView);\n  registers.registerPreprocessor(function (option) {\n    // Only create grid when need\n    if (option.xAxis && option.yAxis && !option.grid) {\n      option.grid = {};\n    }\n  });\n}","map":{"version":3,"names":["GridView","_super","__extends","_this","apply","arguments","type","prototype","render","gridModel","ecModel","group","removeAll","get","add","Rect","shape","coordinateSystem","getRect","style","defaults","fill","getItemStyle","silent","z2","ComponentView","extraOption","offset","install","registers","registerComponentView","registerComponentModel","GridModel","registerCoordinateSystem","Grid","axisModelCreator","CartesianAxisModel","CartesianXAxisView","CartesianYAxisView","registerPreprocessor","option","xAxis","yAxis","grid"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/component/grid/installSimple.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport ComponentView from '../../view/Component.js';\nimport GridModel from '../../coord/cartesian/GridModel.js';\nimport { Rect } from '../../util/graphic.js';\nimport { defaults } from 'zrender/lib/core/util.js';\nimport { CartesianAxisModel } from '../../coord/cartesian/AxisModel.js';\nimport axisModelCreator from '../../coord/axisModelCreator.js';\nimport Grid from '../../coord/cartesian/Grid.js';\nimport { CartesianXAxisView, CartesianYAxisView } from '../axis/CartesianAxisView.js'; // Grid view\n\nvar GridView =\n/** @class */\nfunction (_super) {\n  __extends(GridView, _super);\n\n  function GridView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'grid';\n    return _this;\n  }\n\n  GridView.prototype.render = function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  };\n\n  GridView.type = 'grid';\n  return GridView;\n}(ComponentView);\n\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  offset: 0\n};\nexport function install(registers) {\n  registers.registerComponentView(GridView);\n  registers.registerComponentModel(GridModel);\n  registers.registerCoordinateSystem('cartesian2d', Grid);\n  axisModelCreator(registers, 'x', CartesianAxisModel, extraOption);\n  axisModelCreator(registers, 'y', CartesianAxisModel, extraOption);\n  registers.registerComponentView(CartesianXAxisView);\n  registers.registerComponentView(CartesianYAxisView);\n  registers.registerPreprocessor(function (option) {\n    // Only create grid when need\n    if (option.xAxis && option.yAxis && !option.grid) {\n      option.grid = {};\n    }\n  });\n}"],"mappings":";;;;;;;;;AA2CA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAlDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASuF;AAEvF,IAAIA,QAAQ;AACZ;AACA,UAAUC,MAAV,EAAkB;EAChB,IAAAC,gBAAA,EAAUF,QAAV,EAAoBC,MAApB;;EAEA,SAASD,QAAT,GAAoB;IAClB,IAAIG,KAAK,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACG,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;IAEAF,KAAK,CAACG,IAAN,GAAa,MAAb;IACA,OAAOH,KAAP;EACD;;EAEDH,QAAQ,CAACO,SAAT,CAAmBC,MAAnB,GAA4B,UAAUC,SAAV,EAAqBC,OAArB,EAA8B;IACxD,KAAKC,KAAL,CAAWC,SAAX;;IAEA,IAAIH,SAAS,CAACI,GAAV,CAAc,MAAd,CAAJ,EAA2B;MACzB,KAAKF,KAAL,CAAWG,GAAX,CAAe,IAAIC,aAAJ,CAAS;QACtBC,KAAK,EAAEP,SAAS,CAACQ,gBAAV,CAA2BC,OAA3B,EADe;QAEtBC,KAAK,EAAE,IAAAC,cAAA,EAAS;UACdC,IAAI,EAAEZ,SAAS,CAACI,GAAV,CAAc,iBAAd;QADQ,CAAT,EAEJJ,SAAS,CAACa,YAAV,EAFI,CAFe;QAKtBC,MAAM,EAAE,IALc;QAMtBC,EAAE,EAAE,CAAC;MANiB,CAAT,CAAf;IAQD;EACF,CAbD;;EAeAxB,QAAQ,CAACM,IAAT,GAAgB,MAAhB;EACA,OAAON,QAAP;AACD,CA3BD,CA2BEyB,kBA3BF,CAFA;;AA+BA,IAAIC,WAAW,GAAG;EAChB;EACA;EACAC,MAAM,EAAE;AAHQ,CAAlB;;AAKO,SAASC,OAAT,CAAiBC,SAAjB,EAA4B;EACjCA,SAAS,CAACC,qBAAV,CAAgC9B,QAAhC;EACA6B,SAAS,CAACE,sBAAV,CAAiCC,kBAAjC;EACAH,SAAS,CAACI,wBAAV,CAAmC,aAAnC,EAAkDC,aAAlD;EACA,IAAAC,yBAAA,EAAiBN,SAAjB,EAA4B,GAA5B,EAAiCO,6BAAjC,EAAqDV,WAArD;EACA,IAAAS,yBAAA,EAAiBN,SAAjB,EAA4B,GAA5B,EAAiCO,6BAAjC,EAAqDV,WAArD;EACAG,SAAS,CAACC,qBAAV,CAAgCO,qCAAhC;EACAR,SAAS,CAACC,qBAAV,CAAgCQ,qCAAhC;EACAT,SAAS,CAACU,oBAAV,CAA+B,UAAUC,MAAV,EAAkB;IAC/C;IACA,IAAIA,MAAM,CAACC,KAAP,IAAgBD,MAAM,CAACE,KAAvB,IAAgC,CAACF,MAAM,CAACG,IAA5C,EAAkD;MAChDH,MAAM,CAACG,IAAP,GAAc,EAAd;IACD;EACF,CALD;AAMD"},"metadata":{},"sourceType":"script"}