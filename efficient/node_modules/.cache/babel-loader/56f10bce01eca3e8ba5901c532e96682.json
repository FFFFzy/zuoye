{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterTransform = void 0;\n\nvar _conditionalExpression = require(\"../../util/conditionalExpression.js\");\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar _log = require(\"../../util/log.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar filterTransform = {\n  type: 'echarts:filter',\n  // PEDING: enhance to filter by index rather than create new data\n  transform: function (params) {\n    // [Caveat] Fail-Fast:\n    // Do not return the whole dataset unless user config indicate it explicitly.\n    // For example, if no condition specified by mistake, return an empty result\n    // is better than return the entire raw soruce for user to find the mistake.\n    var upstream = params.upstream;\n    var rawItem;\n    var condition = (0, _conditionalExpression.parseConditionalExpression)(params.config, {\n      valueGetterAttrMap: (0, _util.createHashMap)({\n        dimension: true\n      }),\n      prepareGetValue: function (exprOption) {\n        var errMsg = '';\n        var dimLoose = exprOption.dimension;\n\n        if (!(0, _util.hasOwn)(exprOption, 'dimension')) {\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = (0, _log.makePrintable)('Relation condition must has prop \"dimension\" specified.', 'Illegal condition:', exprOption);\n          }\n\n          (0, _log.throwError)(errMsg);\n        }\n\n        var dimInfo = upstream.getDimensionInfo(dimLoose);\n\n        if (!dimInfo) {\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = (0, _log.makePrintable)('Can not find dimension info via: ' + dimLoose + '.\\n', 'Existing dimensions: ', upstream.cloneAllDimensionInfo(), '.\\n', 'Illegal condition:', exprOption, '.\\n');\n          }\n\n          (0, _log.throwError)(errMsg);\n        }\n\n        return {\n          dimIdx: dimInfo.index\n        };\n      },\n      getValue: function (param) {\n        return upstream.retrieveValueFromItem(rawItem, param.dimIdx);\n      }\n    });\n    var resultData = [];\n\n    for (var i = 0, len = upstream.count(); i < len; i++) {\n      rawItem = upstream.getRawDataItem(i);\n\n      if (condition.evaluate()) {\n        resultData.push(rawItem);\n      }\n    }\n\n    return {\n      data: resultData\n    };\n  }\n};\nexports.filterTransform = filterTransform;","map":{"version":3,"names":["filterTransform","type","transform","params","upstream","rawItem","condition","parseConditionalExpression","config","valueGetterAttrMap","createHashMap","dimension","prepareGetValue","exprOption","errMsg","dimLoose","hasOwn","process","env","NODE_ENV","makePrintable","throwError","dimInfo","getDimensionInfo","cloneAllDimensionInfo","dimIdx","index","getValue","param","retrieveValueFromItem","resultData","i","len","count","getRawDataItem","evaluate","push","data"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/component/transform/filterTransform.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { parseConditionalExpression } from '../../util/conditionalExpression.js';\nimport { hasOwn, createHashMap } from 'zrender/lib/core/util.js';\nimport { makePrintable, throwError } from '../../util/log.js';\nexport var filterTransform = {\n  type: 'echarts:filter',\n  // PEDING: enhance to filter by index rather than create new data\n  transform: function (params) {\n    // [Caveat] Fail-Fast:\n    // Do not return the whole dataset unless user config indicate it explicitly.\n    // For example, if no condition specified by mistake, return an empty result\n    // is better than return the entire raw soruce for user to find the mistake.\n    var upstream = params.upstream;\n    var rawItem;\n    var condition = parseConditionalExpression(params.config, {\n      valueGetterAttrMap: createHashMap({\n        dimension: true\n      }),\n      prepareGetValue: function (exprOption) {\n        var errMsg = '';\n        var dimLoose = exprOption.dimension;\n\n        if (!hasOwn(exprOption, 'dimension')) {\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = makePrintable('Relation condition must has prop \"dimension\" specified.', 'Illegal condition:', exprOption);\n          }\n\n          throwError(errMsg);\n        }\n\n        var dimInfo = upstream.getDimensionInfo(dimLoose);\n\n        if (!dimInfo) {\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = makePrintable('Can not find dimension info via: ' + dimLoose + '.\\n', 'Existing dimensions: ', upstream.cloneAllDimensionInfo(), '.\\n', 'Illegal condition:', exprOption, '.\\n');\n          }\n\n          throwError(errMsg);\n        }\n\n        return {\n          dimIdx: dimInfo.index\n        };\n      },\n      getValue: function (param) {\n        return upstream.retrieveValueFromItem(rawItem, param.dimIdx);\n      }\n    });\n    var resultData = [];\n\n    for (var i = 0, len = upstream.count(); i < len; i++) {\n      rawItem = upstream.getRawDataItem(i);\n\n      if (condition.evaluate()) {\n        resultData.push(rawItem);\n      }\n    }\n\n    return {\n      data: resultData\n    };\n  }\n};"],"mappings":";;;;;;;AA2CA;;AACA;;AACA;;AA5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIO,IAAIA,eAAe,GAAG;EAC3BC,IAAI,EAAE,gBADqB;EAE3B;EACAC,SAAS,EAAE,UAAUC,MAAV,EAAkB;IAC3B;IACA;IACA;IACA;IACA,IAAIC,QAAQ,GAAGD,MAAM,CAACC,QAAtB;IACA,IAAIC,OAAJ;IACA,IAAIC,SAAS,GAAG,IAAAC,iDAAA,EAA2BJ,MAAM,CAACK,MAAlC,EAA0C;MACxDC,kBAAkB,EAAE,IAAAC,mBAAA,EAAc;QAChCC,SAAS,EAAE;MADqB,CAAd,CADoC;MAIxDC,eAAe,EAAE,UAAUC,UAAV,EAAsB;QACrC,IAAIC,MAAM,GAAG,EAAb;QACA,IAAIC,QAAQ,GAAGF,UAAU,CAACF,SAA1B;;QAEA,IAAI,CAAC,IAAAK,YAAA,EAAOH,UAAP,EAAmB,WAAnB,CAAL,EAAsC;UACpC,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;YACzCL,MAAM,GAAG,IAAAM,kBAAA,EAAc,yDAAd,EAAyE,oBAAzE,EAA+FP,UAA/F,CAAT;UACD;;UAED,IAAAQ,eAAA,EAAWP,MAAX;QACD;;QAED,IAAIQ,OAAO,GAAGlB,QAAQ,CAACmB,gBAAT,CAA0BR,QAA1B,CAAd;;QAEA,IAAI,CAACO,OAAL,EAAc;UACZ,IAAIL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;YACzCL,MAAM,GAAG,IAAAM,kBAAA,EAAc,sCAAsCL,QAAtC,GAAiD,KAA/D,EAAsE,uBAAtE,EAA+FX,QAAQ,CAACoB,qBAAT,EAA/F,EAAiI,KAAjI,EAAwI,oBAAxI,EAA8JX,UAA9J,EAA0K,KAA1K,CAAT;UACD;;UAED,IAAAQ,eAAA,EAAWP,MAAX;QACD;;QAED,OAAO;UACLW,MAAM,EAAEH,OAAO,CAACI;QADX,CAAP;MAGD,CA7BuD;MA8BxDC,QAAQ,EAAE,UAAUC,KAAV,EAAiB;QACzB,OAAOxB,QAAQ,CAACyB,qBAAT,CAA+BxB,OAA/B,EAAwCuB,KAAK,CAACH,MAA9C,CAAP;MACD;IAhCuD,CAA1C,CAAhB;IAkCA,IAAIK,UAAU,GAAG,EAAjB;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG5B,QAAQ,CAAC6B,KAAT,EAAtB,EAAwCF,CAAC,GAAGC,GAA5C,EAAiDD,CAAC,EAAlD,EAAsD;MACpD1B,OAAO,GAAGD,QAAQ,CAAC8B,cAAT,CAAwBH,CAAxB,CAAV;;MAEA,IAAIzB,SAAS,CAAC6B,QAAV,EAAJ,EAA0B;QACxBL,UAAU,CAACM,IAAX,CAAgB/B,OAAhB;MACD;IACF;;IAED,OAAO;MACLgC,IAAI,EAAEP;IADD,CAAP;EAGD;AAzD0B,CAAtB"},"metadata":{},"sourceType":"script"}