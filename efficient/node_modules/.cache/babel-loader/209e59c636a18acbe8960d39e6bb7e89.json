{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = treeLayout;\n\nvar _traversalHelper = require(\"./traversalHelper.js\");\n\nvar _layoutHelper = require(\"./layoutHelper.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction treeLayout(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = (0, _layoutHelper.getViewRect)(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = (0, _layoutHelper.separation)(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = (0, _layoutHelper.separation)();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    (0, _layoutHelper.init)(virtualRoot);\n    (0, _traversalHelper.eachAfter)(realRoot, _layoutHelper.firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    (0, _traversalHelper.eachBefore)(realRoot, _layoutHelper.secondWalk);\n    var left_1 = realRoot;\n    var right_1 = realRoot;\n    var bottom_1 = realRoot;\n    (0, _traversalHelper.eachBefore)(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left_1.getLayout().x) {\n        left_1 = node;\n      }\n\n      if (x > right_1.getLayout().x) {\n        right_1 = node;\n      }\n\n      if (node.depth > bottom_1.depth) {\n        bottom_1 = node;\n      }\n    });\n    var delta = left_1 === right_1 ? 1 : separation(left_1, right_1) / 2;\n    var tx_1 = delta - left_1.getLayout().x;\n    var kx_1 = 0;\n    var ky_1 = 0;\n    var coorX_1 = 0;\n    var coorY_1 = 0;\n\n    if (layout === 'radial') {\n      kx_1 = width / (right_1.getLayout().x + delta + tx_1); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky_1 = height / (bottom_1.depth - 1 || 1);\n      (0, _traversalHelper.eachBefore)(realRoot, function (node) {\n        coorX_1 = (node.getLayout().x + tx_1) * kx_1;\n        coorY_1 = (node.depth - 1) * ky_1;\n        var finalCoor = (0, _layoutHelper.radialCoordinate)(coorX_1, coorY_1);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX_1,\n          rawY: coorY_1\n        }, true);\n      });\n    } else {\n      var orient_1 = seriesModel.getOrient();\n\n      if (orient_1 === 'RL' || orient_1 === 'LR') {\n        ky_1 = height / (right_1.getLayout().x + delta + tx_1);\n        kx_1 = width / (bottom_1.depth - 1 || 1);\n        (0, _traversalHelper.eachBefore)(realRoot, function (node) {\n          coorY_1 = (node.getLayout().x + tx_1) * ky_1;\n          coorX_1 = orient_1 === 'LR' ? (node.depth - 1) * kx_1 : width - (node.depth - 1) * kx_1;\n          node.setLayout({\n            x: coorX_1,\n            y: coorY_1\n          }, true);\n        });\n      } else if (orient_1 === 'TB' || orient_1 === 'BT') {\n        kx_1 = width / (right_1.getLayout().x + delta + tx_1);\n        ky_1 = height / (bottom_1.depth - 1 || 1);\n        (0, _traversalHelper.eachBefore)(realRoot, function (node) {\n          coorX_1 = (node.getLayout().x + tx_1) * kx_1;\n          coorY_1 = orient_1 === 'TB' ? (node.depth - 1) * ky_1 : height - (node.depth - 1) * ky_1;\n          node.setLayout({\n            x: coorX_1,\n            y: coorY_1\n          }, true);\n        });\n      }\n    }\n  }\n}","map":{"version":3,"names":["treeLayout","ecModel","api","eachSeriesByType","seriesModel","commonLayout","layoutInfo","getViewRect","layout","get","width","height","separation","Math","PI","min","sep","node1","node2","parentNode","depth","virtualRoot","getData","tree","root","realRoot","children","init","eachAfter","firstWalk","hierNode","modifier","prelim","eachBefore","secondWalk","left_1","right_1","bottom_1","node","x","getLayout","delta","tx_1","kx_1","ky_1","coorX_1","coorY_1","finalCoor","radialCoordinate","setLayout","y","rawX","rawY","orient_1","getOrient"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/chart/tree/treeLayout.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { eachAfter, eachBefore } from './traversalHelper.js';\nimport { init, firstWalk, secondWalk, separation as sep, radialCoordinate, getViewRect } from './layoutHelper.js';\nexport default function treeLayout(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left_1 = realRoot;\n    var right_1 = realRoot;\n    var bottom_1 = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left_1.getLayout().x) {\n        left_1 = node;\n      }\n\n      if (x > right_1.getLayout().x) {\n        right_1 = node;\n      }\n\n      if (node.depth > bottom_1.depth) {\n        bottom_1 = node;\n      }\n    });\n    var delta = left_1 === right_1 ? 1 : separation(left_1, right_1) / 2;\n    var tx_1 = delta - left_1.getLayout().x;\n    var kx_1 = 0;\n    var ky_1 = 0;\n    var coorX_1 = 0;\n    var coorY_1 = 0;\n\n    if (layout === 'radial') {\n      kx_1 = width / (right_1.getLayout().x + delta + tx_1); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky_1 = height / (bottom_1.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX_1 = (node.getLayout().x + tx_1) * kx_1;\n        coorY_1 = (node.depth - 1) * ky_1;\n        var finalCoor = radialCoordinate(coorX_1, coorY_1);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX_1,\n          rawY: coorY_1\n        }, true);\n      });\n    } else {\n      var orient_1 = seriesModel.getOrient();\n\n      if (orient_1 === 'RL' || orient_1 === 'LR') {\n        ky_1 = height / (right_1.getLayout().x + delta + tx_1);\n        kx_1 = width / (bottom_1.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY_1 = (node.getLayout().x + tx_1) * ky_1;\n          coorX_1 = orient_1 === 'LR' ? (node.depth - 1) * kx_1 : width - (node.depth - 1) * kx_1;\n          node.setLayout({\n            x: coorX_1,\n            y: coorY_1\n          }, true);\n        });\n      } else if (orient_1 === 'TB' || orient_1 === 'BT') {\n        kx_1 = width / (right_1.getLayout().x + delta + tx_1);\n        ky_1 = height / (bottom_1.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX_1 = (node.getLayout().x + tx_1) * kx_1;\n          coorY_1 = orient_1 === 'TB' ? (node.depth - 1) * ky_1 : height - (node.depth - 1) * ky_1;\n          node.setLayout({\n            x: coorX_1,\n            y: coorY_1\n          }, true);\n        });\n      }\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}