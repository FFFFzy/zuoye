{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.geo2DDimensions = exports.default = void 0;\n\nvar _tslib = require(\"tslib\");\n\nvar zrUtil = _interopRequireWildcard(require(\"zrender/lib/core/util.js\"));\n\nvar _BoundingRect = _interopRequireDefault(require(\"zrender/lib/core/BoundingRect.js\"));\n\nvar _View = _interopRequireDefault(require(\"../View.js\"));\n\nvar _geoSourceManager = _interopRequireDefault(require(\"./geoSourceManager.js\"));\n\nvar _model = require(\"../../util/model.js\");\n\nvar _log = require(\"../../util/log.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GEO_DEFAULT_PARAMS = {\n  'geoJSON': {\n    aspectScale: 0.75,\n    invertLongitute: true\n  },\n  'geoSVG': {\n    aspectScale: 1,\n    invertLongitute: false\n  }\n};\nvar geo2DDimensions = ['lng', 'lat'];\nexports.geo2DDimensions = geo2DDimensions;\n\nvar Geo =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(Geo, _super);\n\n  function Geo(name, map, opt) {\n    var _this = _super.call(this, name) || this;\n\n    _this.dimensions = geo2DDimensions;\n    _this.type = 'geo'; // Only store specified name coord via `addGeoCoord`.\n\n    _this._nameCoordMap = zrUtil.createHashMap();\n    _this.map = map;\n    var projection = opt.projection;\n\n    var source = _geoSourceManager.default.load(map, opt.nameMap, opt.nameProperty);\n\n    var resource = _geoSourceManager.default.getGeoResource(map);\n\n    var resourceType = _this.resourceType = resource ? resource.type : null;\n    var regions = _this.regions = source.regions;\n    var defaultParams = GEO_DEFAULT_PARAMS[resource.type];\n    _this._regionsMap = source.regionsMap;\n    _this.regions = source.regions;\n\n    if (process.env.NODE_ENV !== 'production' && projection) {\n      // Do some check\n      if (resourceType === 'geoSVG') {\n        if (process.env.NODE_ENV !== 'production') {\n          (0, _log.warn)(\"Map \" + map + \" with SVG source can't use projection. Only GeoJSON source supports projection.\");\n        }\n\n        projection = null;\n      }\n\n      if (!(projection.project && projection.unproject)) {\n        if (process.env.NODE_ENV !== 'production') {\n          (0, _log.warn)('project and unproject must be both provided in the projeciton.');\n        }\n\n        projection = null;\n      }\n    }\n\n    _this.projection = projection;\n    var boundingRect;\n\n    if (projection) {\n      // Can't reuse the raw bounding rect\n      for (var i = 0; i < regions.length; i++) {\n        var regionRect = regions[i].getBoundingRect(projection);\n        boundingRect = boundingRect || regionRect.clone();\n        boundingRect.union(regionRect);\n      }\n    } else {\n      boundingRect = source.boundingRect;\n    }\n\n    _this.setBoundingRect(boundingRect.x, boundingRect.y, boundingRect.width, boundingRect.height); // aspectScale and invertLongitute actually is the parameters default raw projection.\n    // So we ignore them if projection is given.\n    // Ignore default aspect scale if projection exits.\n\n\n    _this.aspectScale = projection ? 1 : zrUtil.retrieve2(opt.aspectScale, defaultParams.aspectScale); // Not invert longitute if projection exits.\n\n    _this._invertLongitute = projection ? false : defaultParams.invertLongitute;\n    return _this;\n  }\n\n  Geo.prototype._transformTo = function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new _BoundingRect.default(x, y, width, height));\n    var rawParent = rawTransformable.parent;\n    rawTransformable.parent = null;\n    rawTransformable.decomposeTransform();\n    rawTransformable.parent = rawParent;\n\n    if (invertLongitute) {\n      rawTransformable.scaleY = -rawTransformable.scaleY;\n    }\n\n    this._updateTransform();\n  };\n\n  Geo.prototype.getRegion = function (name) {\n    return this._regionsMap.get(name);\n  };\n\n  Geo.prototype.getRegionByCoord = function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var region = regions[i];\n\n      if (region.type === 'geoJSON' && region.contain(coord)) {\n        return regions[i];\n      }\n    }\n  };\n  /**\n   * Add geoCoord for indexing by name\n   */\n\n\n  Geo.prototype.addGeoCoord = function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  };\n  /**\n   * Get geoCoord by name\n   */\n\n\n  Geo.prototype.getGeoCoord = function (name) {\n    var region = this._regionsMap.get(name); // calcualte center only on demand.\n\n\n    return this._nameCoordMap.get(name) || region && region.getCenter();\n  };\n\n  Geo.prototype.dataToPoint = function (data, noRoam, out) {\n    if (zrUtil.isString(data)) {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      var projection = this.projection;\n\n      if (projection) {\n        // projection may return null point.\n        data = projection.project(data);\n      }\n\n      return data && this.projectedToPoint(data, noRoam, out);\n    }\n  };\n\n  Geo.prototype.pointToData = function (point) {\n    var projection = this.projection;\n\n    if (projection) {\n      // projection may return null point.\n      point = projection.unproject(point);\n    }\n\n    return point && this.pointToProjected(point);\n  };\n  /**\n   * Point to projected data. Same with pointToData when projection is used.\n   */\n\n\n  Geo.prototype.pointToProjected = function (point) {\n    return _super.prototype.pointToData.call(this, point);\n  };\n\n  Geo.prototype.projectedToPoint = function (projected, noRoam, out) {\n    return _super.prototype.dataToPoint.call(this, projected, noRoam, out);\n  };\n\n  Geo.prototype.convertToPixel = function (ecModel, finder, value) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.dataToPoint(value) : null;\n  };\n\n  Geo.prototype.convertFromPixel = function (ecModel, finder, pixel) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.pointToData(pixel) : null;\n  };\n\n  return Geo;\n}(_View.default);\n\n;\nzrUtil.mixin(Geo, _View.default);\n\nfunction getCoordSys(finder) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  return geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map series.\n  || (seriesModel.getReferringComponents('geo', _model.SINGLE_REFERRING).models[0] || {}).coordinateSystem : null;\n}\n\nvar _default = Geo;\nexports.default = _default;","map":{"version":3,"names":["GEO_DEFAULT_PARAMS","aspectScale","invertLongitute","geo2DDimensions","Geo","_super","__extends","name","map","opt","_this","call","dimensions","type","_nameCoordMap","zrUtil","createHashMap","projection","source","geoSourceManager","load","nameMap","nameProperty","resource","getGeoResource","resourceType","regions","defaultParams","_regionsMap","regionsMap","process","env","NODE_ENV","warn","project","unproject","boundingRect","i","length","regionRect","getBoundingRect","clone","union","setBoundingRect","x","y","width","height","retrieve2","_invertLongitute","prototype","_transformTo","rect","rawTransformable","_rawTransformable","transform","calculateTransform","BoundingRect","rawParent","parent","decomposeTransform","scaleY","_updateTransform","getRegion","get","getRegionByCoord","coord","region","contain","addGeoCoord","geoCoord","set","getGeoCoord","getCenter","dataToPoint","data","noRoam","out","isString","projectedToPoint","pointToData","point","pointToProjected","projected","convertToPixel","ecModel","finder","value","coordSys","getCoordSys","convertFromPixel","pixel","View","mixin","geoModel","seriesModel","coordinateSystem","getReferringComponents","SINGLE_REFERRING","models"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/coord/geo/Geo.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport View from '../View.js';\nimport geoSourceManager from './geoSourceManager.js';\nimport { SINGLE_REFERRING } from '../../util/model.js';\nimport { warn } from '../../util/log.js';\nvar GEO_DEFAULT_PARAMS = {\n  'geoJSON': {\n    aspectScale: 0.75,\n    invertLongitute: true\n  },\n  'geoSVG': {\n    aspectScale: 1,\n    invertLongitute: false\n  }\n};\nexport var geo2DDimensions = ['lng', 'lat'];\n\nvar Geo =\n/** @class */\nfunction (_super) {\n  __extends(Geo, _super);\n\n  function Geo(name, map, opt) {\n    var _this = _super.call(this, name) || this;\n\n    _this.dimensions = geo2DDimensions;\n    _this.type = 'geo'; // Only store specified name coord via `addGeoCoord`.\n\n    _this._nameCoordMap = zrUtil.createHashMap();\n    _this.map = map;\n    var projection = opt.projection;\n    var source = geoSourceManager.load(map, opt.nameMap, opt.nameProperty);\n    var resource = geoSourceManager.getGeoResource(map);\n    var resourceType = _this.resourceType = resource ? resource.type : null;\n    var regions = _this.regions = source.regions;\n    var defaultParams = GEO_DEFAULT_PARAMS[resource.type];\n    _this._regionsMap = source.regionsMap;\n    _this.regions = source.regions;\n\n    if (process.env.NODE_ENV !== 'production' && projection) {\n      // Do some check\n      if (resourceType === 'geoSVG') {\n        if (process.env.NODE_ENV !== 'production') {\n          warn(\"Map \" + map + \" with SVG source can't use projection. Only GeoJSON source supports projection.\");\n        }\n\n        projection = null;\n      }\n\n      if (!(projection.project && projection.unproject)) {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('project and unproject must be both provided in the projeciton.');\n        }\n\n        projection = null;\n      }\n    }\n\n    _this.projection = projection;\n    var boundingRect;\n\n    if (projection) {\n      // Can't reuse the raw bounding rect\n      for (var i = 0; i < regions.length; i++) {\n        var regionRect = regions[i].getBoundingRect(projection);\n        boundingRect = boundingRect || regionRect.clone();\n        boundingRect.union(regionRect);\n      }\n    } else {\n      boundingRect = source.boundingRect;\n    }\n\n    _this.setBoundingRect(boundingRect.x, boundingRect.y, boundingRect.width, boundingRect.height); // aspectScale and invertLongitute actually is the parameters default raw projection.\n    // So we ignore them if projection is given.\n    // Ignore default aspect scale if projection exits.\n\n\n    _this.aspectScale = projection ? 1 : zrUtil.retrieve2(opt.aspectScale, defaultParams.aspectScale); // Not invert longitute if projection exits.\n\n    _this._invertLongitute = projection ? false : defaultParams.invertLongitute;\n    return _this;\n  }\n\n  Geo.prototype._transformTo = function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    var rawParent = rawTransformable.parent;\n    rawTransformable.parent = null;\n    rawTransformable.decomposeTransform();\n    rawTransformable.parent = rawParent;\n\n    if (invertLongitute) {\n      rawTransformable.scaleY = -rawTransformable.scaleY;\n    }\n\n    this._updateTransform();\n  };\n\n  Geo.prototype.getRegion = function (name) {\n    return this._regionsMap.get(name);\n  };\n\n  Geo.prototype.getRegionByCoord = function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var region = regions[i];\n\n      if (region.type === 'geoJSON' && region.contain(coord)) {\n        return regions[i];\n      }\n    }\n  };\n  /**\n   * Add geoCoord for indexing by name\n   */\n\n\n  Geo.prototype.addGeoCoord = function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  };\n  /**\n   * Get geoCoord by name\n   */\n\n\n  Geo.prototype.getGeoCoord = function (name) {\n    var region = this._regionsMap.get(name); // calcualte center only on demand.\n\n\n    return this._nameCoordMap.get(name) || region && region.getCenter();\n  };\n\n  Geo.prototype.dataToPoint = function (data, noRoam, out) {\n    if (zrUtil.isString(data)) {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      var projection = this.projection;\n\n      if (projection) {\n        // projection may return null point.\n        data = projection.project(data);\n      }\n\n      return data && this.projectedToPoint(data, noRoam, out);\n    }\n  };\n\n  Geo.prototype.pointToData = function (point) {\n    var projection = this.projection;\n\n    if (projection) {\n      // projection may return null point.\n      point = projection.unproject(point);\n    }\n\n    return point && this.pointToProjected(point);\n  };\n  /**\n   * Point to projected data. Same with pointToData when projection is used.\n   */\n\n\n  Geo.prototype.pointToProjected = function (point) {\n    return _super.prototype.pointToData.call(this, point);\n  };\n\n  Geo.prototype.projectedToPoint = function (projected, noRoam, out) {\n    return _super.prototype.dataToPoint.call(this, projected, noRoam, out);\n  };\n\n  Geo.prototype.convertToPixel = function (ecModel, finder, value) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.dataToPoint(value) : null;\n  };\n\n  Geo.prototype.convertFromPixel = function (ecModel, finder, pixel) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.pointToData(pixel) : null;\n  };\n\n  return Geo;\n}(View);\n\n;\nzrUtil.mixin(Geo, View);\n\nfunction getCoordSys(finder) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  return geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map series.\n  || (seriesModel.getReferringComponents('geo', SINGLE_REFERRING).models[0] || {}).coordinateSystem : null;\n}\n\nexport default Geo;"],"mappings":"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"},"metadata":{},"sourceType":"script"}