{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _tslib = require(\"tslib\");\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar _env = _interopRequireDefault(require(\"zrender/lib/core/env.js\"));\n\nvar _TooltipHTMLContent = _interopRequireDefault(require(\"./TooltipHTMLContent.js\"));\n\nvar _TooltipRichContent = _interopRequireDefault(require(\"./TooltipRichContent.js\"));\n\nvar _format = require(\"../../util/format.js\");\n\nvar _number = require(\"../../util/number.js\");\n\nvar _graphic = require(\"../../util/graphic.js\");\n\nvar _findPointFromSeries = _interopRequireDefault(require(\"../axisPointer/findPointFromSeries.js\"));\n\nvar _layout = require(\"../../util/layout.js\");\n\nvar _Model = _interopRequireDefault(require(\"../../model/Model.js\"));\n\nvar globalListener = _interopRequireWildcard(require(\"../axisPointer/globalListener.js\"));\n\nvar axisHelper = _interopRequireWildcard(require(\"../../coord/axisHelper.js\"));\n\nvar axisPointerViewHelper = _interopRequireWildcard(require(\"../axisPointer/viewHelper.js\"));\n\nvar _model = require(\"../../util/model.js\");\n\nvar _Component = _interopRequireDefault(require(\"../../view/Component.js\"));\n\nvar _time = require(\"../../util/time.js\");\n\nvar _innerStore = require(\"../../util/innerStore.js\");\n\nvar _helper = require(\"./helper.js\");\n\nvar _dataFormat = require(\"../../model/mixin/dataFormat.js\");\n\nvar _tooltipMarkup = require(\"./tooltipMarkup.js\");\n\nvar _event = require(\"../../util/event.js\");\n\nvar _throttle = require(\"../../util/throttle.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar proxyRect = new _graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar TooltipView =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(TooltipView, _super);\n\n  function TooltipView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TooltipView.type;\n    return _this;\n  }\n\n  TooltipView.prototype.init = function (ecModel, api) {\n    if (_env.default.node || !api.getDom()) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = this._renderMode = (0, _model.getTooltipRenderMode)(tooltipModel.get('renderMode'));\n    this._tooltipContent = renderMode === 'richText' ? new _TooltipRichContent.default(api) : new _TooltipHTMLContent.default(api.getDom(), api, {\n      appendToBody: tooltipModel.get('appendToBody', true)\n    });\n  };\n\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\n    if (_env.default.node || !api.getDom()) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    this._tooltipModel = tooltipModel;\n    this._ecModel = ecModel;\n    this._api = api;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow(); // PENDING\n    // `mousemove` event will be triggered very frequently when the mouse moves fast,\n    // which causes that the `updatePosition` function was also called frequently.\n    // In Chrome with devtools open and Firefox, tooltip looks laggy and shakes. See #14695 #16101\n    // To avoid frequent triggering,\n    // consider throttling it in 50ms when transition is enabled\n\n\n    if (this._renderMode !== 'richText' && tooltipModel.get('transitionDuration')) {\n      (0, _throttle.createOrUpdate)(this, '_updatePosition', 50, 'fixRate');\n    } else {\n      (0, _throttle.clear)(this, '_updatePosition');\n    }\n  };\n\n  TooltipView.prototype._initGlobalListener = function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, (0, _util.bind)(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  };\n\n  TooltipView.prototype._keepShow = function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api;\n    var triggerOn = tooltipModel.get('triggerOn'); // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && triggerOn !== 'none' && triggerOn !== 'click') {\n      var self_1 = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self_1._lastX,\n          y: self_1._lastY,\n          dataByCoordSys: self_1._lastDataByCoordSys\n        });\n      });\n    }\n  };\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n\n\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || _env.default.node || !api.getDom()) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n    var cmptRef = findComponentReference(payload, ecModel, api);\n\n    if (cmptRef) {\n      var rect = cmptRef.el.getBoundingRect().clone();\n      rect.applyTransform(cmptRef.el.transform);\n\n      this._tryShow({\n        offsetX: rect.x + rect.width / 2,\n        offsetY: rect.y + rect.height / 2,\n        target: cmptRef.el,\n        position: payload.position,\n        // When manully trigger, the mouse is not on the el, so we'd better to\n        // position tooltip on the bottom of the el and display arrow is possible.\n        positionDefault: 'bottom'\n      }, dispatchAction);\n    } else if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.x = payload.x;\n      el.y = payload.y;\n      el.update();\n      (0, _innerStore.getECData)(el).tooltipConfig = {\n        name: null,\n        option: payload.tooltip\n      }; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = (0, _findPointFromSeries.default)(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          target: pointInfo.el,\n          position: payload.position,\n          // When manully trigger, the mouse is not on the el, so we'd better to\n          // position tooltip on the bottom of the el and display arrow is possible.\n          positionDefault: 'bottom'\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  };\n\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  }; // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n\n\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex; // @ts-ignore\n\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model], this._tooltipModel);\n\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  };\n\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } else if (el) {\n      this._lastDataByCoordSys = null;\n      var seriesDispatcher_1;\n      var cmptDispatcher_1;\n      (0, _event.findEventDispatcher)(el, function (target) {\n        // Always show item tooltip if mouse is on the element with dataIndex\n        if ((0, _innerStore.getECData)(target).dataIndex != null) {\n          seriesDispatcher_1 = target;\n          return true;\n        } // Tooltip provided directly. Like legend.\n\n\n        if ((0, _innerStore.getECData)(target).tooltipConfig != null) {\n          cmptDispatcher_1 = target;\n          return true;\n        }\n      }, true);\n\n      if (seriesDispatcher_1) {\n        this._showSeriesItemTooltip(e, seriesDispatcher_1, dispatchAction);\n      } else if (cmptDispatcher_1) {\n        this._showComponentItemTooltip(e, cmptDispatcher_1, dispatchAction);\n      } else {\n        this._hide(dispatchAction);\n      }\n    } else {\n      this._lastDataByCoordSys = null;\n\n      this._hide(dispatchAction);\n    }\n  };\n\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = (0, _util.bind)(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  };\n\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption], globalTooltipModel);\n    var renderMode = this._renderMode;\n    var cbParamsList = [];\n    var articleMarkup = (0, _tooltipMarkup.createTooltipMarkup)('section', {\n      blocks: [],\n      noHeader: true\n    }); // Only for legacy: `Serise['formatTooltip']` returns a string.\n\n    var markupTextArrLegacy = [];\n    var markupStyleCreator = new _tooltipMarkup.TooltipMarkupStyleCreator();\n    (0, _util.each)(dataByCoordSys, function (itemCoordSys) {\n      (0, _util.each)(itemCoordSys.dataByAxis, function (axisItem) {\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\n        var axisValue = axisItem.value;\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\n        var axisSectionMarkup = (0, _tooltipMarkup.createTooltipMarkup)('section', {\n          header: axisValueLabel,\n          noHeader: !(0, _util.trim)(axisValueLabel),\n          sortBlocks: true,\n          blocks: []\n        });\n        articleMarkup.blocks.push(axisSectionMarkup);\n        (0, _util.each)(axisItem.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var cbParams = series.getDataParams(dataIndex); // Can't find data.\n\n          if (cbParams.dataIndex < 0) {\n            return;\n          }\n\n          cbParams.axisDim = axisItem.axisDim;\n          cbParams.axisIndex = axisItem.axisIndex;\n          cbParams.axisType = axisItem.axisType;\n          cbParams.axisId = axisItem.axisId;\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\n            value: axisValue\n          });\n          cbParams.axisValueLabel = axisValueLabel; // Pre-create marker style for makers. Users can assemble richText\n          // text in `formatter` callback and use those markers style.\n\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', (0, _format.convertToColorString)(cbParams.color), renderMode);\n          var seriesTooltipResult = (0, _dataFormat.normalizeTooltipFormatResult)(series.formatTooltip(dataIndex, true, null));\n          var frag = seriesTooltipResult.frag;\n\n          if (frag) {\n            var valueFormatter = buildTooltipModel([series], globalTooltipModel).get('valueFormatter');\n            axisSectionMarkup.blocks.push(valueFormatter ? (0, _util.extend)({\n              valueFormatter: valueFormatter\n            }, frag) : frag);\n          }\n\n          if (seriesTooltipResult.text) {\n            markupTextArrLegacy.push(seriesTooltipResult.text);\n          }\n\n          cbParamsList.push(cbParams);\n        });\n      });\n    }); // In most cases, the second axis is displays upper on the first one.\n    // So we reverse it to look better.\n\n    articleMarkup.blocks.reverse();\n    markupTextArrLegacy.reverse();\n    var positionExpr = e.position;\n    var orderMode = singleTooltipModel.get('order');\n    var builtMarkupText = (0, _tooltipMarkup.buildTooltipMarkup)(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys, cbParamsList)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  };\n\n  TooltipView.prototype._showSeriesItemTooltip = function (e, dispatcher, dispatchAction) {\n    var ecModel = this._ecModel;\n    var ecData = (0, _innerStore.getECData)(dispatcher); // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = ecData.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = ecData.dataModel || seriesModel;\n    var dataIndex = ecData.dataIndex;\n    var dataType = ecData.dataType;\n    var data = dataModel.getData(dataType);\n    var renderMode = this._renderMode;\n    var positionDefault = e.positionDefault;\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model], this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var markupStyleCreator = new _tooltipMarkup.TooltipMarkupStyleCreator(); // Pre-create marker style for makers. Users can assemble richText\n    // text in `formatter` callback and use those markers style.\n\n    params.marker = markupStyleCreator.makeTooltipMarker('item', (0, _format.convertToColorString)(params.color), renderMode);\n    var seriesTooltipResult = (0, _dataFormat.normalizeTooltipFormatResult)(dataModel.formatTooltip(dataIndex, false, dataType));\n    var orderMode = tooltipModel.get('order');\n    var valueFormatter = tooltipModel.get('valueFormatter');\n    var frag = seriesTooltipResult.frag;\n    var markupText = frag ? (0, _tooltipMarkup.buildTooltipMarkup)(valueFormatter ? (0, _util.extend)({\n      valueFormatter: valueFormatter\n    }, frag) : frag, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.text;\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\n    var ecData = (0, _innerStore.getECData)(el);\n    var tooltipConfig = ecData.tooltipConfig;\n    var tooltipOpt = tooltipConfig.option || {};\n\n    if ((0, _util.isString)(tooltipOpt)) {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var tooltipModelCascade = [tooltipOpt];\n\n    var cmpt = this._ecModel.getComponent(ecData.componentMainType, ecData.componentIndex);\n\n    if (cmpt) {\n      tooltipModelCascade.push(cmpt);\n    } // In most cases, component tooltip formatter has different params with series tooltip formatter,\n    // so that they can not share the same formatter. Since the global tooltip formatter is used for series\n    // by convension, we do not use it as the default formatter for component.\n\n\n    tooltipModelCascade.push({\n      formatter: tooltipOpt.content\n    });\n    var positionDefault = e.positionDefault;\n    var subTooltipModel = buildTooltipModel(tooltipModelCascade, this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random() + ''; // PENDING: this case do not support richText style yet.\n\n    var markupStyleCreator = new _tooltipMarkup.TooltipMarkupStyleCreator(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      // Use formatterParams from element defined in component\n      // Avoid users modify it.\n      var formatterParams = (0, _util.clone)(subTooltipModel.get('formatterParams') || {});\n\n      this._showTooltipContent(subTooltipModel, defaultHtml, formatterParams, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showTooltipContent = function ( // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\n  // Instead of top level tooltip.\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\n\n    var nearPointColor = nearPoint.color;\n\n    if (formatter) {\n      if ((0, _util.isString)(formatter)) {\n        var useUTC = tooltipModel.ecModel.get('useUTC');\n        var params0 = (0, _util.isArray)(params) ? params[0] : params;\n        var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\n        html = formatter;\n\n        if (isTimeAxis) {\n          html = (0, _time.format)(params0.axisValue, html, useUTC);\n        }\n\n        html = (0, _format.formatTpl)(html, params, true);\n      } else if ((0, _util.isFunction)(formatter)) {\n        var callback = (0, _util.bind)(function (cbTicket, html) {\n          if (cbTicket === this._ticket) {\n            tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n\n            this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n          }\n        }, this);\n        this._ticket = asyncTicket;\n        html = formatter(params, asyncTicket, callback);\n      } else {\n        html = formatter;\n      }\n    }\n\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n    tooltipContent.show(tooltipModel, nearPointColor);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  };\n\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\n    if (trigger === 'axis' || (0, _util.isArray)(tooltipDataParams)) {\n      return {\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\n      };\n    }\n\n    if (!(0, _util.isArray)(tooltipDataParams)) {\n      return {\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\n      };\n    }\n  };\n\n  TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x, // Mouse x\n  y, // Mouse y\n  content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if ((0, _util.isFunction)(positionExpr)) {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if ((0, _util.isArray)(positionExpr)) {\n      x = (0, _number.parsePercent)(positionExpr[0], viewWidth);\n      y = (0, _number.parsePercent)(positionExpr[1], viewHeight);\n    } else if ((0, _util.isObject)(positionExpr)) {\n      var boxLayoutPosition = positionExpr;\n      boxLayoutPosition.width = contentSize[0];\n      boxLayoutPosition.height = contentSize[1];\n      var layoutRect = (0, _layout.getLayoutRect)(boxLayoutPosition, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if ((0, _util.isString)(positionExpr) && el) {\n      var pos = calcTooltipPosition(positionExpr, rect, contentSize, tooltipModel.get('borderWidth'));\n      x = pos[0];\n      y = pos[1];\n    } else {\n      var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if ((0, _helper.shouldTooltipConfine)(tooltipModel)) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  }; // FIXME\n  // Should we remove this but leave this to user?\n\n\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys, cbParamsList) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var lastCbParamsList = this._cbParamsList;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && (0, _util.each)(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && (0, _util.each)(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && (0, _util.each)(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        }); // check is cbParams data value changed\n\n        lastCbParamsList && (0, _util.each)(lastItem.seriesDataIndices, function (idxItem) {\n          var seriesIdx = idxItem.seriesIndex;\n          var cbParams = cbParamsList[seriesIdx];\n          var lastCbParams = lastCbParamsList[seriesIdx];\n\n          if (cbParams && lastCbParams && lastCbParams.data !== cbParams.data) {\n            contentNotChanged = false;\n          }\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    this._cbParamsList = cbParamsList;\n    return !!contentNotChanged;\n  };\n\n  TooltipView.prototype._hide = function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype.dispose = function (ecModel, api) {\n    if (_env.default.node || !api.getDom()) {\n      return;\n    }\n\n    (0, _throttle.clear)(this, '_updatePosition');\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  };\n\n  TooltipView.type = 'tooltip';\n  return TooltipView;\n}(_Component.default);\n/**\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade, globalTooltipModel, defaultTooltipOption) {\n  // Last is always tooltip model.\n  var ecModel = globalTooltipModel.ecModel;\n  var resultModel;\n\n  if (defaultTooltipOption) {\n    resultModel = new _Model.default(defaultTooltipOption, ecModel, ecModel);\n    resultModel = new _Model.default(globalTooltipModel.option, resultModel, ecModel);\n  } else {\n    resultModel = globalTooltipModel;\n  }\n\n  for (var i = modelCascade.length - 1; i >= 0; i--) {\n    var tooltipOpt = modelCascade[i];\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof _Model.default) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if ((0, _util.isString)(tooltipOpt)) {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      if (tooltipOpt) {\n        resultModel = new _Model.default(tooltipOpt, resultModel, ecModel);\n      }\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || (0, _util.bind)(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n\n  if (gapH != null) {\n    // Add extra 2 pixels for this case:\n    // At present the \"values\" in defaut tooltip are using CSS `float: right`.\n    // When the right edge of the tooltip box is on the right side of the\n    // viewport, the `float` layout might push the \"values\" to the second line.\n    if (x + width + gapH + 2 > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize, borderWidth) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var offset = Math.ceil(Math.SQRT2 * borderWidth) + 8;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - offset;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + offset;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n/**\n * Find target component by payload like:\n * ```js\n * { legendId: 'some_id', name: 'xxx' }\n * { toolboxIndex: 1, name: 'xxx' }\n * { geoName: 'some_name', name: 'xxx' }\n * ```\n * PENDING: at present only\n *\n * If not found, return null/undefined.\n */\n\n\nfunction findComponentReference(payload, ecModel, api) {\n  var queryOptionMap = (0, _model.preParseFinder)(payload).queryOptionMap;\n  var componentMainType = queryOptionMap.keys()[0];\n\n  if (!componentMainType || componentMainType === 'series') {\n    return;\n  }\n\n  var queryResult = (0, _model.queryReferringComponents)(ecModel, componentMainType, queryOptionMap.get(componentMainType), {\n    useDefault: false,\n    enableAll: false,\n    enableNone: false\n  });\n  var model = queryResult.models[0];\n\n  if (!model) {\n    return;\n  }\n\n  var view = api.getViewOfComponentModel(model);\n  var el;\n  view.group.traverse(function (subEl) {\n    var tooltipConfig = (0, _innerStore.getECData)(subEl).tooltipConfig;\n\n    if (tooltipConfig && tooltipConfig.name === payload.name) {\n      el = subEl;\n      return true; // stop\n    }\n  });\n\n  if (el) {\n    return {\n      componentMainType: componentMainType,\n      componentIndex: model.componentIndex,\n      el: el\n    };\n  }\n}\n\nvar _default = TooltipView;\nexports.default = _default;","map":{"version":3,"names":["proxyRect","Rect","shape","x","y","width","height","TooltipView","_super","__extends","_this","apply","arguments","type","prototype","init","ecModel","api","env","node","getDom","tooltipModel","getComponent","renderMode","_renderMode","getTooltipRenderMode","get","_tooltipContent","TooltipRichContent","TooltipHTMLContent","appendToBody","render","group","removeAll","_tooltipModel","_ecModel","_api","_alwaysShowContent","tooltipContent","update","setEnterable","_initGlobalListener","_keepShow","createOrUpdate","clear","triggerOn","globalListener","register","bind","currTrigger","e","dispatchAction","indexOf","_tryShow","_hide","_lastX","_lastY","self_1","clearTimeout","_refreshUpdateTimeout","setTimeout","isDisposed","manuallyShowTip","dataByCoordSys","_lastDataByCoordSys","payload","from","uid","makeDispatchAction","_ticket","cmptRef","findComponentReference","rect","el","getBoundingRect","clone","applyTransform","transform","offsetX","offsetY","target","position","positionDefault","tooltip","getECData","tooltipConfig","name","option","tooltipOption","seriesIndex","_manuallyAxisShowTip","pointInfo","findPointFromSeries","cx","point","cy","getZr","findHover","manuallyHideTip","hideLater","dataIndex","coordSysAxesInfo","seriesModel","getSeriesByIndex","data","getData","tooltipCascadedModel","buildTooltipModel","getItemModel","coordinateSystem","model","length","_showAxisTooltip","seriesDispatcher_1","cmptDispatcher_1","findEventDispatcher","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","cb","delay","_showTimout","globalTooltipModel","singleTooltipModel","cbParamsList","articleMarkup","createTooltipMarkup","blocks","noHeader","markupTextArrLegacy","markupStyleCreator","TooltipMarkupStyleCreator","each","itemCoordSys","dataByAxis","axisItem","axisModel","axisDim","axisIndex","axisValue","value","axisValueLabel","axisPointerViewHelper","getValueLabel","axis","seriesDataIndices","valueLabelOpt","axisSectionMarkup","header","trim","sortBlocks","push","idxItem","series","dataIndexInside","cbParams","getDataParams","axisType","axisId","axisHelper","getAxisRawValue","marker","makeTooltipMarker","convertToColorString","color","seriesTooltipResult","normalizeTooltipFormatResult","formatTooltip","frag","valueFormatter","extend","text","reverse","positionExpr","orderMode","builtMarkupText","buildTooltipMarkup","unshift","blockBreak","allMarkupText","join","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","Math","random","dispatcher","ecData","dataModel","dataType","tooltipTrigger","params","markupText","asyncTicket","getRawIndex","tooltipOpt","isString","content","formatter","tooltipModelCascade","cmpt","componentMainType","componentIndex","subTooltipModel","defaultHtml","formatterParams","html","nearPoint","_getNearestPoint","nearPointColor","useUTC","params0","isArray","isTimeAxis","timeFormat","formatTpl","isFunction","callback","cbTicket","setContent","show","tooltipDataParams","trigger","borderColor","viewWidth","getWidth","viewHeight","getHeight","contentSize","getSize","align","vAlign","viewSize","slice","parsePercent","isObject","boxLayoutPosition","layoutRect","getLayoutRect","pos","calcTooltipPosition","refixTooltipPosition","isCenterAlign","shouldTooltipConfine","confineTooltipPosition","moveTo","lastCoordSys","lastCbParamsList","_cbParamsList","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","j","newIdxItem","seriesIdx","lastCbParams","dispose","unregister","ComponentView","modelCascade","defaultTooltipOption","resultModel","Model","i","gapH","gapV","size","min","max","borderWidth","domWidth","domHeight","offset","ceil","SQRT2","rectWidth","rectHeight","queryOptionMap","preParseFinder","keys","queryResult","queryReferringComponents","useDefault","enableAll","enableNone","models","view","getViewOfComponentModel","traverse","subEl"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/component/tooltip/TooltipView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport { bind, each, clone, trim, isString, isFunction, isArray, isObject, extend } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport TooltipHTMLContent from './TooltipHTMLContent.js';\nimport TooltipRichContent from './TooltipRichContent.js';\nimport { convertToColorString, formatTpl } from '../../util/format.js';\nimport { parsePercent } from '../../util/number.js';\nimport { Rect } from '../../util/graphic.js';\nimport findPointFromSeries from '../axisPointer/findPointFromSeries.js';\nimport { getLayoutRect } from '../../util/layout.js';\nimport Model from '../../model/Model.js';\nimport * as globalListener from '../axisPointer/globalListener.js';\nimport * as axisHelper from '../../coord/axisHelper.js';\nimport * as axisPointerViewHelper from '../axisPointer/viewHelper.js';\nimport { getTooltipRenderMode, preParseFinder, queryReferringComponents } from '../../util/model.js';\nimport ComponentView from '../../view/Component.js';\nimport { format as timeFormat } from '../../util/time.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { shouldTooltipConfine } from './helper.js';\nimport { normalizeTooltipFormatResult } from '../../model/mixin/dataFormat.js';\nimport { createTooltipMarkup, buildTooltipMarkup, TooltipMarkupStyleCreator } from './tooltipMarkup.js';\nimport { findEventDispatcher } from '../../util/event.js';\nimport { clear, createOrUpdate } from '../../util/throttle.js';\nvar proxyRect = new Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar TooltipView =\n/** @class */\nfunction (_super) {\n  __extends(TooltipView, _super);\n\n  function TooltipView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TooltipView.type;\n    return _this;\n  }\n\n  TooltipView.prototype.init = function (ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = this._renderMode = getTooltipRenderMode(tooltipModel.get('renderMode'));\n    this._tooltipContent = renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api.getDom(), api, {\n      appendToBody: tooltipModel.get('appendToBody', true)\n    });\n  };\n\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    this._tooltipModel = tooltipModel;\n    this._ecModel = ecModel;\n    this._api = api;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow(); // PENDING\n    // `mousemove` event will be triggered very frequently when the mouse moves fast,\n    // which causes that the `updatePosition` function was also called frequently.\n    // In Chrome with devtools open and Firefox, tooltip looks laggy and shakes. See #14695 #16101\n    // To avoid frequent triggering,\n    // consider throttling it in 50ms when transition is enabled\n\n\n    if (this._renderMode !== 'richText' && tooltipModel.get('transitionDuration')) {\n      createOrUpdate(this, '_updatePosition', 50, 'fixRate');\n    } else {\n      clear(this, '_updatePosition');\n    }\n  };\n\n  TooltipView.prototype._initGlobalListener = function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  };\n\n  TooltipView.prototype._keepShow = function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api;\n    var triggerOn = tooltipModel.get('triggerOn'); // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && triggerOn !== 'none' && triggerOn !== 'click') {\n      var self_1 = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self_1._lastX,\n          y: self_1._lastY,\n          dataByCoordSys: self_1._lastDataByCoordSys\n        });\n      });\n    }\n  };\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n\n\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node || !api.getDom()) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n    var cmptRef = findComponentReference(payload, ecModel, api);\n\n    if (cmptRef) {\n      var rect = cmptRef.el.getBoundingRect().clone();\n      rect.applyTransform(cmptRef.el.transform);\n\n      this._tryShow({\n        offsetX: rect.x + rect.width / 2,\n        offsetY: rect.y + rect.height / 2,\n        target: cmptRef.el,\n        position: payload.position,\n        // When manully trigger, the mouse is not on the el, so we'd better to\n        // position tooltip on the bottom of the el and display arrow is possible.\n        positionDefault: 'bottom'\n      }, dispatchAction);\n    } else if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.x = payload.x;\n      el.y = payload.y;\n      el.update();\n      getECData(el).tooltipConfig = {\n        name: null,\n        option: payload.tooltip\n      }; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          target: pointInfo.el,\n          position: payload.position,\n          // When manully trigger, the mouse is not on the el, so we'd better to\n          // position tooltip on the bottom of the el and display arrow is possible.\n          positionDefault: 'bottom'\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  };\n\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  }; // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n\n\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex; // @ts-ignore\n\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model], this._tooltipModel);\n\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  };\n\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } else if (el) {\n      this._lastDataByCoordSys = null;\n      var seriesDispatcher_1;\n      var cmptDispatcher_1;\n      findEventDispatcher(el, function (target) {\n        // Always show item tooltip if mouse is on the element with dataIndex\n        if (getECData(target).dataIndex != null) {\n          seriesDispatcher_1 = target;\n          return true;\n        } // Tooltip provided directly. Like legend.\n\n\n        if (getECData(target).tooltipConfig != null) {\n          cmptDispatcher_1 = target;\n          return true;\n        }\n      }, true);\n\n      if (seriesDispatcher_1) {\n        this._showSeriesItemTooltip(e, seriesDispatcher_1, dispatchAction);\n      } else if (cmptDispatcher_1) {\n        this._showComponentItemTooltip(e, cmptDispatcher_1, dispatchAction);\n      } else {\n        this._hide(dispatchAction);\n      }\n    } else {\n      this._lastDataByCoordSys = null;\n\n      this._hide(dispatchAction);\n    }\n  };\n\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  };\n\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption], globalTooltipModel);\n    var renderMode = this._renderMode;\n    var cbParamsList = [];\n    var articleMarkup = createTooltipMarkup('section', {\n      blocks: [],\n      noHeader: true\n    }); // Only for legacy: `Serise['formatTooltip']` returns a string.\n\n    var markupTextArrLegacy = [];\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    each(dataByCoordSys, function (itemCoordSys) {\n      each(itemCoordSys.dataByAxis, function (axisItem) {\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\n        var axisValue = axisItem.value;\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\n        var axisSectionMarkup = createTooltipMarkup('section', {\n          header: axisValueLabel,\n          noHeader: !trim(axisValueLabel),\n          sortBlocks: true,\n          blocks: []\n        });\n        articleMarkup.blocks.push(axisSectionMarkup);\n        each(axisItem.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var cbParams = series.getDataParams(dataIndex); // Can't find data.\n\n          if (cbParams.dataIndex < 0) {\n            return;\n          }\n\n          cbParams.axisDim = axisItem.axisDim;\n          cbParams.axisIndex = axisItem.axisIndex;\n          cbParams.axisType = axisItem.axisType;\n          cbParams.axisId = axisItem.axisId;\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\n            value: axisValue\n          });\n          cbParams.axisValueLabel = axisValueLabel; // Pre-create marker style for makers. Users can assemble richText\n          // text in `formatter` callback and use those markers style.\n\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(cbParams.color), renderMode);\n          var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\n          var frag = seriesTooltipResult.frag;\n\n          if (frag) {\n            var valueFormatter = buildTooltipModel([series], globalTooltipModel).get('valueFormatter');\n            axisSectionMarkup.blocks.push(valueFormatter ? extend({\n              valueFormatter: valueFormatter\n            }, frag) : frag);\n          }\n\n          if (seriesTooltipResult.text) {\n            markupTextArrLegacy.push(seriesTooltipResult.text);\n          }\n\n          cbParamsList.push(cbParams);\n        });\n      });\n    }); // In most cases, the second axis is displays upper on the first one.\n    // So we reverse it to look better.\n\n    articleMarkup.blocks.reverse();\n    markupTextArrLegacy.reverse();\n    var positionExpr = e.position;\n    var orderMode = singleTooltipModel.get('order');\n    var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys, cbParamsList)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  };\n\n  TooltipView.prototype._showSeriesItemTooltip = function (e, dispatcher, dispatchAction) {\n    var ecModel = this._ecModel;\n    var ecData = getECData(dispatcher); // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = ecData.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = ecData.dataModel || seriesModel;\n    var dataIndex = ecData.dataIndex;\n    var dataType = ecData.dataType;\n    var data = dataModel.getData(dataType);\n    var renderMode = this._renderMode;\n    var positionDefault = e.positionDefault;\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model], this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Pre-create marker style for makers. Users can assemble richText\n    // text in `formatter` callback and use those markers style.\n\n    params.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(params.color), renderMode);\n    var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\n    var orderMode = tooltipModel.get('order');\n    var valueFormatter = tooltipModel.get('valueFormatter');\n    var frag = seriesTooltipResult.frag;\n    var markupText = frag ? buildTooltipMarkup(valueFormatter ? extend({\n      valueFormatter: valueFormatter\n    }, frag) : frag, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.text;\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\n    var ecData = getECData(el);\n    var tooltipConfig = ecData.tooltipConfig;\n    var tooltipOpt = tooltipConfig.option || {};\n\n    if (isString(tooltipOpt)) {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var tooltipModelCascade = [tooltipOpt];\n\n    var cmpt = this._ecModel.getComponent(ecData.componentMainType, ecData.componentIndex);\n\n    if (cmpt) {\n      tooltipModelCascade.push(cmpt);\n    } // In most cases, component tooltip formatter has different params with series tooltip formatter,\n    // so that they can not share the same formatter. Since the global tooltip formatter is used for series\n    // by convension, we do not use it as the default formatter for component.\n\n\n    tooltipModelCascade.push({\n      formatter: tooltipOpt.content\n    });\n    var positionDefault = e.positionDefault;\n    var subTooltipModel = buildTooltipModel(tooltipModelCascade, this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random() + ''; // PENDING: this case do not support richText style yet.\n\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      // Use formatterParams from element defined in component\n      // Avoid users modify it.\n      var formatterParams = clone(subTooltipModel.get('formatterParams') || {});\n\n      this._showTooltipContent(subTooltipModel, defaultHtml, formatterParams, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showTooltipContent = function ( // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\n  // Instead of top level tooltip.\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\n\n    var nearPointColor = nearPoint.color;\n\n    if (formatter) {\n      if (isString(formatter)) {\n        var useUTC = tooltipModel.ecModel.get('useUTC');\n        var params0 = isArray(params) ? params[0] : params;\n        var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\n        html = formatter;\n\n        if (isTimeAxis) {\n          html = timeFormat(params0.axisValue, html, useUTC);\n        }\n\n        html = formatTpl(html, params, true);\n      } else if (isFunction(formatter)) {\n        var callback = bind(function (cbTicket, html) {\n          if (cbTicket === this._ticket) {\n            tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n\n            this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n          }\n        }, this);\n        this._ticket = asyncTicket;\n        html = formatter(params, asyncTicket, callback);\n      } else {\n        html = formatter;\n      }\n    }\n\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n    tooltipContent.show(tooltipModel, nearPointColor);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  };\n\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\n    if (trigger === 'axis' || isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\n      };\n    }\n\n    if (!isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\n      };\n    }\n  };\n\n  TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x, // Mouse x\n  y, // Mouse y\n  content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (isFunction(positionExpr)) {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (isObject(positionExpr)) {\n      var boxLayoutPosition = positionExpr;\n      boxLayoutPosition.width = contentSize[0];\n      boxLayoutPosition.height = contentSize[1];\n      var layoutRect = getLayoutRect(boxLayoutPosition, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (isString(positionExpr) && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize, tooltipModel.get('borderWidth'));\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (shouldTooltipConfine(tooltipModel)) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  }; // FIXME\n  // Should we remove this but leave this to user?\n\n\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys, cbParamsList) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var lastCbParamsList = this._cbParamsList;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        }); // check is cbParams data value changed\n\n        lastCbParamsList && each(lastItem.seriesDataIndices, function (idxItem) {\n          var seriesIdx = idxItem.seriesIndex;\n          var cbParams = cbParamsList[seriesIdx];\n          var lastCbParams = lastCbParamsList[seriesIdx];\n\n          if (cbParams && lastCbParams && lastCbParams.data !== cbParams.data) {\n            contentNotChanged = false;\n          }\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    this._cbParamsList = cbParamsList;\n    return !!contentNotChanged;\n  };\n\n  TooltipView.prototype._hide = function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype.dispose = function (ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n\n    clear(this, '_updatePosition');\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  };\n\n  TooltipView.type = 'tooltip';\n  return TooltipView;\n}(ComponentView);\n/**\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade, globalTooltipModel, defaultTooltipOption) {\n  // Last is always tooltip model.\n  var ecModel = globalTooltipModel.ecModel;\n  var resultModel;\n\n  if (defaultTooltipOption) {\n    resultModel = new Model(defaultTooltipOption, ecModel, ecModel);\n    resultModel = new Model(globalTooltipModel.option, resultModel, ecModel);\n  } else {\n    resultModel = globalTooltipModel;\n  }\n\n  for (var i = modelCascade.length - 1; i >= 0; i--) {\n    var tooltipOpt = modelCascade[i];\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (isString(tooltipOpt)) {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      if (tooltipOpt) {\n        resultModel = new Model(tooltipOpt, resultModel, ecModel);\n      }\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n\n  if (gapH != null) {\n    // Add extra 2 pixels for this case:\n    // At present the \"values\" in defaut tooltip are using CSS `float: right`.\n    // When the right edge of the tooltip box is on the right side of the\n    // viewport, the `float` layout might push the \"values\" to the second line.\n    if (x + width + gapH + 2 > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize, borderWidth) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var offset = Math.ceil(Math.SQRT2 * borderWidth) + 8;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - offset;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + offset;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n/**\n * Find target component by payload like:\n * ```js\n * { legendId: 'some_id', name: 'xxx' }\n * { toolboxIndex: 1, name: 'xxx' }\n * { geoName: 'some_name', name: 'xxx' }\n * ```\n * PENDING: at present only\n *\n * If not found, return null/undefined.\n */\n\n\nfunction findComponentReference(payload, ecModel, api) {\n  var queryOptionMap = preParseFinder(payload).queryOptionMap;\n  var componentMainType = queryOptionMap.keys()[0];\n\n  if (!componentMainType || componentMainType === 'series') {\n    return;\n  }\n\n  var queryResult = queryReferringComponents(ecModel, componentMainType, queryOptionMap.get(componentMainType), {\n    useDefault: false,\n    enableAll: false,\n    enableNone: false\n  });\n  var model = queryResult.models[0];\n\n  if (!model) {\n    return;\n  }\n\n  var view = api.getViewOfComponentModel(model);\n  var el;\n  view.group.traverse(function (subEl) {\n    var tooltipConfig = getECData(subEl).tooltipConfig;\n\n    if (tooltipConfig && tooltipConfig.name === payload.name) {\n      el = subEl;\n      return true; // stop\n    }\n  });\n\n  if (el) {\n    return {\n      componentMainType: componentMainType,\n      componentIndex: model.componentIndex,\n      el: el\n    };\n  }\n}\n\nexport default TooltipView;"],"mappings":"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"},"metadata":{},"sourceType":"script"}