{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _tslib = require(\"tslib\");\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar _Eventful = _interopRequireDefault(require(\"zrender/lib/core/Eventful.js\"));\n\nvar graphic = _interopRequireWildcard(require(\"../../util/graphic.js\"));\n\nvar interactionMutex = _interopRequireWildcard(require(\"./interactionMutex.js\"));\n\nvar _DataDiffer = _interopRequireDefault(require(\"../../data/DataDiffer.js\"));\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BRUSH_PANEL_GLOBAL = true;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(210,219,238,0.3)',\n    fill: '#D2DBEE'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * params:\n *     areas: Array.<Array>, coord relates to container group,\n *                             If no container specified, to global.\n *     opt {\n *         isEnd: boolean,\n *         removeOnClick: boolean\n *     }\n */\n\nvar BrushController =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(BrushController, _super);\n\n  function BrushController(zr) {\n    var _this = _super.call(this) || this;\n    /**\n     * @internal\n     */\n\n\n    _this._track = [];\n    /**\n     * @internal\n     */\n\n    _this._covers = [];\n    _this._handlers = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      (0, _util.assert)(zr);\n    }\n\n    _this._zr = zr;\n    _this.group = new graphic.Group();\n    _this._uid = 'brushController_' + baseUID++;\n    (0, _util.each)(pointerHandlers, function (handler, eventName) {\n      this._handlers[eventName] = (0, _util.bind)(handler, this);\n    }, _this);\n    return _this;\n  }\n  /**\n   * If set to `false`, select disabled.\n   */\n\n\n  BrushController.prototype.enableBrush = function (brushOption) {\n    if (process.env.NODE_ENV !== 'production') {\n      (0, _util.assert)(this._mounted);\n    }\n\n    this._brushType && this._doDisableBrush();\n    brushOption.brushType && this._doEnableBrush(brushOption);\n    return this;\n  };\n\n  BrushController.prototype._doEnableBrush = function (brushOption) {\n    var zr = this._zr; // Consider roam, which takes globalPan too.\n\n    if (!this._enableGlobalPan) {\n      interactionMutex.take(zr, MUTEX_RESOURCE_KEY, this._uid);\n    }\n\n    (0, _util.each)(this._handlers, function (handler, eventName) {\n      zr.on(eventName, handler);\n    });\n    this._brushType = brushOption.brushType;\n    this._brushOption = (0, _util.merge)((0, _util.clone)(DEFAULT_BRUSH_OPT), brushOption, true);\n  };\n\n  BrushController.prototype._doDisableBrush = function () {\n    var zr = this._zr;\n    interactionMutex.release(zr, MUTEX_RESOURCE_KEY, this._uid);\n    (0, _util.each)(this._handlers, function (handler, eventName) {\n      zr.off(eventName, handler);\n    });\n    this._brushType = this._brushOption = null;\n  };\n  /**\n   * @param panelOpts If not pass, it is global brush.\n   */\n\n\n  BrushController.prototype.setPanels = function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels_1 = this._panels = {};\n      (0, _util.each)(panelOpts, function (panelOpts) {\n        panels_1[panelOpts.panelId] = (0, _util.clone)(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  };\n\n  BrushController.prototype.mount = function (opt) {\n    opt = opt || {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._mounted = true; // should be at first.\n    }\n\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      x: opt.x || 0,\n      y: opt.y || 0,\n      rotation: opt.rotation || 0,\n      scaleX: opt.scaleX || 1,\n      scaleY: opt.scaleY || 1\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  }; // eachCover(cb, context): void {\n  //     each(this._covers, cb, context);\n  // }\n\n  /**\n   * Update covers.\n   * @param coverConfigList\n   *        If coverConfigList is null/undefined, all covers removed.\n   */\n\n\n  BrushController.prototype.updateCovers = function (coverConfigList) {\n    if (process.env.NODE_ENV !== 'production') {\n      (0, _util.assert)(this._mounted);\n    }\n\n    coverConfigList = (0, _util.map)(coverConfigList, function (coverConfig) {\n      return (0, _util.merge)((0, _util.clone)(DEFAULT_BRUSH_OPT), coverConfig, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new _DataDiffer.default(oldCovers, coverConfigList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushInternal = coverConfigList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushInternal, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushInternal));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  };\n\n  BrushController.prototype.unmount = function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!this._mounted) {\n        return;\n      }\n    }\n\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._mounted = false; // should be at last.\n    }\n\n    return this;\n  };\n\n  BrushController.prototype.dispose = function () {\n    this.unmount();\n    this.off();\n  };\n\n  return BrushController;\n}(_Eventful.default);\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return BRUSH_PANEL_GLOBAL; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  (0, _util.each)(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return BRUSH_PANEL_GLOBAL; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : BRUSH_PANEL_GLOBAL;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  (0, _util.each)(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = (0, _util.map)(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = (0, _util.clone)(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', {\n    areas: areas,\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\n;\n\nfunction createBaseRectCover(rectRangeConverter, controller, brushOption, edgeNameSequences) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: (0, _util.curry)(driftRect, rectRangeConverter, controller, cover, ['n', 's', 'w', 'e']),\n    ondragend: (0, _util.curry)(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  (0, _util.each)(edgeNameSequences, function (nameSequence) {\n    cover.add(new graphic.Rect({\n      name: nameSequence.join(''),\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: (0, _util.curry)(driftRect, rectRangeConverter, controller, cover, nameSequence),\n      ondragend: (0, _util.curry)(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  (0, _util.each)([['w'], ['e'], ['n'], ['s'], ['s', 'e'], ['s', 'w'], ['n', 'e'], ['n', 'w']], function (nameSequence) {\n    var el = cover.childOfName(nameSequence.join(''));\n    var globalDir = nameSequence.length === 1 ? getGlobalDirection1(controller, nameSequence[0]) : getGlobalDirection2(controller, nameSequence);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return (0, _util.defaults)({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection1(controller, localDirName) {\n  var map = {\n    w: 'left',\n    e: 'right',\n    n: 'top',\n    s: 'bottom'\n  };\n  var inverseMap = {\n    left: 'w',\n    right: 'e',\n    top: 'n',\n    bottom: 's'\n  };\n  var dir = graphic.transformDirection(map[localDirName], getTransform(controller));\n  return inverseMap[dir];\n}\n\nfunction getGlobalDirection2(controller, localDirNameSeq) {\n  var globalDir = [getGlobalDirection1(controller, localDirNameSeq[0]), getGlobalDirection1(controller, localDirNameSeq[1])];\n  (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n  return globalDir.join('');\n}\n\nfunction driftRect(rectRangeConverter, controller, cover, dirNameSequence, dx, dy) {\n  var brushOption = cover.__brushOption;\n  var rectRange = rectRangeConverter.toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  (0, _util.each)(dirNameSequence, function (dirName) {\n    var ind = DIRECTION_MAP[dirName];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = rectRangeConverter.fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  (0, _util.each)(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== BRUSH_PANEL_GLOBAL ? panel.clipPath(data, controller._transform) : (0, _util.clone)(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  if ( // Check active\n  !controller._brushType // resetCursor should be always called when mouse is in zr area,\n  // but not called when mouse is out of zr area to avoid bad influence\n  // if `mousemove`, `mouseup` are triggered from `document` event.\n  || isOutsideZrArea(controller, e.offsetX, e.offsetY)) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === BRUSH_PANEL_GLOBAL || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = (0, _util.clone)(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === BRUSH_PANEL_GLOBAL ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    if (process.env.NODE_ENV !== 'production') {\n      (0, _util.assert)(panel && panel.defaultBrushType, 'MUST have defaultBrushType when brushType is \"atuo\"');\n    }\n\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar pointerHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mouse out side the browser.\n      handleDragEnd(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var x = e.offsetX;\n    var y = e.offsetY;\n    var localCursorPoint = this.group.transformCoordToLocal(x, y);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: function (e) {\n    handleDragEnd(this, e);\n  }\n};\n\nfunction handleDragEnd(controller, e) {\n  if (controller._dragging) {\n    preventDefault(e);\n    var x = e.offsetX;\n    var y = e.offsetY;\n    var localCursorPoint = controller.group.transformCoordToLocal(x, y);\n    var eventParams = updateCoverByMouse(controller, e, localCursorPoint, true);\n    controller._dragging = false;\n    controller._track = [];\n    controller._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(controller, eventParams);\n  }\n}\n\nfunction isOutsideZrArea(controller, x, y) {\n  var zr = controller._zr;\n  return x < 0 || x > zr.getWidth() || y < 0 || y > zr.getHeight();\n}\n/**\n * key: brushType\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      function returnInput(range) {\n        return range;\n      }\n\n      return createBaseRectCover({\n        toRectRange: returnInput,\n        fromRectRange: returnInput\n      }, controller, brushOption, [['w'], ['e'], ['n'], ['s'], ['s', 'e'], ['s', 'w'], ['n', 'e'], ['n', 'w']]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: (0, _util.curry)(driftPolygon, controller, cover),\n        ondragend: (0, _util.curry)(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover({\n        toRectRange: function (range) {\n          var rectRange = [range, [0, 100]];\n          xyIndex && rectRange.reverse();\n          return rectRange;\n        },\n        fromRectRange: function (rectRange) {\n          return rectRange[xyIndex];\n        }\n      }, controller, brushOption, [[['w'], ['e']], [['n'], ['s']]][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== BRUSH_PANEL_GLOBAL && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nexports.default = _default;","map":{"version":3,"names":["BRUSH_PANEL_GLOBAL","mathMin","Math","min","mathMax","max","mathPow","pow","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","w","e","n","s","CURSOR_MAP","ne","sw","nw","se","DEFAULT_BRUSH_OPT","brushStyle","lineWidth","stroke","fill","transformable","brushMode","removeOnClick","baseUID","BrushController","_super","__extends","zr","_this","call","_track","_covers","_handlers","process","env","NODE_ENV","assert","_zr","group","graphic","Group","_uid","each","pointerHandlers","handler","eventName","bind","prototype","enableBrush","brushOption","_mounted","_brushType","_doDisableBrush","brushType","_doEnableBrush","_enableGlobalPan","interactionMutex","take","on","_brushOption","merge","clone","release","off","setPanels","panelOpts","length","panels_1","_panels","panelId","mount","opt","enableGlobalPan","thisGroup","add","attr","x","y","rotation","scaleX","scaleY","_transform","getLocalTransform","updateCovers","coverConfigList","map","coverConfig","tmpIdPrefix","oldCovers","newCovers","controller","creatingCover","_creatingCover","DataDiffer","oldGetKey","getKey","addOrUpdate","update","remove","execute","index","id","cover","__brushOption","newIndex","oldIndex","newBrushInternal","endCreating","createCover","updateCoverAfterCreation","unmount","clearCovers","dispose","Eventful","coverRenderers","updateZ","coverRenderer","getCoverRenderer","updateCoverShape","range","z","traverse","el","z2","updateCommon","getPanelByPoint","localCursorPoint","panels","panel","transform","pn","isTargetByCursor","getPanelByCover","covers","originalLength","trigger","areas","isEnd","shouldShowCover","track","p2","p1","dx","dy","dist","getTrackEnds","tail","createBaseRectCover","rectRangeConverter","edgeNameSequences","Rect","name","style","makeStyle","silent","draggable","cursor","drift","curry","driftRect","ondragend","nameSequence","join","opacity","invisible","updateBaseRect","localRange","handleSize","xa","ya","x2","y2","x2a","y2a","width","height","widtha","heighta","updateRectShape","mainEl","childAt","useStyle","childOfName","globalDir","getGlobalDirection1","getGlobalDirection2","h","setShape","pointsToRect","clipByPanel","defaults","strokeNoScale","formatRectRange","getTransform","localDirName","inverseMap","left","right","top","bottom","dir","transformDirection","localDirNameSeq","reverse","dirNameSequence","rectRange","toRectRange","localDelta","toLocalDelta","dirName","ind","fromRectRange","driftPolygon","point","localD","transformCoordToLocal","localZero","data","clipPath","points","xmin","ymin","xmax","ymax","resetCursor","isOutsideZrArea","offsetX","offsetY","currPanel","_dragging","i","contain","setCursorStyle","preventDefault","rawE","event","mainShapeContain","updateCoverByMouse","_creatingPanel","thisBrushOption","eventParams","push","slice","determineBrushType","coverBrushOption","getCreatingRange","defaultBrushType","mousedown","handleDragEnd","target","mousemove","mouseup","getWidth","getHeight","lineX","getLineRenderer","lineY","rect","returnInput","localTrack","ends","polygon","Polyline","Polygon","xyIndex","otherExtent","getLinearBrushOtherExtent"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/component/helper/BrushController.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { curry, each, map, bind, merge, clone, defaults, assert } from 'zrender/lib/core/util.js';\nimport Eventful from 'zrender/lib/core/Eventful.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as interactionMutex from './interactionMutex.js';\nimport DataDiffer from '../../data/DataDiffer.js';\nvar BRUSH_PANEL_GLOBAL = true;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(210,219,238,0.3)',\n    fill: '#D2DBEE'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * params:\n *     areas: Array.<Array>, coord relates to container group,\n *                             If no container specified, to global.\n *     opt {\n *         isEnd: boolean,\n *         removeOnClick: boolean\n *     }\n */\n\nvar BrushController =\n/** @class */\nfunction (_super) {\n  __extends(BrushController, _super);\n\n  function BrushController(zr) {\n    var _this = _super.call(this) || this;\n    /**\n     * @internal\n     */\n\n\n    _this._track = [];\n    /**\n     * @internal\n     */\n\n    _this._covers = [];\n    _this._handlers = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(zr);\n    }\n\n    _this._zr = zr;\n    _this.group = new graphic.Group();\n    _this._uid = 'brushController_' + baseUID++;\n    each(pointerHandlers, function (handler, eventName) {\n      this._handlers[eventName] = bind(handler, this);\n    }, _this);\n    return _this;\n  }\n  /**\n   * If set to `false`, select disabled.\n   */\n\n\n  BrushController.prototype.enableBrush = function (brushOption) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(this._mounted);\n    }\n\n    this._brushType && this._doDisableBrush();\n    brushOption.brushType && this._doEnableBrush(brushOption);\n    return this;\n  };\n\n  BrushController.prototype._doEnableBrush = function (brushOption) {\n    var zr = this._zr; // Consider roam, which takes globalPan too.\n\n    if (!this._enableGlobalPan) {\n      interactionMutex.take(zr, MUTEX_RESOURCE_KEY, this._uid);\n    }\n\n    each(this._handlers, function (handler, eventName) {\n      zr.on(eventName, handler);\n    });\n    this._brushType = brushOption.brushType;\n    this._brushOption = merge(clone(DEFAULT_BRUSH_OPT), brushOption, true);\n  };\n\n  BrushController.prototype._doDisableBrush = function () {\n    var zr = this._zr;\n    interactionMutex.release(zr, MUTEX_RESOURCE_KEY, this._uid);\n    each(this._handlers, function (handler, eventName) {\n      zr.off(eventName, handler);\n    });\n    this._brushType = this._brushOption = null;\n  };\n  /**\n   * @param panelOpts If not pass, it is global brush.\n   */\n\n\n  BrushController.prototype.setPanels = function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels_1 = this._panels = {};\n      each(panelOpts, function (panelOpts) {\n        panels_1[panelOpts.panelId] = clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  };\n\n  BrushController.prototype.mount = function (opt) {\n    opt = opt || {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._mounted = true; // should be at first.\n    }\n\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      x: opt.x || 0,\n      y: opt.y || 0,\n      rotation: opt.rotation || 0,\n      scaleX: opt.scaleX || 1,\n      scaleY: opt.scaleY || 1\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  }; // eachCover(cb, context): void {\n  //     each(this._covers, cb, context);\n  // }\n\n  /**\n   * Update covers.\n   * @param coverConfigList\n   *        If coverConfigList is null/undefined, all covers removed.\n   */\n\n\n  BrushController.prototype.updateCovers = function (coverConfigList) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(this._mounted);\n    }\n\n    coverConfigList = map(coverConfigList, function (coverConfig) {\n      return merge(clone(DEFAULT_BRUSH_OPT), coverConfig, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, coverConfigList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushInternal = coverConfigList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushInternal, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushInternal));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  };\n\n  BrushController.prototype.unmount = function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!this._mounted) {\n        return;\n      }\n    }\n\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._mounted = false; // should be at last.\n    }\n\n    return this;\n  };\n\n  BrushController.prototype.dispose = function () {\n    this.unmount();\n    this.off();\n  };\n\n  return BrushController;\n}(Eventful);\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return BRUSH_PANEL_GLOBAL; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return BRUSH_PANEL_GLOBAL; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : BRUSH_PANEL_GLOBAL;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', {\n    areas: areas,\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\n;\n\nfunction createBaseRectCover(rectRangeConverter, controller, brushOption, edgeNameSequences) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(driftRect, rectRangeConverter, controller, cover, ['n', 's', 'w', 'e']),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNameSequences, function (nameSequence) {\n    cover.add(new graphic.Rect({\n      name: nameSequence.join(''),\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(driftRect, rectRangeConverter, controller, cover, nameSequence),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each([['w'], ['e'], ['n'], ['s'], ['s', 'e'], ['s', 'w'], ['n', 'e'], ['n', 'w']], function (nameSequence) {\n    var el = cover.childOfName(nameSequence.join(''));\n    var globalDir = nameSequence.length === 1 ? getGlobalDirection1(controller, nameSequence[0]) : getGlobalDirection2(controller, nameSequence);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection1(controller, localDirName) {\n  var map = {\n    w: 'left',\n    e: 'right',\n    n: 'top',\n    s: 'bottom'\n  };\n  var inverseMap = {\n    left: 'w',\n    right: 'e',\n    top: 'n',\n    bottom: 's'\n  };\n  var dir = graphic.transformDirection(map[localDirName], getTransform(controller));\n  return inverseMap[dir];\n}\n\nfunction getGlobalDirection2(controller, localDirNameSeq) {\n  var globalDir = [getGlobalDirection1(controller, localDirNameSeq[0]), getGlobalDirection1(controller, localDirNameSeq[1])];\n  (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n  return globalDir.join('');\n}\n\nfunction driftRect(rectRangeConverter, controller, cover, dirNameSequence, dx, dy) {\n  var brushOption = cover.__brushOption;\n  var rectRange = rectRangeConverter.toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(dirNameSequence, function (dirName) {\n    var ind = DIRECTION_MAP[dirName];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = rectRangeConverter.fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== BRUSH_PANEL_GLOBAL ? panel.clipPath(data, controller._transform) : clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  if ( // Check active\n  !controller._brushType // resetCursor should be always called when mouse is in zr area,\n  // but not called when mouse is out of zr area to avoid bad influence\n  // if `mousemove`, `mouseup` are triggered from `document` event.\n  || isOutsideZrArea(controller, e.offsetX, e.offsetY)) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === BRUSH_PANEL_GLOBAL || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === BRUSH_PANEL_GLOBAL ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(panel && panel.defaultBrushType, 'MUST have defaultBrushType when brushType is \"atuo\"');\n    }\n\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar pointerHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mouse out side the browser.\n      handleDragEnd(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var x = e.offsetX;\n    var y = e.offsetY;\n    var localCursorPoint = this.group.transformCoordToLocal(x, y);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: function (e) {\n    handleDragEnd(this, e);\n  }\n};\n\nfunction handleDragEnd(controller, e) {\n  if (controller._dragging) {\n    preventDefault(e);\n    var x = e.offsetX;\n    var y = e.offsetY;\n    var localCursorPoint = controller.group.transformCoordToLocal(x, y);\n    var eventParams = updateCoverByMouse(controller, e, localCursorPoint, true);\n    controller._dragging = false;\n    controller._track = [];\n    controller._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(controller, eventParams);\n  }\n}\n\nfunction isOutsideZrArea(controller, x, y) {\n  var zr = controller._zr;\n  return x < 0 || x > zr.getWidth() || y < 0 || y > zr.getHeight();\n}\n/**\n * key: brushType\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      function returnInput(range) {\n        return range;\n      }\n\n      return createBaseRectCover({\n        toRectRange: returnInput,\n        fromRectRange: returnInput\n      }, controller, brushOption, [['w'], ['e'], ['n'], ['s'], ['s', 'e'], ['s', 'w'], ['n', 'e'], ['n', 'w']]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover({\n        toRectRange: function (range) {\n          var rectRange = [range, [0, 100]];\n          xyIndex && rectRange.reverse();\n          return rectRange;\n        },\n        fromRectRange: function (rectRange) {\n          return rectRange[xyIndex];\n        }\n      }, controller, brushOption, [[['w'], ['e']], [['n'], ['s']]][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== BRUSH_PANEL_GLOBAL && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nexport default BrushController;"],"mappings":"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"},"metadata":{},"sourceType":"script"}