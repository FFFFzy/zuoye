{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.contain = contain;\nexports.fixExtent = fixExtent;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.increaseInterval = increaseInterval;\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.isIntervalOrLogScale = isIntervalOrLogScale;\nexports.isValueNice = isValueNice;\nexports.normalize = normalize;\nexports.scale = scale;\n\nvar _number = require(\"../util/number.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction isValueNice(val) {\n  var exp10 = Math.pow(10, (0, _number.quantityExponent)(Math.abs(val)));\n  var f = Math.abs(val / exp10);\n  return f === 0 || f === 1 || f === 2 || f === 3 || f === 5;\n}\n\nfunction isIntervalOrLogScale(scale) {\n  return scale.type === 'interval' || scale.type === 'log';\n}\n/**\n * @param extent Both extent[0] and extent[1] should be valid number.\n *               Should be extent[0] < extent[1].\n * @param splitNumber splitNumber should be >= 1.\n */\n\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = (0, _number.nice)(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [(0, _number.round)(Math.ceil(extent[0] / interval) * interval, precision), (0, _number.round)(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n\nfunction increaseInterval(interval) {\n  var exp10 = Math.pow(10, (0, _number.quantityExponent)(interval)); // Increase interval\n\n  var f = interval / exp10;\n\n  if (!f) {\n    f = 1;\n  } else if (f === 2) {\n    f = 3;\n  } else if (f === 3) {\n    f = 5;\n  } else {\n    // f is 1 or 5\n    f *= 2;\n  }\n\n  return (0, _number.round)(f * exp10);\n}\n/**\n * @return interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return (0, _number.getPrecision)(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction contain(val, extent) {\n  return val >= extent[0] && val <= extent[1];\n}\n\nfunction normalize(val, extent) {\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n}\n\nfunction scale(val, extent) {\n  return val * (extent[1] - extent[0]) + extent[0];\n}","map":{"version":3,"names":["isValueNice","val","exp10","Math","pow","quantityExponent","abs","f","isIntervalOrLogScale","scale","type","intervalScaleNiceTicks","extent","splitNumber","minInterval","maxInterval","result","span","interval","nice","precision","intervalPrecision","getIntervalPrecision","niceTickExtent","round","ceil","floor","fixExtent","increaseInterval","getPrecision","clamp","idx","max","min","isFinite","contain","normalize"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/scale/helper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { getPrecision, round, nice, quantityExponent } from '../util/number.js';\nexport function isValueNice(val) {\n  var exp10 = Math.pow(10, quantityExponent(Math.abs(val)));\n  var f = Math.abs(val / exp10);\n  return f === 0 || f === 1 || f === 2 || f === 3 || f === 5;\n}\nexport function isIntervalOrLogScale(scale) {\n  return scale.type === 'interval' || scale.type === 'log';\n}\n/**\n * @param extent Both extent[0] and extent[1] should be valid number.\n *               Should be extent[0] < extent[1].\n * @param splitNumber splitNumber should be >= 1.\n */\n\nexport function intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [round(Math.ceil(extent[0] / interval) * interval, precision), round(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\nexport function increaseInterval(interval) {\n  var exp10 = Math.pow(10, quantityExponent(interval)); // Increase interval\n\n  var f = interval / exp10;\n\n  if (!f) {\n    f = 1;\n  } else if (f === 2) {\n    f = 3;\n  } else if (f === 3) {\n    f = 5;\n  } else {\n    // f is 1 or 5\n    f *= 2;\n  }\n\n  return round(f * exp10);\n}\n/**\n * @return interval precision\n */\n\nexport function getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return getPrecision(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nexport function fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\nexport function contain(val, extent) {\n  return val >= extent[0] && val <= extent[1];\n}\nexport function normalize(val, extent) {\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n}\nexport function scale(val, extent) {\n  return val * (extent[1] - extent[0]) + extent[0];\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}