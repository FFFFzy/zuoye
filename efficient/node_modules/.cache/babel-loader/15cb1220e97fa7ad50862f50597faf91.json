{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.circularLayout = circularLayout;\n\nvar vec2 = _interopRequireWildcard(require(\"zrender/lib/core/vector.js\"));\n\nvar _graphHelper = require(\"./graphHelper.js\");\n\nvar zrUtil = _interopRequireWildcard(require(\"zrender/lib/core/util.js\"));\n\nvar _multipleGraphEdgeHelper = require(\"../helper/multipleGraphEdgeHelper.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\nvar _symbolRadiansHalf = [];\n/**\n * `basedOn` can be:\n * 'value':\n *     This layout is not accurate and have same bad case. For example,\n *     if the min value is very smaller than the max value, the nodes\n *     with the min value probably overlap even though there is enough\n *     space to layout them. So we only use this approach in the as the\n *     init layout of the force layout.\n *     FIXME\n *     Probably we do not need this method any more but use\n *     `basedOn: 'symbolSize'` in force layout if\n *     delay its init operations to GraphView.\n * 'symbolSize':\n *     This approach work only if all of the symbol size calculated.\n *     That is, the progressive rendering is not applied to graph.\n *     FIXME\n *     If progressive rendering is applied to graph some day,\n *     probably we have to use `basedOn: 'value'`.\n */\n\nfunction circularLayout(seriesModel, basedOn) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  var count = nodeData.count();\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n\n  if (!count) {\n    return;\n  }\n\n  _layoutNodesBasedOn[basedOn](seriesModel, graph, nodeData, r, cx, cy, count);\n\n  graph.eachEdge(function (edge, index) {\n    var curveness = zrUtil.retrieve3(edge.getModel().get(['lineStyle', 'curveness']), (0, _multipleGraphEdgeHelper.getCurvenessForEdge)(edge, seriesModel, index), 0);\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nvar _layoutNodesBasedOn = {\n  value: function (seriesModel, graph, nodeData, r, cx, cy, count) {\n    var angle = 0;\n    var sum = nodeData.getSum('value');\n    var unitAngle = Math.PI * 2 / (sum || count);\n    graph.eachNode(function (node) {\n      var value = node.getValue('value');\n      var radianHalf = unitAngle * (sum ? value : 1) / 2;\n      angle += radianHalf;\n      node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n      angle += radianHalf;\n    });\n  },\n  symbolSize: function (seriesModel, graph, nodeData, r, cx, cy, count) {\n    var sumRadian = 0;\n    _symbolRadiansHalf.length = count;\n    var nodeScale = (0, _graphHelper.getNodeGlobalScale)(seriesModel);\n    graph.eachNode(function (node) {\n      var symbolSize = (0, _graphHelper.getSymbolSize)(node); // Normally this case will not happen, but we still add\n      // some the defensive code (2px is an arbitrary value).\n\n      isNaN(symbolSize) && (symbolSize = 2);\n      symbolSize < 0 && (symbolSize = 0);\n      symbolSize *= nodeScale;\n      var symbolRadianHalf = Math.asin(symbolSize / 2 / r); // when `symbolSize / 2` is bigger than `r`.\n\n      isNaN(symbolRadianHalf) && (symbolRadianHalf = PI / 2);\n      _symbolRadiansHalf[node.dataIndex] = symbolRadianHalf;\n      sumRadian += symbolRadianHalf * 2;\n    });\n    var halfRemainRadian = (2 * PI - sumRadian) / count / 2;\n    var angle = 0;\n    graph.eachNode(function (node) {\n      var radianHalf = halfRemainRadian + _symbolRadiansHalf[node.dataIndex];\n      angle += radianHalf;\n      node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n      angle += radianHalf;\n    });\n  }\n};","map":{"version":3,"names":["PI","Math","_symbolRadiansHalf","circularLayout","seriesModel","basedOn","coordSys","coordinateSystem","type","rect","getBoundingRect","nodeData","getData","graph","cx","width","x","cy","height","y","r","min","count","setLayout","_layoutNodesBasedOn","eachEdge","edge","index","curveness","zrUtil","retrieve3","getModel","get","getCurvenessForEdge","p1","vec2","clone","node1","getLayout","p2","node2","cp1","x12","y12","value","angle","sum","getSum","unitAngle","eachNode","node","getValue","radianHalf","cos","sin","symbolSize","sumRadian","length","nodeScale","getNodeGlobalScale","getSymbolSize","isNaN","symbolRadianHalf","asin","dataIndex","halfRemainRadian"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/chart/graph/circularLayoutHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as vec2 from 'zrender/lib/core/vector.js';\nimport { getSymbolSize, getNodeGlobalScale } from './graphHelper.js';\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { getCurvenessForEdge } from '../helper/multipleGraphEdgeHelper.js';\nvar PI = Math.PI;\nvar _symbolRadiansHalf = [];\n/**\n * `basedOn` can be:\n * 'value':\n *     This layout is not accurate and have same bad case. For example,\n *     if the min value is very smaller than the max value, the nodes\n *     with the min value probably overlap even though there is enough\n *     space to layout them. So we only use this approach in the as the\n *     init layout of the force layout.\n *     FIXME\n *     Probably we do not need this method any more but use\n *     `basedOn: 'symbolSize'` in force layout if\n *     delay its init operations to GraphView.\n * 'symbolSize':\n *     This approach work only if all of the symbol size calculated.\n *     That is, the progressive rendering is not applied to graph.\n *     FIXME\n *     If progressive rendering is applied to graph some day,\n *     probably we have to use `basedOn: 'value'`.\n */\n\nexport function circularLayout(seriesModel, basedOn) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  var count = nodeData.count();\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n\n  if (!count) {\n    return;\n  }\n\n  _layoutNodesBasedOn[basedOn](seriesModel, graph, nodeData, r, cx, cy, count);\n\n  graph.eachEdge(function (edge, index) {\n    var curveness = zrUtil.retrieve3(edge.getModel().get(['lineStyle', 'curveness']), getCurvenessForEdge(edge, seriesModel, index), 0);\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\nvar _layoutNodesBasedOn = {\n  value: function (seriesModel, graph, nodeData, r, cx, cy, count) {\n    var angle = 0;\n    var sum = nodeData.getSum('value');\n    var unitAngle = Math.PI * 2 / (sum || count);\n    graph.eachNode(function (node) {\n      var value = node.getValue('value');\n      var radianHalf = unitAngle * (sum ? value : 1) / 2;\n      angle += radianHalf;\n      node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n      angle += radianHalf;\n    });\n  },\n  symbolSize: function (seriesModel, graph, nodeData, r, cx, cy, count) {\n    var sumRadian = 0;\n    _symbolRadiansHalf.length = count;\n    var nodeScale = getNodeGlobalScale(seriesModel);\n    graph.eachNode(function (node) {\n      var symbolSize = getSymbolSize(node); // Normally this case will not happen, but we still add\n      // some the defensive code (2px is an arbitrary value).\n\n      isNaN(symbolSize) && (symbolSize = 2);\n      symbolSize < 0 && (symbolSize = 0);\n      symbolSize *= nodeScale;\n      var symbolRadianHalf = Math.asin(symbolSize / 2 / r); // when `symbolSize / 2` is bigger than `r`.\n\n      isNaN(symbolRadianHalf) && (symbolRadianHalf = PI / 2);\n      _symbolRadiansHalf[node.dataIndex] = symbolRadianHalf;\n      sumRadian += symbolRadianHalf * 2;\n    });\n    var halfRemainRadian = (2 * PI - sumRadian) / count / 2;\n    var angle = 0;\n    graph.eachNode(function (node) {\n      var radianHalf = halfRemainRadian + _symbolRadiansHalf[node.dataIndex];\n      angle += radianHalf;\n      node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n      angle += radianHalf;\n    });\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}