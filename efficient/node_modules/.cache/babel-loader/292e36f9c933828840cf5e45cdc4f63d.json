{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _tslib = require(\"tslib\");\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar graphic = _interopRequireWildcard(require(\"../../util/graphic.js\"));\n\nvar _innerStore = require(\"../../util/innerStore.js\");\n\nvar _states = require(\"../../util/states.js\");\n\nvar _DataDiffer = _interopRequireDefault(require(\"../../data/DataDiffer.js\"));\n\nvar helper = _interopRequireWildcard(require(\"../helper/treeHelper.js\"));\n\nvar _Breadcrumb = _interopRequireDefault(require(\"./Breadcrumb.js\"));\n\nvar _RoamController = _interopRequireDefault(require(\"../../component/helper/RoamController.js\"));\n\nvar _BoundingRect = _interopRequireDefault(require(\"zrender/lib/core/BoundingRect.js\"));\n\nvar matrix = _interopRequireWildcard(require(\"zrender/lib/core/matrix.js\"));\n\nvar animationUtil = _interopRequireWildcard(require(\"../../util/animation.js\"));\n\nvar _makeStyleMapper = _interopRequireDefault(require(\"../../model/mixin/makeStyleMapper.js\"));\n\nvar _Chart = _interopRequireDefault(require(\"../../view/Chart.js\"));\n\nvar _Displayable = _interopRequireDefault(require(\"zrender/lib/graphic/Displayable.js\"));\n\nvar _model = require(\"../../util/model.js\");\n\nvar _format = require(\"../../util/format.js\");\n\nvar _labelStyle = require(\"../../label/labelStyle.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = 'label';\nvar PATH_UPPERLABEL_NORMAL = 'upperLabel'; // Should larger than emphasis states lift z\n\nvar Z2_BASE = _states.Z2_EMPHASIS_LIFT * 10; // Should bigger than every z2.\n\nvar Z2_BG = _states.Z2_EMPHASIS_LIFT * 2;\nvar Z2_CONTENT = _states.Z2_EMPHASIS_LIFT * 3;\nvar getStateItemStyle = (0, _makeStyleMapper.default)([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'] // Option decal is in `DecalObject` but style.decal is in `PatternObject`.\n// So do not transfer decal directly.\n]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getStateItemStyle(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar inner = (0, _model.makeInner)();\n\nvar TreemapView =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(TreemapView, _super);\n\n  function TreemapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TreemapView.type;\n    _this._state = 'ready';\n    _this._storage = createStorage();\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  TreemapView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if ((0, _util.indexOf)(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var hasAnimation = seriesModel.get('animation');\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    hasAnimation && !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  };\n\n  TreemapView.prototype._giveContainerGroup = function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.x = layoutInfo.x;\n    containerGroup.y = layoutInfo.y;\n    return containerGroup;\n  };\n\n  TreemapView.prototype._doRender = function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n\n    function doRenderNode(thisNode, oldNode, parentGroup, depth) {\n      return renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth);\n    } // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        (0, _util.each)(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n        new _DataDiffer.default(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove((0, _util.curry)(processNode, null)).execute();\n      }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && (0, _util.each)(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        (0, _util.each)(store, function (el) {\n          el && (delEls.push(el), inner(el).willDelete = true);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      (0, _util.each)(willDeleteEls, function (els) {\n        (0, _util.each)(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      (0, _util.each)(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  };\n\n  TreemapView.prototype._doAnimation = function (containerGroup, renderResult, seriesModel, reRoot) {\n    var durationOption = seriesModel.get('animationDurationUpdate');\n    var easingOption = seriesModel.get('animationEasing'); // TODO: do not support function until necessary.\n\n    var duration = ((0, _util.isFunction)(durationOption) ? 0 : durationOption) || 0;\n    var easing = ((0, _util.isFunction)(easingOption) ? null : easingOption) || 'cubicOut';\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    (0, _util.each)(renderResult.willDeleteEls, function (store, storageName) {\n      (0, _util.each)(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n        var innerStore = inner(parent);\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: innerStore.nodeWidth,\n              height: innerStore.nodeHeight\n            },\n            style: {\n              opacity: 0\n            }\n          } // Others.\n          : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!innerStore.willDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = innerStore.nodeWidth / 2;\n            targetY = innerStore.nodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            x: targetX,\n            y: targetY,\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        } // TODO: do not support delay until necessary.\n\n\n        target && animationWrap.add(el, target, duration, 0, easing);\n      });\n    }); // Make other animations\n\n    (0, _util.each)(this._storage, function (store, storageName) {\n      (0, _util.each)(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (el instanceof graphic.Group) {\n          if (last.oldX != null) {\n            target.x = el.x;\n            target.y = el.y;\n            el.x = last.oldX;\n            el.y = last.oldY;\n          }\n        } else {\n          if (last.oldShape) {\n            target.shape = (0, _util.extend)({}, el.shape);\n            el.setShape(last.oldShape);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n            target.style = {\n              opacity: 1\n            };\n          }\n        }\n\n        animationWrap.add(el, target, duration, 0, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.finished((0, _util.bind)(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  };\n\n  TreemapView.prototype._resetController = function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new _RoamController.default(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', (0, _util.bind)(this._onPan, this));\n      controller.on('zoom', (0, _util.bind)(this._onZoom, this));\n    }\n\n    var rect = new _BoundingRect.default(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  };\n\n  TreemapView.prototype._clearController = function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  };\n\n  TreemapView.prototype._onPan = function (e) {\n    if (this._state !== 'animating' && (Math.abs(e.dx) > DRAG_THRESHOLD || Math.abs(e.dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + e.dx,\n          y: rootLayout.y + e.dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  };\n\n  TreemapView.prototype._onZoom = function (e) {\n    var mouseX = e.originX;\n    var mouseY = e.originY;\n\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new _BoundingRect.default(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [e.scale, e.scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  };\n\n  TreemapView.prototype._initEvents = function (containerGroup) {\n    var _this = this;\n\n    containerGroup.on('click', function (e) {\n      if (_this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = _this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = _this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        _this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          _this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && (0, _format.windowOpen)(link, linkTarget);\n        }\n      }\n    }, this);\n  };\n\n  TreemapView.prototype._renderBreadcrumb = function (seriesModel, api, targetInfo) {\n    var _this = this;\n\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot()\n      } // FIXME\n      // better way?\n      // Find breadcrumb tail on center of containerGroup.\n      : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new _Breadcrumb.default(this.group))).render(seriesModel, api, targetInfo.node, function (node) {\n      if (_this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? _this._rootToNode({\n          node: node\n        }) : _this._zoomToNode({\n          node: node\n        });\n      }\n    });\n  };\n  /**\n   * @override\n   */\n\n\n  TreemapView.prototype.remove = function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  };\n\n  TreemapView.prototype.dispose = function () {\n    this._clearController();\n  };\n\n  TreemapView.prototype._zoomToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n\n  TreemapView.prototype._rootToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n\n\n  TreemapView.prototype.findTarget = function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  };\n\n  TreemapView.type = 'treemap';\n  return TreemapView;\n}(_Chart.default);\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n  var data = seriesModel.getData();\n  var nodeModel = thisNode.getModel(); // Only for enabling highlight/downplay. Clear firstly.\n  // Because some node will not be rendered.\n\n  data.setItemGraphicEl(thisNode.dataIndex, null);\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = nodeModel.getModel('itemStyle');\n  var itemStyleEmphasisModel = nodeModel.getModel(['emphasis', 'itemStyle']);\n  var itemStyleBlurModel = nodeModel.getModel(['blur', 'itemStyle']);\n  var itemStyleSelectModel = nodeModel.getModel(['select', 'itemStyle']);\n  var borderRadius = itemStyleNormalModel.get('borderRadius') || 0; // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.x = thisLayout.x || 0;\n  group.y = thisLayout.y || 0;\n  group.markRedraw();\n  inner(group).nodeWidth = thisWidth;\n  inner(group).nodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z2_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperLabelHeight);\n  var emphasisModel = nodeModel.getModel('emphasis');\n  var focus = emphasisModel.get('focus');\n  var blurScope = emphasisModel.get('blurScope');\n  var isDisabled = emphasisModel.get('disabled');\n  var focusOrIndices = focus === 'ancestor' ? thisNode.getAncestorsIndices() : focus === 'descendant' ? thisNode.getDescendantIndices() : focus; // No children, render content.\n\n  if (isParent) {\n    // Because of the implementation about \"traverse\" in graphic hover style, we\n    // can not set hover listener on the \"group\" of non-leaf node. Otherwise the\n    // hover event from the descendents will be listenered.\n    if ((0, _states.isHighDownDispatcher)(group)) {\n      (0, _states.setAsHighDownDispatcher)(group, false);\n    }\n\n    if (bg) {\n      (0, _states.setAsHighDownDispatcher)(bg, !isDisabled); // Only for enabling highlight/downplay.\n\n      data.setItemGraphicEl(thisNode.dataIndex, bg);\n      (0, _states.enableHoverFocus)(bg, focusOrIndices, blurScope);\n    }\n  } else {\n    var content = giveGraphic('content', Rect, depth, Z2_CONTENT);\n    content && renderContent(group, content);\n    bg.disableMorphing = true;\n\n    if (bg && (0, _states.isHighDownDispatcher)(bg)) {\n      (0, _states.setAsHighDownDispatcher)(bg, false);\n    }\n\n    (0, _states.setAsHighDownDispatcher)(group, !isDisabled); // Only for enabling highlight/downplay.\n\n    data.setItemGraphicEl(thisNode.dataIndex, group);\n    (0, _states.enableHoverFocus)(group, focusOrIndices, blurScope);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    var ecData = (0, _innerStore.getECData)(bg); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight,\n      r: borderRadius\n    });\n\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(bg);\n    } else {\n      bg.invisible = false;\n      var style = thisNode.getVisual('style');\n      var visualBorderColor = style.stroke;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      emphasisStyle.fill = itemStyleEmphasisModel.get('borderColor');\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      blurStyle.fill = itemStyleBlurModel.get('borderColor');\n      var selectStyle = getStateItemStyle(itemStyleSelectModel);\n      selectStyle.fill = itemStyleSelectModel.get('borderColor');\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText( // PENDING: convert ZRColor to ColorString for text.\n        bg, visualBorderColor, style.opacity, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n        bg.removeTextContent();\n      }\n\n      bg.setStyle(normalStyle);\n      bg.ensureState('emphasis').style = emphasisStyle;\n      bg.ensureState('blur').style = blurStyle;\n      bg.ensureState('select').style = selectStyle;\n      (0, _states.setDefaultStateProxy)(bg);\n    }\n\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    var ecData = (0, _innerStore.getECData)(content); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight,\n      r: borderRadius\n    });\n\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(content);\n    } else {\n      content.invisible = false;\n      var nodeStyle = thisNode.getVisual('style');\n      var visualColor = nodeStyle.fill;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      normalStyle.decal = nodeStyle.decal;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      var selectStyle = getStateItemStyle(itemStyleSelectModel); // PENDING: convert ZRColor to ColorString for text.\n\n      prepareText(content, visualColor, nodeStyle.opacity, null);\n      content.setStyle(normalStyle);\n      content.ensureState('emphasis').style = emphasisStyle;\n      content.ensureState('blur').style = blurStyle;\n      content.ensureState('select').style = selectStyle;\n      (0, _states.setDefaultStateProxy)(content);\n    }\n\n    group.add(content);\n  }\n\n  function processInvisible(element) {\n    // Delay invisible setting utill animation finished,\n    // avoid element vanish suddenly before animation.\n    !element.invisible && willInvisibleEls.push(element);\n  }\n\n  function prepareText(rectEl, visualColor, visualOpacity, // Can be null/undefined\n  upperLabelRect) {\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var defaultText = (0, _model.convertOptionIdName)(nodeModel.get('name'), null);\n    var isShow = normalLabelModel.getShallow('show');\n    (0, _labelStyle.setLabelStyle)(rectEl, (0, _labelStyle.getLabelStatesModels)(nodeModel, upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL), {\n      defaultText: isShow ? defaultText : null,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      labelFetcher: seriesModel,\n      labelDataIndex: thisNode.dataIndex\n    });\n    var textEl = rectEl.getTextContent();\n\n    if (!textEl) {\n      return;\n    }\n\n    var textStyle = textEl.style;\n    var textPadding = (0, _util.normalizeCssArray)(textStyle.padding || 0);\n\n    if (upperLabelRect) {\n      rectEl.setTextConfig({\n        layoutRect: upperLabelRect\n      });\n      textEl.disableLabelLayout = true;\n    }\n\n    textEl.beforeUpdate = function () {\n      var width = Math.max((upperLabelRect ? upperLabelRect.width : rectEl.shape.width) - textPadding[1] - textPadding[3], 0);\n      var height = Math.max((upperLabelRect ? upperLabelRect.height : rectEl.shape.height) - textPadding[0] - textPadding[2], 0);\n\n      if (textStyle.width !== width || textStyle.height !== height) {\n        textEl.setStyle({\n          width: width,\n          height: height\n        });\n      }\n    };\n\n    textStyle.truncateMinChar = 2;\n    textStyle.lineOverflow = 'truncate';\n    addDrillDownIcon(textStyle, upperLabelRect, thisLayout);\n    var textEmphasisState = textEl.getState('emphasis');\n    addDrillDownIcon(textEmphasisState ? textEmphasisState.style : null, upperLabelRect, thisLayout);\n  }\n\n  function addDrillDownIcon(style, upperLabelRect, thisLayout) {\n    var text = style ? style.text : null;\n\n    if (!upperLabelRect && thisLayout.isLeafRoot && text != null) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      style.text = iconChar ? iconChar + ' ' + text : text;\n    }\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n      element = new Ctor();\n\n      if (element instanceof _Displayable.default) {\n        element.z2 = calculateZ2(depth, z);\n      }\n\n      prepareAnimationWhenNoOld(lasts, element);\n    } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n\n    if (element instanceof Group) {\n      lastCfg.oldX = element.x;\n      lastCfg.oldY = element.y;\n    } else {\n      lastCfg.oldShape = (0, _util.extend)({}, element.shape);\n    }\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n    var isGroup = element instanceof graphic.Group;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.oldShape) {\n        parentOldX = parentOldBg.oldShape.width;\n        parentOldY = parentOldBg.oldShape.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      if (isGroup) {\n        lastCfg.oldX = 0;\n        lastCfg.oldY = parentOldY;\n      } else {\n        lastCfg.oldShape = {\n          x: parentOldX,\n          y: parentOldY,\n          width: 0,\n          height: 0\n        };\n      }\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = !isGroup;\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ2(depth, z2InLevel) {\n  return depth * Z2_BASE + z2InLevel;\n}\n\nvar _default = TreemapView;\nexports.default = _default;","map":{"version":3,"names":["Group","graphic","Rect","DRAG_THRESHOLD","PATH_LABEL_NOAMAL","PATH_UPPERLABEL_NORMAL","Z2_BASE","Z2_EMPHASIS_LIFT","Z2_BG","Z2_CONTENT","getStateItemStyle","makeStyleMapper","getItemStyleNormal","model","itemStyle","stroke","fill","lineWidth","inner","makeInner","TreemapView","_super","__extends","_this","apply","arguments","type","_state","_storage","createStorage","prototype","render","seriesModel","ecModel","api","payload","models","findComponents","mainType","subType","query","indexOf","types","targetInfo","helper","retrieveTargetInfo","payloadType","layoutInfo","isInit","_oldTree","thisStorage","reRoot","rootNodeGroup","nodeGroup","node","getRawIndex","direction","containerGroup","_giveContainerGroup","hasAnimation","get","renderResult","_doRender","_doAnimation","renderFinally","_resetController","_renderBreadcrumb","_containerGroup","_initEvents","group","add","x","y","thisTree","getData","tree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","doRenderNode","thisNode","oldNode","parentGroup","depth","renderNode","dualTravel","root","willDeleteEls","clearStorage","thisViewChildren","oldViewChildren","sameTree","each","child","index","isRemoved","processNode","DataDiffer","getKey","update","remove","curry","execute","getId","newIndex","oldIndex","viewChildren","storage","store","storageName","delEls","el","push","willDelete","els","parent","invisible","dirty","durationOption","easingOption","duration","isFunction","easing","animationWrap","animationUtil","createWrap","rawIndex","target","innerStore","shape","width","nodeWidth","height","nodeHeight","style","opacity","targetX","targetY","last","oldX","oldY","oldShape","extend","setShape","fadein","setStyle","finished","bind","start","controller","_controller","RoamController","getZr","enable","on","_onPan","_onZoom","rect","BoundingRect","getWidth","getHeight","setPointerChecker","e","contain","_clearController","dispose","Math","abs","dx","dy","rootLayout","getLayout","dispatchAction","from","uid","seriesId","id","rootRect","mouseX","originX","mouseY","originY","m","matrix","create","translate","scale","applyTransform","nodeClick","findTarget","offsetX","offsetY","isLeafRoot","_rootToNode","_zoomToNode","itemModel","hostTree","data","getItemModel","dataIndex","link","linkTarget","windowOpen","getViewRoot","_breadcrumb","Breadcrumb","aboveViewRoot","removeAll","targetNode","viewRoot","eachNode","attr","order","bgEl","background","point","transformCoordToLocal","ChartView","content","thisLayout","nodeModel","getModel","setItemGraphicEl","isInView","thisWidth","thisHeight","borderWidth","thisInvisible","thisRawIndex","oldRawIndex","upperHeight","isParent","length","itemStyleNormalModel","itemStyleEmphasisModel","itemStyleBlurModel","itemStyleSelectModel","borderRadius","giveGraphic","markRedraw","isAboveViewRoot","bg","renderBackground","upperLabelHeight","emphasisModel","focus","blurScope","isDisabled","focusOrIndices","getAncestorsIndices","getDescendantIndices","isHighDownDispatcher","setAsHighDownDispatcher","enableHoverFocus","renderContent","disableMorphing","useUpperLabel","ecData","getECData","seriesIndex","r","processInvisible","getVisual","visualBorderColor","normalStyle","emphasisStyle","blurStyle","selectStyle","upperLabelWidth","prepareText","removeTextContent","ensureState","setDefaultStateProxy","contentWidth","max","contentHeight","culling","nodeStyle","visualColor","decal","element","rectEl","visualOpacity","upperLabelRect","normalLabelModel","defaultText","convertOptionIdName","isShow","getShallow","setLabelStyle","getLabelStatesModels","inheritColor","defaultOpacity","labelFetcher","labelDataIndex","textEl","getTextContent","textStyle","textPadding","normalizeCssArray","padding","setTextConfig","layoutRect","disableLabelLayout","beforeUpdate","truncateMinChar","lineOverflow","addDrillDownIcon","textEmphasisState","getState","text","iconChar","Ctor","z","lasts","prepareAnimationWhenHasOld","Displayable","z2","calculateZ2","prepareAnimationWhenNoOld","lastCfg","parentNode","isGroup","parentOldX","parentOldY","parentOldBg","z2InLevel"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/chart/treemap/TreemapView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { bind, each, indexOf, curry, extend, normalizeCssArray, isFunction } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { isHighDownDispatcher, setAsHighDownDispatcher, setDefaultStateProxy, enableHoverFocus, Z2_EMPHASIS_LIFT } from '../../util/states.js';\nimport DataDiffer from '../../data/DataDiffer.js';\nimport * as helper from '../helper/treeHelper.js';\nimport Breadcrumb from './Breadcrumb.js';\nimport RoamController from '../../component/helper/RoamController.js';\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport * as animationUtil from '../../util/animation.js';\nimport makeStyleMapper from '../../model/mixin/makeStyleMapper.js';\nimport ChartView from '../../view/Chart.js';\nimport Displayable from 'zrender/lib/graphic/Displayable.js';\nimport { makeInner, convertOptionIdName } from '../../util/model.js';\nimport { windowOpen } from '../../util/format.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = 'label';\nvar PATH_UPPERLABEL_NORMAL = 'upperLabel'; // Should larger than emphasis states lift z\n\nvar Z2_BASE = Z2_EMPHASIS_LIFT * 10; // Should bigger than every z2.\n\nvar Z2_BG = Z2_EMPHASIS_LIFT * 2;\nvar Z2_CONTENT = Z2_EMPHASIS_LIFT * 3;\nvar getStateItemStyle = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'] // Option decal is in `DecalObject` but style.decal is in `PatternObject`.\n// So do not transfer decal directly.\n]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getStateItemStyle(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar inner = makeInner();\n\nvar TreemapView =\n/** @class */\nfunction (_super) {\n  __extends(TreemapView, _super);\n\n  function TreemapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TreemapView.type;\n    _this._state = 'ready';\n    _this._storage = createStorage();\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  TreemapView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var hasAnimation = seriesModel.get('animation');\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    hasAnimation && !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  };\n\n  TreemapView.prototype._giveContainerGroup = function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.x = layoutInfo.x;\n    containerGroup.y = layoutInfo.y;\n    return containerGroup;\n  };\n\n  TreemapView.prototype._doRender = function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n\n    function doRenderNode(thisNode, oldNode, parentGroup, depth) {\n      return renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth);\n    } // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), inner(el).willDelete = true);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  };\n\n  TreemapView.prototype._doAnimation = function (containerGroup, renderResult, seriesModel, reRoot) {\n    var durationOption = seriesModel.get('animationDurationUpdate');\n    var easingOption = seriesModel.get('animationEasing'); // TODO: do not support function until necessary.\n\n    var duration = (isFunction(durationOption) ? 0 : durationOption) || 0;\n    var easing = (isFunction(easingOption) ? null : easingOption) || 'cubicOut';\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n        var innerStore = inner(parent);\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: innerStore.nodeWidth,\n              height: innerStore.nodeHeight\n            },\n            style: {\n              opacity: 0\n            }\n          } // Others.\n          : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!innerStore.willDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = innerStore.nodeWidth / 2;\n            targetY = innerStore.nodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            x: targetX,\n            y: targetY,\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        } // TODO: do not support delay until necessary.\n\n\n        target && animationWrap.add(el, target, duration, 0, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (el instanceof graphic.Group) {\n          if (last.oldX != null) {\n            target.x = el.x;\n            target.y = el.y;\n            el.x = last.oldX;\n            el.y = last.oldY;\n          }\n        } else {\n          if (last.oldShape) {\n            target.shape = extend({}, el.shape);\n            el.setShape(last.oldShape);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, 0, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.finished(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  };\n\n  TreemapView.prototype._resetController = function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  };\n\n  TreemapView.prototype._clearController = function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  };\n\n  TreemapView.prototype._onPan = function (e) {\n    if (this._state !== 'animating' && (Math.abs(e.dx) > DRAG_THRESHOLD || Math.abs(e.dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + e.dx,\n          y: rootLayout.y + e.dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  };\n\n  TreemapView.prototype._onZoom = function (e) {\n    var mouseX = e.originX;\n    var mouseY = e.originY;\n\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [e.scale, e.scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  };\n\n  TreemapView.prototype._initEvents = function (containerGroup) {\n    var _this = this;\n\n    containerGroup.on('click', function (e) {\n      if (_this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = _this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = _this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        _this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          _this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && windowOpen(link, linkTarget);\n        }\n      }\n    }, this);\n  };\n\n  TreemapView.prototype._renderBreadcrumb = function (seriesModel, api, targetInfo) {\n    var _this = this;\n\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot()\n      } // FIXME\n      // better way?\n      // Find breadcrumb tail on center of containerGroup.\n      : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, function (node) {\n      if (_this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? _this._rootToNode({\n          node: node\n        }) : _this._zoomToNode({\n          node: node\n        });\n      }\n    });\n  };\n  /**\n   * @override\n   */\n\n\n  TreemapView.prototype.remove = function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  };\n\n  TreemapView.prototype.dispose = function () {\n    this._clearController();\n  };\n\n  TreemapView.prototype._zoomToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n\n  TreemapView.prototype._rootToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n\n\n  TreemapView.prototype.findTarget = function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  };\n\n  TreemapView.type = 'treemap';\n  return TreemapView;\n}(ChartView);\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n  var data = seriesModel.getData();\n  var nodeModel = thisNode.getModel(); // Only for enabling highlight/downplay. Clear firstly.\n  // Because some node will not be rendered.\n\n  data.setItemGraphicEl(thisNode.dataIndex, null);\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = nodeModel.getModel('itemStyle');\n  var itemStyleEmphasisModel = nodeModel.getModel(['emphasis', 'itemStyle']);\n  var itemStyleBlurModel = nodeModel.getModel(['blur', 'itemStyle']);\n  var itemStyleSelectModel = nodeModel.getModel(['select', 'itemStyle']);\n  var borderRadius = itemStyleNormalModel.get('borderRadius') || 0; // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.x = thisLayout.x || 0;\n  group.y = thisLayout.y || 0;\n  group.markRedraw();\n  inner(group).nodeWidth = thisWidth;\n  inner(group).nodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z2_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperLabelHeight);\n  var emphasisModel = nodeModel.getModel('emphasis');\n  var focus = emphasisModel.get('focus');\n  var blurScope = emphasisModel.get('blurScope');\n  var isDisabled = emphasisModel.get('disabled');\n  var focusOrIndices = focus === 'ancestor' ? thisNode.getAncestorsIndices() : focus === 'descendant' ? thisNode.getDescendantIndices() : focus; // No children, render content.\n\n  if (isParent) {\n    // Because of the implementation about \"traverse\" in graphic hover style, we\n    // can not set hover listener on the \"group\" of non-leaf node. Otherwise the\n    // hover event from the descendents will be listenered.\n    if (isHighDownDispatcher(group)) {\n      setAsHighDownDispatcher(group, false);\n    }\n\n    if (bg) {\n      setAsHighDownDispatcher(bg, !isDisabled); // Only for enabling highlight/downplay.\n\n      data.setItemGraphicEl(thisNode.dataIndex, bg);\n      enableHoverFocus(bg, focusOrIndices, blurScope);\n    }\n  } else {\n    var content = giveGraphic('content', Rect, depth, Z2_CONTENT);\n    content && renderContent(group, content);\n    bg.disableMorphing = true;\n\n    if (bg && isHighDownDispatcher(bg)) {\n      setAsHighDownDispatcher(bg, false);\n    }\n\n    setAsHighDownDispatcher(group, !isDisabled); // Only for enabling highlight/downplay.\n\n    data.setItemGraphicEl(thisNode.dataIndex, group);\n    enableHoverFocus(group, focusOrIndices, blurScope);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    var ecData = getECData(bg); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight,\n      r: borderRadius\n    });\n\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(bg);\n    } else {\n      bg.invisible = false;\n      var style = thisNode.getVisual('style');\n      var visualBorderColor = style.stroke;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      emphasisStyle.fill = itemStyleEmphasisModel.get('borderColor');\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      blurStyle.fill = itemStyleBlurModel.get('borderColor');\n      var selectStyle = getStateItemStyle(itemStyleSelectModel);\n      selectStyle.fill = itemStyleSelectModel.get('borderColor');\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText( // PENDING: convert ZRColor to ColorString for text.\n        bg, visualBorderColor, style.opacity, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          bg.removeTextContent();\n        }\n\n      bg.setStyle(normalStyle);\n      bg.ensureState('emphasis').style = emphasisStyle;\n      bg.ensureState('blur').style = blurStyle;\n      bg.ensureState('select').style = selectStyle;\n      setDefaultStateProxy(bg);\n    }\n\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    var ecData = getECData(content); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight,\n      r: borderRadius\n    });\n\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(content);\n    } else {\n      content.invisible = false;\n      var nodeStyle = thisNode.getVisual('style');\n      var visualColor = nodeStyle.fill;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      normalStyle.decal = nodeStyle.decal;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      var selectStyle = getStateItemStyle(itemStyleSelectModel); // PENDING: convert ZRColor to ColorString for text.\n\n      prepareText(content, visualColor, nodeStyle.opacity, null);\n      content.setStyle(normalStyle);\n      content.ensureState('emphasis').style = emphasisStyle;\n      content.ensureState('blur').style = blurStyle;\n      content.ensureState('select').style = selectStyle;\n      setDefaultStateProxy(content);\n    }\n\n    group.add(content);\n  }\n\n  function processInvisible(element) {\n    // Delay invisible setting utill animation finished,\n    // avoid element vanish suddenly before animation.\n    !element.invisible && willInvisibleEls.push(element);\n  }\n\n  function prepareText(rectEl, visualColor, visualOpacity, // Can be null/undefined\n  upperLabelRect) {\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var defaultText = convertOptionIdName(nodeModel.get('name'), null);\n    var isShow = normalLabelModel.getShallow('show');\n    setLabelStyle(rectEl, getLabelStatesModels(nodeModel, upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL), {\n      defaultText: isShow ? defaultText : null,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      labelFetcher: seriesModel,\n      labelDataIndex: thisNode.dataIndex\n    });\n    var textEl = rectEl.getTextContent();\n\n    if (!textEl) {\n      return;\n    }\n\n    var textStyle = textEl.style;\n    var textPadding = normalizeCssArray(textStyle.padding || 0);\n\n    if (upperLabelRect) {\n      rectEl.setTextConfig({\n        layoutRect: upperLabelRect\n      });\n      textEl.disableLabelLayout = true;\n    }\n\n    textEl.beforeUpdate = function () {\n      var width = Math.max((upperLabelRect ? upperLabelRect.width : rectEl.shape.width) - textPadding[1] - textPadding[3], 0);\n      var height = Math.max((upperLabelRect ? upperLabelRect.height : rectEl.shape.height) - textPadding[0] - textPadding[2], 0);\n\n      if (textStyle.width !== width || textStyle.height !== height) {\n        textEl.setStyle({\n          width: width,\n          height: height\n        });\n      }\n    };\n\n    textStyle.truncateMinChar = 2;\n    textStyle.lineOverflow = 'truncate';\n    addDrillDownIcon(textStyle, upperLabelRect, thisLayout);\n    var textEmphasisState = textEl.getState('emphasis');\n    addDrillDownIcon(textEmphasisState ? textEmphasisState.style : null, upperLabelRect, thisLayout);\n  }\n\n  function addDrillDownIcon(style, upperLabelRect, thisLayout) {\n    var text = style ? style.text : null;\n\n    if (!upperLabelRect && thisLayout.isLeafRoot && text != null) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      style.text = iconChar ? iconChar + ' ' + text : text;\n    }\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor();\n\n        if (element instanceof Displayable) {\n          element.z2 = calculateZ2(depth, z);\n        }\n\n        prepareAnimationWhenNoOld(lasts, element);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n\n    if (element instanceof Group) {\n      lastCfg.oldX = element.x;\n      lastCfg.oldY = element.y;\n    } else {\n      lastCfg.oldShape = extend({}, element.shape);\n    }\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n    var isGroup = element instanceof graphic.Group;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.oldShape) {\n        parentOldX = parentOldBg.oldShape.width;\n        parentOldY = parentOldBg.oldShape.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      if (isGroup) {\n        lastCfg.oldX = 0;\n        lastCfg.oldY = parentOldY;\n      } else {\n        lastCfg.oldShape = {\n          x: parentOldX,\n          y: parentOldY,\n          width: 0,\n          height: 0\n        };\n      }\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = !isGroup;\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ2(depth, z2InLevel) {\n  return depth * Z2_BASE + z2InLevel;\n}\n\nexport default TreemapView;"],"mappings":"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"},"metadata":{},"sourceType":"script"}