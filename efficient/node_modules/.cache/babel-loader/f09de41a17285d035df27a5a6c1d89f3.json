{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PRIORITY = void 0;\nexports.connect = connect;\nexports.dependencies = exports.dataTool = void 0;\nexports.disConnect = disConnect;\nexports.disconnect = void 0;\nexports.dispose = dispose;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.getMap = getMap;\nexports.init = init;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.registerLayout = registerLayout;\nexports.registerLoading = registerLoading;\nObject.defineProperty(exports, \"registerLocale\", {\n  enumerable: true,\n  get: function () {\n    return _locale.registerLocale;\n  }\n});\nexports.registerMap = registerMap;\nexports.registerPostInit = registerPostInit;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerTheme = registerTheme;\nexports.registerTransform = void 0;\nexports.registerUpdateLifecycle = registerUpdateLifecycle;\nexports.registerVisual = registerVisual;\nexports.setCanvasCreator = setCanvasCreator;\nexports.version = void 0;\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar _tslib = require(\"tslib\");\n\nvar zrender = _interopRequireWildcard(require(\"zrender/lib/zrender.js\"));\n\nvar _util = require(\"zrender/lib/core/util.js\");\n\nvar _env = _interopRequireDefault(require(\"zrender/lib/core/env.js\"));\n\nvar _timsort = _interopRequireDefault(require(\"zrender/lib/core/timsort.js\"));\n\nvar _Eventful = _interopRequireDefault(require(\"zrender/lib/core/Eventful.js\"));\n\nvar _Global = _interopRequireDefault(require(\"../model/Global.js\"));\n\nvar _ExtensionAPI = _interopRequireDefault(require(\"./ExtensionAPI.js\"));\n\nvar _CoordinateSystem = _interopRequireDefault(require(\"./CoordinateSystem.js\"));\n\nvar _OptionManager = _interopRequireDefault(require(\"../model/OptionManager.js\"));\n\nvar _backwardCompat = _interopRequireDefault(require(\"../preprocessor/backwardCompat.js\"));\n\nvar _dataStack = _interopRequireDefault(require(\"../processor/dataStack.js\"));\n\nvar _Series = _interopRequireDefault(require(\"../model/Series.js\"));\n\nvar _Component = _interopRequireDefault(require(\"../view/Component.js\"));\n\nvar _Chart = _interopRequireDefault(require(\"../view/Chart.js\"));\n\nvar graphic = _interopRequireWildcard(require(\"../util/graphic.js\"));\n\nvar _innerStore = require(\"../util/innerStore.js\");\n\nvar _states = require(\"../util/states.js\");\n\nvar modelUtil = _interopRequireWildcard(require(\"../util/model.js\"));\n\nvar _throttle = require(\"../util/throttle.js\");\n\nvar _style = require(\"../visual/style.js\");\n\nvar _default = _interopRequireDefault(require(\"../loading/default.js\"));\n\nvar _Scheduler = _interopRequireDefault(require(\"./Scheduler.js\"));\n\nvar _light = _interopRequireDefault(require(\"../theme/light.js\"));\n\nvar _dark = _interopRequireDefault(require(\"../theme/dark.js\"));\n\nvar _clazz = require(\"../util/clazz.js\");\n\nvar _ECEventProcessor = require(\"../util/ECEventProcessor.js\");\n\nvar _symbol = require(\"../visual/symbol.js\");\n\nvar _helper = require(\"../visual/helper.js\");\n\nvar _log = require(\"../util/log.js\");\n\nvar _dataSelectAction = require(\"../legacy/dataSelectAction.js\");\n\nvar _transform = require(\"../data/helper/transform.js\");\n\nvar _locale = require(\"./locale.js\");\n\nvar _event = require(\"../util/event.js\");\n\nvar _decal = _interopRequireDefault(require(\"../visual/decal.js\"));\n\nvar _lifecycle = _interopRequireDefault(require(\"./lifecycle.js\"));\n\nvar _platform = require(\"zrender/lib/core/platform.js\");\n\nvar _impl = require(\"./impl.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar hasWindow = typeof window !== 'undefined';\nvar version = '5.3.3';\nexports.version = version;\nvar dependencies = {\n  zrender: '5.3.2'\n};\nexports.dependencies = dependencies;\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the begining of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nexports.PRIORITY = PRIORITY;\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar PENDING_UPDATE = '__pendingUpdate';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\n\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return _Eventful.default.prototype[method].apply(host, args);\n}\n\nvar MessageCenter =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(MessageCenter, _super);\n\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MessageCenter;\n}(_Eventful.default);\n\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar createExtensionAPI;\nvar enableConnect;\nvar markStatusToUpdate;\nvar applyChangedStates;\n\nvar ECharts =\n/** @class */\nfunction (_super) {\n  (0, _tslib.__extends)(ECharts, _super);\n\n  function ECharts(dom, // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new _ECEventProcessor.ECEventProcessor()) || this;\n\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if ((0, _util.isString)(theme)) {\n      theme = themeStorage[theme];\n    }\n\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultUseDirtyRect = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var root =\n      /* eslint-disable-next-line */\n      hasWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      ssr: opts.ssr,\n      useDirtyRect: opts.useDirtyRect == null ? defaultUseDirtyRect : opts.useDirtyRect\n    });\n    _this._ssr = opts.ssr; // Expect 60 fps.\n\n    _this._throttledZrFlush = (0, _throttle.throttle)((0, _util.bind)(zr.flush, zr), 17);\n    theme = (0, _util.clone)(theme);\n    theme && (0, _backwardCompat.default)(theme, true);\n    _this._theme = theme;\n    _this._locale = (0, _locale.createLocaleObject)(opts.locale || _locale.SYSTEM_LANG);\n    _this._coordSysMgr = new _CoordinateSystem.default();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n\n    (0, _timsort.default)(visualFuncs, prioritySortFunc);\n    (0, _timsort.default)(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new _Scheduler.default(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n    _this.resize = (0, _util.bind)(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    (0, _util.setAsPrimitive)(_this);\n    return _this;\n  }\n\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[PENDING_UPDATE]) {\n      var silent = this[PENDING_UPDATE].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, this[PENDING_UPDATE].updateParams);\n      } catch (e) {\n        this[IN_MAIN_PROCESS_KEY] = false;\n        this[PENDING_UPDATE] = null;\n        throw e;\n      } // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n\n      this._zr.flush();\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[PENDING_UPDATE] = null;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain', {});\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n\n  ECharts.prototype.isSSR = function () {\n    return this._ssr;\n  };\n  /* eslint-disable-next-line */\n\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        (0, _log.error)('`setOption` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n\n    if ((0, _util.isObject)(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    if (!this._model || notMerge) {\n      var optionManager = new _OptionManager.default(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new _Global.default();\n      ecModel.scheduler = this._scheduler;\n      ecModel.ssr = this._ssr;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n\n    var updateParams = {\n      seriesTransition: transitionOpt,\n      optionChanged: true\n    };\n\n    if (lazyUpdate) {\n      this[PENDING_UPDATE] = {\n        silent: silent,\n        updateParams: updateParams\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, updateParams);\n      } catch (e) {\n        this[PENDING_UPDATE] = null;\n        this[IN_MAIN_PROCESS_KEY] = false;\n        throw e;\n      } // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n\n      if (!this._ssr) {\n        // not use flush when using ssr mode.\n        this._zr.flush();\n      }\n\n      this[PENDING_UPDATE] = null;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @deprecated\n   */\n\n\n  ECharts.prototype.setTheme = function () {\n    (0, _log.deprecateLog)('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */\n    || hasWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   * @deprecated Use renderToCanvas instead.\n   */\n\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      (0, _log.deprecateReplaceLog)('getRenderedCanvas', 'renderToCanvas');\n    }\n\n    return this.renderToCanvas(opts);\n  };\n\n  ECharts.prototype.renderToCanvas = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'canvas') {\n        throw new Error('renderToCanvas can only be used in the canvas renderer.');\n      }\n    }\n\n    return painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n\n  ECharts.prototype.renderToSVGString = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'svg') {\n        throw new Error('renderToSVGString can only be used in the svg renderer.');\n      }\n    }\n\n    return painter.renderToString({\n      useViewBox: opts.useViewBox\n    });\n  };\n  /**\n   * Get svg data url\n   */\n\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!_env.default.svgSupported) {\n      return;\n    }\n\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    (0, _util.each)(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    (0, _util.each)(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.renderToCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    (0, _util.each)(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      (0, _util.each)(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.renderToCanvas((0, _util.clone)(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n\n      var targetCanvas = _platform.platformApi.createCanvas();\n\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n\n      if (isSvg) {\n        var content_1 = '';\n        (0, _util.each)(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n\n        (0, _util.each)(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    (0, _util.each)(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && (0, _util.each)(models, function (model) {\n        var coordSys = model.coordinateSystem;\n\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        console.warn('There is no specified seires model');\n      }\n    }\n\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? (0, _helper.getItemVisualFromData)(data, dataIndexInside, visualType) : (0, _helper.getVisualFromData)(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n\n    (0, _util.each)(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && (0, _event.findEventDispatcher)(el, function (parent) {\n            var ecData = (0, _innerStore.getECData)(parent);\n\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n              params = (0, _util.extend)({}, ecData.eventData);\n              return true;\n            }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              console.warn('model or view can not be found by params');\n            }\n          }\n\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n\n      handler.zrEventfulCallAtLast = true;\n\n      _this._zr.on(eveName, handler, _this);\n    });\n    (0, _util.each)(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    (0, _util.each)(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    (0, _dataSelectAction.handleLegacySelectEvents)(this._messageCenter, this, this._api);\n  };\n\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this.setOption({\n      series: []\n    }, true);\n  };\n\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._disposed = true;\n    var dom = this.getDom();\n\n    if (dom) {\n      modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    }\n\n    var chart = this;\n    var api = chart._api;\n    var ecModel = chart._model;\n    (0, _util.each)(chart._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    (0, _util.each)(chart._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    chart._zr.dispose(); // Set properties to null.\n    // To reduce the memory cost in case the top code still holds this instance unexpectedly.\n\n\n    chart._dom = chart._model = chart._chartsMap = chart._componentsMap = chart._chartsViews = chart._componentsViews = chart._scheduler = chart._api = chart._zr = chart._throttledZrFlush = chart._theme = chart._coordSysMgr = chart._messageCenter = null;\n    delete instances[chart.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n\n  ECharts.prototype.resize = function (opts) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        (0, _log.error)('`resize` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._zr.resize(opts);\n\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n\n    if (!ecModel) {\n      return;\n    }\n\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent; // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n\n      needPrepare = true;\n      this[PENDING_UPDATE] = null;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    try {\n      needPrepare && prepare(this);\n      updateMethods.update.call(this, {\n        type: 'resize',\n        animation: (0, _util.extend)({\n          // Disable animation\n          duration: 0\n        }, opts && opts.animation)\n      });\n    } catch (e) {\n      this[IN_MAIN_PROCESS_KEY] = false;\n      throw e;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if ((0, _util.isObject)(name)) {\n      cfg = name;\n      name = '';\n    }\n\n    name = name || 'default';\n    this.hideLoading();\n\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Loading effects ' + name + ' not exists.');\n      }\n\n      return;\n    }\n\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = (0, _util.extend)({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!(0, _util.isObject)(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n\n      return;\n    }\n\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && _env.default.browser.weChat) {\n      // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh util user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.updateLabelLayout = function () {\n    _lifecycle.default.trigger('series:layoutlabels', this._model, this._api, {\n      // Not adding series labels.\n      // TODO\n      updatedSeries: []\n    });\n  };\n\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (process.env.NODE_ENV !== 'production') {\n      (0, _util.assert)(params.data && seriesModel);\n    }\n\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n\n      function doPrepare(model) {\n        // By defaut view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n\n        if (!view) {\n          var classType = (0, _clazz.parseClassType)(model.type);\n          var Clazz = isComponent ? _Component.default.getClass(classType.main, classType.sub) : // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          _Chart.default.getClass(classType.sub);\n\n          if (process.env.NODE_ENV !== 'production') {\n            (0, _util.assert)(Clazz, classType.sub + ' does not exist.');\n          }\n\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        (0, _util.each)([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = (0, _util.createHashMap)();\n        (0, _util.each)(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      } // If dispatchAction before setOption, do nothing.\n\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n\n        if ((0, _states.isHighDownPayload)(payload)) {\n          if (model instanceof _Series.default) {\n            if (payload.type === _states.HIGHLIGHT_ACTION_TYPE && !payload.notBlur && !model.get(['emphasis', 'disabled'])) {\n              (0, _states.blurSeriesFromHighlightPayload)(model, payload, ecIns._api);\n            }\n          } else {\n            var _a = (0, _states.findComponentHighDownDispatchers)(model.mainType, model.componentIndex, payload.name, ecIns._api),\n                focusSelf = _a.focusSelf,\n                dispatchers = _a.dispatchers;\n\n            if (payload.type === _states.HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n              (0, _states.blurComponent)(model.mainType, model.componentIndex, ecIns._api);\n            } // PENDING:\n            // Whether to put this \"enter emphasis\" code in `ComponentView`,\n            // which will be the same as `ChartView` but might be not necessary\n            // and will be far from this logic.\n\n\n            if (dispatchers) {\n              (0, _util.each)(dispatchers, function (dispatcher) {\n                payload.type === _states.HIGHLIGHT_ACTION_TYPE ? (0, _states.enterEmphasis)(dispatcher) : (0, _states.leaveEmphasis)(dispatcher);\n              });\n            }\n          }\n        } else if ((0, _states.isSelectChangePayload)(payload)) {\n          // TODO geo\n          if (model instanceof _Series.default) {\n            (0, _states.toggleSelectionFromPayload)(model, payload, ecIns._api);\n            (0, _states.updateSeriesElementSelection)(model);\n            markStatusToUpdate(ecIns);\n          }\n        }\n      }, ecIns);\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n        callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n      }, ecIns);\n\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload, {\n          // Needs to mark option changed if newOption is given.\n          // It's from MagicType.\n          // TODO If use a separate flag optionChanged in payload?\n          optionChanged: payload.newOption != null\n        });\n      },\n      update: function (payload, updateParams) {\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the orignal point\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // deteming whether use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not requied in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload, updateParams); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode');\n        zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n        if (darkMode != null && darkMode !== 'auto') {\n          zr.setDarkMode(darkMode);\n        }\n\n        _lifecycle.default.trigger('afterupdate', ecModel, api);\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n\n          var componentView = _this.getViewOfComponentModel(componentModel);\n\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = (0, _util.createHashMap)();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n        renderSeries(this, ecModel, api, payload, {}, seriesDirtyMap);\n\n        _lifecycle.default.trigger('afterupdate', ecModel, api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n\n        _Chart.default.markUpdateMethod(payload, 'updateView');\n\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n\n        render(this, ecModel, this._api, payload, {});\n\n        _lifecycle.default.trigger('afterupdate', ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        _Chart.default.markUpdateMethod(payload, 'updateVisual');\n\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n\n        _lifecycle.default.trigger('afterupdate', ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n\n      var ecModel = ecIns._model;\n\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && (0, _clazz.parseClassType)(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = (0, _util.map)(payload.batch, function (item) {\n          item = (0, _util.defaults)((0, _util.extend)({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = (0, _states.isSelectChangePayload)(payload);\n      var isHighDown = (0, _states.isHighDownPayload)(payload); // Only leave blur once if there are multiple batches.\n\n      if (isHighDown) {\n        (0, _states.allLeaveBlur)(this._api);\n      }\n\n      (0, _util.each)(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || (0, _util.extend)({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n              queryOptionMap = _a.queryOptionMap,\n              mainTypeSpecified = _a.mainTypeSpecified;\n\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        try {\n          // Still dirty\n          if (this[PENDING_UPDATE]) {\n            prepare(this);\n            updateMethods.update.call(this, payload);\n            this[PENDING_UPDATE] = null;\n          } else {\n            updateMethods[updateMethod].call(this, payload);\n          }\n        } catch (e) {\n          this[IN_MAIN_PROCESS_KEY] = false;\n          throw e;\n        }\n      } // Follow the rule of action batch\n\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: (0, _states.getAllSelectedIndices)(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatly,\n        // so it should only be triggered when rendering indeed happend\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if ( // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[PENDING_UPDATE] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = (0, _event.findEventDispatcher)(el, _states.isHighDownDispatcher);\n\n        if (dispatcher) {\n          (0, _states.handleGlobalMouseOverForHighDown)(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = (0, _event.findEventDispatcher)(el, _states.isHighDownDispatcher);\n\n        if (dispatcher) {\n          (0, _states.handleGlobalMouseOutForHighDown)(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = (0, _event.findEventDispatcher)(el, function (target) {\n          return (0, _innerStore.getECData)(target).dataIndex != null;\n        }, true);\n\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = (0, _innerStore.getECData)(dispatcher);\n\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n\n    function clearColorPalette(ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    }\n\n    ; // Allocate zlevels for series and components\n\n    function allocateZlevels(ecModel) {\n      ;\n      var componentZLevels = [];\n      var seriesZLevels = [];\n      var hasSeperateZLevel = false;\n      ecModel.eachComponent(function (componentType, componentModel) {\n        var zlevel = componentModel.get('zlevel') || 0;\n        var z = componentModel.get('z') || 0;\n        var zlevelKey = componentModel.getZLevelKey();\n        hasSeperateZLevel = hasSeperateZLevel || !!zlevelKey;\n        (componentType === 'series' ? seriesZLevels : componentZLevels).push({\n          zlevel: zlevel,\n          z: z,\n          idx: componentModel.componentIndex,\n          type: componentType,\n          key: zlevelKey\n        });\n      });\n\n      if (hasSeperateZLevel) {\n        // Series after component\n        var zLevels = componentZLevels.concat(seriesZLevels);\n        var lastSeriesZLevel_1;\n        var lastSeriesKey_1;\n        (0, _timsort.default)(zLevels, function (a, b) {\n          if (a.zlevel === b.zlevel) {\n            return a.z - b.z;\n          }\n\n          return a.zlevel - b.zlevel;\n        });\n        (0, _util.each)(zLevels, function (item) {\n          var componentModel = ecModel.getComponent(item.type, item.idx);\n          var zlevel = item.zlevel;\n          var key = item.key;\n\n          if (lastSeriesZLevel_1 != null) {\n            zlevel = Math.max(lastSeriesZLevel_1, zlevel);\n          }\n\n          if (key) {\n            if (zlevel === lastSeriesZLevel_1 && key !== lastSeriesKey_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = key;\n          } else if (lastSeriesKey_1) {\n            if (zlevel === lastSeriesZLevel_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = '';\n          }\n\n          lastSeriesZLevel_1 = zlevel;\n          componentModel.setZLevel(zlevel);\n        });\n      }\n    }\n\n    render = function (ecIns, ecModel, api, payload, updateParams) {\n      allocateZlevels(ecModel);\n      renderComponents(ecIns, ecModel, api, payload, updateParams);\n      (0, _util.each)(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload, updateParams); // Remove groups of unrendered charts\n\n      (0, _util.each)(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n\n    renderComponents = function (ecIns, ecModel, api, payload, updateParams, dirtyList) {\n      (0, _util.each)(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n\n    renderSeries = function (ecIns, ecModel, api, payload, updateParams, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      updateParams = (0, _util.extend)(updateParams || {}, {\n        updatedSeries: ecModel.getSeries()\n      }); // TODO progressive?\n\n      _lifecycle.default.trigger('series:beforeupdate', ecModel, api, updateParams);\n\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // increamental render (alway render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        (0, _states.updateSeriesElementSelection)(seriesModel);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n\n      _lifecycle.default.trigger('series:layoutlabels', ecModel, api, updateParams); // transition after label is layouted.\n\n\n      _lifecycle.default.trigger('series:transition', ecModel, api, updateParams);\n\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n\n      _lifecycle.default.trigger('series:afterupdate', ecModel, api, updateParams);\n    };\n\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n\n      if (el.hoverState === _states.HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === _states.HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n\n      el.useStates(newStates);\n    }\n\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n\n      if (elCount > ecModel.get('hoverLayerThreshold') && !_env.default.node && !_env.default.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n          if (chartView.__alive) {\n            chartView.eachRendered(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n      chartView.eachRendered(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DONT mark the element dirty. In case element is incremental and don't wan't to rerender.\n          el.style.blend = blendMode;\n        }\n      });\n    }\n\n    ;\n\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      }\n\n      var z = model.get('z') || 0;\n      var zlevel = model.get('zlevel') || 0; // Set z and zlevel\n\n      view.eachRendered(function (el) {\n        doUpdateZ(el, z, zlevel, -Infinity); // Don't traverse the children because it has been traversed in _updateZ.\n\n        return true;\n      });\n    }\n\n    ;\n\n    function doUpdateZ(el, z, zlevel, maxZ2) {\n      // Group may also have textContent\n      var label = el.getTextContent();\n      var labelLine = el.getTextGuideLine();\n      var isGroup = el.isGroup;\n\n      if (isGroup) {\n        // set z & zlevel of children elements of Group\n        var children = el.childrenRef();\n\n        for (var i = 0; i < children.length; i++) {\n          maxZ2 = Math.max(doUpdateZ(children[i], z, zlevel, maxZ2), maxZ2);\n        }\n      } else {\n        // not Group\n        el.z = z;\n        el.zlevel = zlevel;\n        maxZ2 = Math.max(el.z2, maxZ2);\n      } // always set z and zlevel if label/labelLine exists\n\n\n      if (label) {\n        label.z = z;\n        label.zlevel = zlevel; // lift z2 of text content\n        // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n        isFinite(maxZ2) && (label.z2 = maxZ2 + 2);\n      }\n\n      if (labelLine) {\n        var textGuideLineConfig = el.textGuideLineConfig;\n        labelLine.z = z;\n        labelLine.zlevel = zlevel;\n        isFinite(maxZ2) && (labelLine.z2 = maxZ2 + (textGuideLineConfig && textGuideLineConfig.showAbove ? 1 : -1));\n      }\n\n      return maxZ2;\n    } // Clear states without animation.\n    // TODO States on component.\n\n\n    function clearStates(model, view) {\n      view.eachRendered(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n\n      } : null;\n      view.eachRendered(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n\n          if (el instanceof graphic.Path) {\n            (0, _states.savePathStates)(el);\n          } // Only updated on changed element. In case element is incremental and don't wan't to rerender.\n          // TODO, a more proper way?\n\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // The use higlighted and selected flag to toggle states.\n\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n\n    ;\n\n    createExtensionAPI = function (ecIns) {\n      return new (\n      /** @class */\n      function (_super) {\n        (0, _tslib.__extends)(class_1, _super);\n\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n\n            el = el.parent;\n          }\n        };\n\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          (0, _states.enterEmphasis)(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          (0, _states.leaveEmphasis)(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterBlur = function (el) {\n          (0, _states.enterBlur)(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveBlur = function (el) {\n          (0, _states.leaveBlur)(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterSelect = function (el) {\n          (0, _states.enterSelect)(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveSelect = function (el) {\n          (0, _states.leaveSelect)(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n\n        return class_1;\n      }(_ExtensionAPI.default))(ecIns);\n    };\n\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n\n      (0, _util.each)(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            (0, _util.each)(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            (0, _util.each)(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n  }();\n\n  return ECharts;\n}(_Eventful.default);\n\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  (0, _log.deprecateLog)('ECharts#one is deprecated.');\n\n  function wrapped() {\n    var args2 = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n};\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Instance ' + id + ' has been disposed');\n  }\n}\n\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.locale Specify the locale.\n * @param opts.useDirtyRect Enable dirty rectangle rendering or not.\n */\n\nfunction init(dom, theme, opts) {\n  var isClient = !(opts && opts.ssr);\n\n  if (isClient) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!dom) {\n        throw new Error('Initialize failed: invalid dom.');\n      }\n    }\n\n    var existInstance = getInstanceByDom(dom);\n\n    if (existInstance) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('There is a chart instance already initialized on the dom.');\n      }\n\n      return existInstance;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if ((0, _util.isDom)(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n        console.warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n      }\n    }\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  isClient && modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n\n  _lifecycle.default.trigger('afterinit', chart);\n\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if ((0, _util.isArray)(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    (0, _util.each)(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    (0, _util.each)(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backword compat\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexports.disconnect = disconnect;\n\nfunction dispose(chart) {\n  if ((0, _util.isString)(chart)) {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  if ((0, _util.indexOf)(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\n\nfunction registerPostInit(postInitFunc) {\n  registerUpdateLifecycle('afterinit', postInitFunc);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  registerUpdateLifecycle('afterupdate', postUpdateFunc);\n}\n\nfunction registerUpdateLifecycle(name, cb) {\n  _lifecycle.default.on(name, cb);\n}\n\nfunction registerAction(actionInfo, eventName, action) {\n  if ((0, _util.isFunction)(eventName)) {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = (0, _util.isObject)(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n\n  (0, _util.assert)(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n\nfunction registerCoordinateSystem(type, coordSysCreator) {\n  _CoordinateSystem.default.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = _CoordinateSystem.default.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n\nvar registeredTasks = [];\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if ((0, _util.isFunction)(priority) || (0, _util.isObject)(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n\n    (0, _util.each)(targetList, function (wrap) {\n      (0, _util.assert)(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n\n  if ((0, _util.indexOf)(registeredTasks, fn) >= 0) {\n    return;\n  }\n\n  registeredTasks.push(fn);\n\n  var stageHandler = _Scheduler.default.wrapStageHandler(fn, visualType);\n\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n *\n * @deprecated use setPlatformAPI({ createCanvas }) instead.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  if (process.env.NODE_ENV !== 'production') {\n    (0, _log.deprecateLog)('setCanvasCreator is deprecated. Use setPlatformAPI({ createCanvas }) instead.');\n  }\n\n  (0, _platform.setPlatformAPI)({\n    createCanvas: creator\n  });\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  var registerMap = (0, _impl.getImpl)('registerMap');\n  registerMap && registerMap(mapName, geoJson, specialAreas);\n}\n\nfunction getMap(mapName) {\n  var getMap = (0, _impl.getImpl)('getMap');\n  return getMap && getMap(mapName);\n}\n\nvar registerTransform = _transform.registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Buitlin global visual\n\nexports.registerTransform = registerTransform;\nregisterVisual(PRIORITY_VISUAL_GLOBAL, _style.seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, _style.dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, _style.dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, _symbol.seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, _symbol.dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, _decal.default);\nregisterPreprocessor(_backwardCompat.default);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, _dataStack.default);\nregisterLoading('default', _default.default); // Default actions\n\nregisterAction({\n  type: _states.HIGHLIGHT_ACTION_TYPE,\n  event: _states.HIGHLIGHT_ACTION_TYPE,\n  update: _states.HIGHLIGHT_ACTION_TYPE\n}, _util.noop);\nregisterAction({\n  type: _states.DOWNPLAY_ACTION_TYPE,\n  event: _states.DOWNPLAY_ACTION_TYPE,\n  update: _states.DOWNPLAY_ACTION_TYPE\n}, _util.noop);\nregisterAction({\n  type: _states.SELECT_ACTION_TYPE,\n  event: _states.SELECT_ACTION_TYPE,\n  update: _states.SELECT_ACTION_TYPE\n}, _util.noop);\nregisterAction({\n  type: _states.UNSELECT_ACTION_TYPE,\n  event: _states.UNSELECT_ACTION_TYPE,\n  update: _states.UNSELECT_ACTION_TYPE\n}, _util.noop);\nregisterAction({\n  type: _states.TOGGLE_SELECT_ACTION_TYPE,\n  event: _states.TOGGLE_SELECT_ACTION_TYPE,\n  update: _states.TOGGLE_SELECT_ACTION_TYPE\n}, _util.noop); // Default theme\n\nregisterTheme('light', _light.default);\nregisterTheme('dark', _dark.default); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.dataTool = dataTool;","map":{"version":3,"names":["hasWindow","window","version","dependencies","zrender","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_SERIES_FILTER","PRIORITY_PROCESSOR_DATASTACK","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_DEFAULT","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_PROGRESSIVE_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_CHART_DATA_CUSTOM","PRIORITY_VISUAL_POST_CHART_LAYOUT","PRIORITY_VISUAL_BRUSH","PRIORITY_VISUAL_ARIA","PRIORITY_VISUAL_DECAL","PRIORITY","PROCESSOR","FILTER","SERIES_FILTER","STATISTIC","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","GLOBAL","CHART","POST_CHART_LAYOUT","COMPONENT","BRUSH","CHART_ITEM","ARIA","DECAL","IN_MAIN_PROCESS_KEY","PENDING_UPDATE","STATUS_NEEDS_UPDATE_KEY","ACTION_REG","CONNECT_STATUS_KEY","CONNECT_STATUS_PENDING","CONNECT_STATUS_UPDATING","CONNECT_STATUS_UPDATED","createRegisterEventWithLowercaseECharts","method","args","_i","arguments","length","isDisposed","disposedWarning","id","toLowercaseNameAndCallEventful","createRegisterEventWithLowercaseMessageCenter","host","toLowerCase","Eventful","prototype","apply","MessageCenter","_super","__extends","messageCenterProto","on","off","prepare","prepareView","updateDirectly","updateMethods","doConvertPixel","updateStreamModes","doDispatchAction","flushPendingActions","triggerUpdatedEvent","bindRenderedEvent","bindMouseEvent","render","renderComponents","renderSeries","createExtensionAPI","enableConnect","markStatusToUpdate","applyChangedStates","ECharts","dom","theme","opts","_this","call","ECEventProcessor","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_pendingActions","isString","themeStorage","_dom","defaultRenderer","defaultUseDirtyRect","process","env","NODE_ENV","root","global","__ECHARTS__DEFAULT__RENDERER__","devUseDirtyRect","__ECHARTS__DEFAULT__USE_DIRTY_RECT__","zr","_zr","init","renderer","devicePixelRatio","width","height","ssr","useDirtyRect","_ssr","_throttledZrFlush","throttle","bind","flush","clone","backwardCompat","_theme","_locale","createLocaleObject","locale","SYSTEM_LANG","_coordSysMgr","CoordinateSystemManager","api","_api","prioritySortFunc","a","b","__prio","timsort","visualFuncs","dataProcessorFuncs","_scheduler","Scheduler","_messageCenter","_initEvents","resize","animation","_onframe","setAsPrimitive","_disposed","scheduler","silent","update","updateParams","e","unfinished","remainTime","ecModel","_model","startTime","Date","performSeriesTasks","performDataProcessorTasks","performVisualTasks","getDom","getId","getZr","isSSR","setOption","option","notMerge","lazyUpdate","error","replaceMerge","transitionOpt","isObject","transition","optionManager","OptionManager","GlobalModel","optionPreprocessorFuncs","seriesTransition","optionChanged","wakeUp","setTheme","deprecateLog","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","deprecateReplaceLog","renderToCanvas","type","Error","backgroundColor","get","pixelRatio","renderToSVGString","renderToString","useViewBox","getSvgDataURL","svgSupported","list","storage","getDisplayList","each","el","stopAnimation","toDataURL","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","mainType","component","view","__viewId","group","ignore","push","url","getType","getConnectedDataURL","isSvg","groupId","mathMin","Math","min","mathMax","max","MAX_NUMBER","Infinity","connectedGroups","left_1","top_1","right_1","bottom_1","canvasList_1","dpr_1","instances","chart","canvas","getSvgDom","innerHTML","boundingRect","getBoundingClientRect","left","top","right","bottom","targetCanvas","platformApi","createCanvas","zr_1","content_1","item","x","y","getSvgRoot","connectedBackgroundColor","setBackgroundColor","refreshImmediately","add","graphic","Rect","shape","style","fill","img","Image","image","convertToPixel","finder","value","convertFromPixel","containPixel","result","findResult","modelUtil","parseFinder","models","key","indexOf","model","coordSys","coordinateSystem","containPoint","console","warn","getVisual","visualType","parsedFinder","defaultMainType","seriesModel","data","getData","dataIndexInside","hasOwnProperty","indexOfRawIndex","dataIndex","getItemVisualFromData","getVisualFromData","getViewOfComponentModel","componentModel","getViewOfSeriesModel","MOUSE_EVENT_NAMES","eveName","handler","target","params","isGlobalOut","findEventDispatcher","parent","ecData","getECData","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","extend","componentIndex","getComponent","event","_$eventProcessor","eventInfo","targetEl","packedEvent","trigger","zrEventfulCallAtLast","eventActionMap","actionType","eventType","handleLegacySelectEvents","clear","series","dispose","setAttribute","DOM_ATTRIBUTE_KEY","_loadingFX","needPrepare","resetOption","duration","showLoading","name","cfg","hideLoading","loadingEffects","remove","makeActionFromEvent","eventObj","payload","dispatchAction","opt","actions","browser","weChat","updateLabelLayout","lifecycle","updatedSeries","appendData","assert","internalField","ecIns","restorePipelines","prepareStageTasks","plan","isComponent","viewList","viewMap","i","__alive","doPrepare","eachSeries","requireNewView","__requireNewView","viewId","classType","parseClassType","Clazz","ComponentView","getClass","main","sub","ChartView","__id","__model","__ecComponentInfo","index","renderTask","splice","subType","setUpdatePayload","concat","callView","query","condition","excludeSeriesId","excludeSeriesIdMap","createHashMap","normalizeToArray","modelId","convertOptionIdName","set","isExcluded","isHighDownPayload","SeriesModel","HIGHLIGHT_ACTION_TYPE","notBlur","blurSeriesFromHighlightPayload","_a","findComponentHighDownDispatchers","focusSelf","dispatchers","blurComponent","dispatcher","enterEmphasis","leaveEmphasis","isSelectChangePayload","toggleSelectionFromPayload","updateSeriesElementSelection","prepareAndUpdate","newOption","coordSysMgr","restoreData","create","clearColorPalette","darkMode","setDarkMode","updateTransform","componentDirtyList","componentView","seriesDirtyMap","chartView","uid","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","clearAllVisual","updateLayout","methodName","coordSysList","getCoordinateSystems","chartsMap","payloadType","escapeConnect","actionWrap","actionInfo","cptTypeTmp","split","updateMethod","pop","cptType","payloads","batched","batch","map","defaults","eventObjBatch","isSelectChange","isHighDown","allLeaveBlur","batchItem","action","preParseFinder","queryOptionMap","mainTypeSpecified","componentMainType","keys","messageCenter","newObj","selected","getAllSelectedIndices","isFromClick","fromAction","fromActionPayload","pendingActions","shift","isFinished","isHighDownDispatcher","handleGlobalMouseOverForHighDown","handleGlobalMouseOutForHighDown","allocateZlevels","componentZLevels","seriesZLevels","hasSeperateZLevel","zlevel","z","zlevelKey","getZLevelKey","idx","zLevels","lastSeriesZLevel_1","lastSeriesKey_1","setZLevel","dirtyList","clearStates","updateZ","updateStates","getSeries","updatePayload","dirty","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","traverse","isElementRemoved","applyElementStates","newStates","oldStates","currentStates","stateName","states","select","hoverState","HOVER_STATE_EMPHASIS","emphasis","HOVER_STATE_BLUR","blur","useStates","elCount","isGroup","node","worker","preventUsingHoverLayer","eachRendered","hoverLayer","blendMode","blend","preventAutoZ","doUpdateZ","maxZ2","label","getTextContent","labelLine","getTextGuideLine","children","childrenRef","z2","isFinite","textGuideLineConfig","showAbove","textContent","textGuide","stateTransition","hasState","prevStates","stateAnimationModel","enableAnimation","isAnimationEnabled","delay","easing","Path","savePathStates","__dirty","class_1","getComponentByElement","modelInfo","highlightDigit","enterBlur","leaveBlur","enterSelect","leaveSelect","ExtensionAPI","updateConnectedChartsStatus","charts","status","otherChart","action_1","otherCharts_1","echartsProto","one","eventName","cb","ctx","wrapped","args2","idBase","groupIdBase","isClient","existInstance","getInstanceByDom","isDom","nodeName","toUpperCase","clientWidth","clientHeight","connect","isArray","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerPostInit","postInitFunc","registerUpdateLifecycle","registerPostUpdate","postUpdateFunc","registerAction","isFunction","test","registerCoordinateSystem","coordSysCreator","register","getCoordinateSystemDimensions","getDimensionsInfo","dimensions","slice","registerLayout","layoutTask","registerVisual","visualTask","registeredTasks","targetList","fn","defaultPriority","isNaN","wrap","__raw","stageHandler","wrapStageHandler","registerLoading","loadingFx","setCanvasCreator","creator","setPlatformAPI","registerMap","mapName","geoJson","specialAreas","getImpl","getMap","registerTransform","registerExternalTransform","seriesStyleTask","dataStyleTask","dataColorPaletteTask","seriesSymbolTask","dataSymbolTask","decal","dataStack","loadingDefault","noop","DOWNPLAY_ACTION_TYPE","SELECT_ACTION_TYPE","UNSELECT_ACTION_TYPE","TOGGLE_SELECT_ACTION_TYPE","lightTheme","darkTheme","dataTool"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/echarts/lib/core/echarts.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrender from 'zrender/lib/zrender.js';\nimport { assert, each, isFunction, isObject, indexOf, bind, clone, setAsPrimitive, extend, createHashMap, map, defaults, isDom, isArray, noop, isString } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport timsort from 'zrender/lib/core/timsort.js';\nimport Eventful from 'zrender/lib/core/Eventful.js';\nimport GlobalModel from '../model/Global.js';\nimport ExtensionAPI from './ExtensionAPI.js';\nimport CoordinateSystemManager from './CoordinateSystem.js';\nimport OptionManager from '../model/OptionManager.js';\nimport backwardCompat from '../preprocessor/backwardCompat.js';\nimport dataStack from '../processor/dataStack.js';\nimport SeriesModel from '../model/Series.js';\nimport ComponentView from '../view/Component.js';\nimport ChartView from '../view/Chart.js';\nimport * as graphic from '../util/graphic.js';\nimport { getECData } from '../util/innerStore.js';\nimport { isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, blurSeriesFromHighlightPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur, allLeaveBlur, findComponentHighDownDispatchers, blurComponent, handleGlobalMouseOverForHighDown, handleGlobalMouseOutForHighDown } from '../util/states.js';\nimport * as modelUtil from '../util/model.js';\nimport { throttle } from '../util/throttle.js';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style.js';\nimport loadingDefault from '../loading/default.js';\nimport Scheduler from './Scheduler.js';\nimport lightTheme from '../theme/light.js';\nimport darkTheme from '../theme/dark.js';\nimport { parseClassType } from '../util/clazz.js';\nimport { ECEventProcessor } from '../util/ECEventProcessor.js';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol.js';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper.js';\nimport { deprecateLog, deprecateReplaceLog, error } from '../util/log.js';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction.js';\nimport { registerExternalTransform } from '../data/helper/transform.js';\nimport { createLocaleObject, SYSTEM_LANG } from './locale.js';\nimport { findEventDispatcher } from '../util/event.js';\nimport decal from '../visual/decal.js';\nimport lifecycle from './lifecycle.js';\nimport { platformApi, setPlatformAPI } from 'zrender/lib/core/platform.js';\nimport { getImpl } from './impl.js';\nvar hasWindow = typeof window !== 'undefined';\nexport var version = '5.3.3';\nexport var dependencies = {\n  zrender: '5.3.2'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the begining of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar PENDING_UPDATE = '__pendingUpdate';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\n\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\n\nvar MessageCenter =\n/** @class */\nfunction (_super) {\n  __extends(MessageCenter, _super);\n\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MessageCenter;\n}(Eventful);\n\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar createExtensionAPI;\nvar enableConnect;\nvar markStatusToUpdate;\nvar applyChangedStates;\n\nvar ECharts =\n/** @class */\nfunction (_super) {\n  __extends(ECharts, _super);\n\n  function ECharts(dom, // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if (isString(theme)) {\n      theme = themeStorage[theme];\n    }\n\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultUseDirtyRect = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var root =\n      /* eslint-disable-next-line */\n      hasWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      ssr: opts.ssr,\n      useDirtyRect: opts.useDirtyRect == null ? defaultUseDirtyRect : opts.useDirtyRect\n    });\n    _this._ssr = opts.ssr; // Expect 60 fps.\n\n    _this._throttledZrFlush = throttle(bind(zr.flush, zr), 17);\n    theme = clone(theme);\n    theme && backwardCompat(theme, true);\n    _this._theme = theme;\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n    _this.resize = bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    setAsPrimitive(_this);\n    return _this;\n  }\n\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[PENDING_UPDATE]) {\n      var silent = this[PENDING_UPDATE].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, this[PENDING_UPDATE].updateParams);\n      } catch (e) {\n        this[IN_MAIN_PROCESS_KEY] = false;\n        this[PENDING_UPDATE] = null;\n        throw e;\n      } // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n\n      this._zr.flush();\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[PENDING_UPDATE] = null;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n        // Stream progress.\n        var remainTime = TEST_FRAME_REMAIN_TIME;\n        var ecModel = this._model;\n        var api = this._api;\n        scheduler.unfinished = false;\n\n        do {\n          var startTime = +new Date();\n          scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n          scheduler.performDataProcessorTasks(ecModel);\n          updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n          // each frame is not a good user experience. So we follow the rule that\n          // the extent of the coordinate system is determin in the first frame (the\n          // frame is executed immedietely after task reset.\n          // this._coordSysMgr.update(ecModel, api);\n          // console.log('--- ec frame visual ---', remainTime);\n\n          scheduler.performVisualTasks(ecModel);\n          renderSeries(this, this._model, api, 'remain', {});\n          remainTime -= +new Date() - startTime;\n        } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n        if (!scheduler.unfinished) {\n          this._zr.flush();\n        } // Else, zr flushing be ensue within the same frame,\n        // because zr flushing is after onframe event.\n\n      }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n\n  ECharts.prototype.isSSR = function () {\n    return this._ssr;\n  };\n  /* eslint-disable-next-line */\n\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`setOption` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.ssr = this._ssr;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n\n    var updateParams = {\n      seriesTransition: transitionOpt,\n      optionChanged: true\n    };\n\n    if (lazyUpdate) {\n      this[PENDING_UPDATE] = {\n        silent: silent,\n        updateParams: updateParams\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, updateParams);\n      } catch (e) {\n        this[PENDING_UPDATE] = null;\n        this[IN_MAIN_PROCESS_KEY] = false;\n        throw e;\n      } // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n\n      if (!this._ssr) {\n        // not use flush when using ssr mode.\n        this._zr.flush();\n      }\n\n      this[PENDING_UPDATE] = null;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @deprecated\n   */\n\n\n  ECharts.prototype.setTheme = function () {\n    deprecateLog('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */\n    || hasWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   * @deprecated Use renderToCanvas instead.\n   */\n\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      deprecateReplaceLog('getRenderedCanvas', 'renderToCanvas');\n    }\n\n    return this.renderToCanvas(opts);\n  };\n\n  ECharts.prototype.renderToCanvas = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'canvas') {\n        throw new Error('renderToCanvas can only be used in the canvas renderer.');\n      }\n    }\n\n    return painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n\n  ECharts.prototype.renderToSVGString = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'svg') {\n        throw new Error('renderToSVGString can only be used in the svg renderer.');\n      }\n    }\n\n    return painter.renderToString({\n      useViewBox: opts.useViewBox\n    });\n  };\n  /**\n   * Get svg data url\n   */\n\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!env.svgSupported) {\n      return;\n    }\n\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.renderToCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.renderToCanvas(clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = platformApi.createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        console.warn('There is no specified seires model');\n      }\n    }\n\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n                params = extend({}, ecData.eventData);\n                return true;\n              }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              console.warn('model or view can not be found by params');\n            }\n          }\n\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n\n      handler.zrEventfulCallAtLast = true;\n\n      _this._zr.on(eveName, handler, _this);\n    });\n    each(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    each(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    handleLegacySelectEvents(this._messageCenter, this, this._api);\n  };\n\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this.setOption({\n      series: []\n    }, true);\n  };\n\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._disposed = true;\n    var dom = this.getDom();\n\n    if (dom) {\n      modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    }\n\n    var chart = this;\n    var api = chart._api;\n    var ecModel = chart._model;\n    each(chart._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(chart._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    chart._zr.dispose(); // Set properties to null.\n    // To reduce the memory cost in case the top code still holds this instance unexpectedly.\n\n\n    chart._dom = chart._model = chart._chartsMap = chart._componentsMap = chart._chartsViews = chart._componentsViews = chart._scheduler = chart._api = chart._zr = chart._throttledZrFlush = chart._theme = chart._coordSysMgr = chart._messageCenter = null;\n    delete instances[chart.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n\n  ECharts.prototype.resize = function (opts) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`resize` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._zr.resize(opts);\n\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n\n    if (!ecModel) {\n      return;\n    }\n\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent; // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n\n      needPrepare = true;\n      this[PENDING_UPDATE] = null;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    try {\n      needPrepare && prepare(this);\n      updateMethods.update.call(this, {\n        type: 'resize',\n        animation: extend({\n          // Disable animation\n          duration: 0\n        }, opts && opts.animation)\n      });\n    } catch (e) {\n      this[IN_MAIN_PROCESS_KEY] = false;\n      throw e;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n\n    name = name || 'default';\n    this.hideLoading();\n\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Loading effects ' + name + ' not exists.');\n      }\n\n      return;\n    }\n\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = extend({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n\n      return;\n    }\n\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh util user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.updateLabelLayout = function () {\n    lifecycle.trigger('series:layoutlabels', this._model, this._api, {\n      // Not adding series labels.\n      // TODO\n      updatedSeries: []\n    });\n  };\n\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n\n      function doPrepare(model) {\n        // By defaut view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      } // If dispatchAction before setOption, do nothing.\n\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n\n        if (isHighDownPayload(payload)) {\n          if (model instanceof SeriesModel) {\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && !payload.notBlur && !model.get(['emphasis', 'disabled'])) {\n              blurSeriesFromHighlightPayload(model, payload, ecIns._api);\n            }\n          } else {\n            var _a = findComponentHighDownDispatchers(model.mainType, model.componentIndex, payload.name, ecIns._api),\n                focusSelf = _a.focusSelf,\n                dispatchers = _a.dispatchers;\n\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n              blurComponent(model.mainType, model.componentIndex, ecIns._api);\n            } // PENDING:\n            // Whether to put this \"enter emphasis\" code in `ComponentView`,\n            // which will be the same as `ChartView` but might be not necessary\n            // and will be far from this logic.\n\n\n            if (dispatchers) {\n              each(dispatchers, function (dispatcher) {\n                payload.type === HIGHLIGHT_ACTION_TYPE ? enterEmphasis(dispatcher) : leaveEmphasis(dispatcher);\n              });\n            }\n          }\n        } else if (isSelectChangePayload(payload)) {\n          // TODO geo\n          if (model instanceof SeriesModel) {\n            toggleSelectionFromPayload(model, payload, ecIns._api);\n            updateSeriesElementSelection(model);\n            markStatusToUpdate(ecIns);\n          }\n        }\n      }, ecIns);\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n        callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n      }, ecIns);\n\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload, {\n          // Needs to mark option changed if newOption is given.\n          // It's from MagicType.\n          // TODO If use a separate flag optionChanged in payload?\n          optionChanged: payload.newOption != null\n        });\n      },\n      update: function (payload, updateParams) {\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the orignal point\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // deteming whether use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not requied in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload, updateParams); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode');\n        zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n        if (darkMode != null && darkMode !== 'auto') {\n          zr.setDarkMode(darkMode);\n        }\n\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n\n          var componentView = _this.getViewOfComponentModel(componentModel);\n\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n        renderSeries(this, ecModel, api, payload, {}, seriesDirtyMap);\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n\n        render(this, ecModel, this._api, payload, {});\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n\n      var ecModel = ecIns._model;\n\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = map(payload.batch, function (item) {\n          item = defaults(extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isHighDown = isHighDownPayload(payload); // Only leave blur once if there are multiple batches.\n\n      if (isHighDown) {\n        allLeaveBlur(this._api);\n      }\n\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || extend({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n              queryOptionMap = _a.queryOptionMap,\n              mainTypeSpecified = _a.mainTypeSpecified;\n\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        try {\n          // Still dirty\n          if (this[PENDING_UPDATE]) {\n            prepare(this);\n            updateMethods.update.call(this, payload);\n            this[PENDING_UPDATE] = null;\n          } else {\n            updateMethods[updateMethod].call(this, payload);\n          }\n        } catch (e) {\n          this[IN_MAIN_PROCESS_KEY] = false;\n          throw e;\n        }\n      } // Follow the rule of action batch\n\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: getAllSelectedIndices(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatly,\n        // so it should only be triggered when rendering indeed happend\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if ( // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[PENDING_UPDATE] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOverForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOutForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n\n    function clearColorPalette(ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    }\n\n    ; // Allocate zlevels for series and components\n\n    function allocateZlevels(ecModel) {\n      ;\n      var componentZLevels = [];\n      var seriesZLevels = [];\n      var hasSeperateZLevel = false;\n      ecModel.eachComponent(function (componentType, componentModel) {\n        var zlevel = componentModel.get('zlevel') || 0;\n        var z = componentModel.get('z') || 0;\n        var zlevelKey = componentModel.getZLevelKey();\n        hasSeperateZLevel = hasSeperateZLevel || !!zlevelKey;\n        (componentType === 'series' ? seriesZLevels : componentZLevels).push({\n          zlevel: zlevel,\n          z: z,\n          idx: componentModel.componentIndex,\n          type: componentType,\n          key: zlevelKey\n        });\n      });\n\n      if (hasSeperateZLevel) {\n        // Series after component\n        var zLevels = componentZLevels.concat(seriesZLevels);\n        var lastSeriesZLevel_1;\n        var lastSeriesKey_1;\n        timsort(zLevels, function (a, b) {\n          if (a.zlevel === b.zlevel) {\n            return a.z - b.z;\n          }\n\n          return a.zlevel - b.zlevel;\n        });\n        each(zLevels, function (item) {\n          var componentModel = ecModel.getComponent(item.type, item.idx);\n          var zlevel = item.zlevel;\n          var key = item.key;\n\n          if (lastSeriesZLevel_1 != null) {\n            zlevel = Math.max(lastSeriesZLevel_1, zlevel);\n          }\n\n          if (key) {\n            if (zlevel === lastSeriesZLevel_1 && key !== lastSeriesKey_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = key;\n          } else if (lastSeriesKey_1) {\n            if (zlevel === lastSeriesZLevel_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = '';\n          }\n\n          lastSeriesZLevel_1 = zlevel;\n          componentModel.setZLevel(zlevel);\n        });\n      }\n    }\n\n    render = function (ecIns, ecModel, api, payload, updateParams) {\n      allocateZlevels(ecModel);\n      renderComponents(ecIns, ecModel, api, payload, updateParams);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload, updateParams); // Remove groups of unrendered charts\n\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n\n    renderComponents = function (ecIns, ecModel, api, payload, updateParams, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n\n    renderSeries = function (ecIns, ecModel, api, payload, updateParams, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      updateParams = extend(updateParams || {}, {\n        updatedSeries: ecModel.getSeries()\n      }); // TODO progressive?\n\n      lifecycle.trigger('series:beforeupdate', ecModel, api, updateParams);\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // increamental render (alway render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      lifecycle.trigger('series:layoutlabels', ecModel, api, updateParams); // transition after label is layouted.\n\n      lifecycle.trigger('series:transition', ecModel, api, updateParams);\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n      lifecycle.trigger('series:afterupdate', ecModel, api, updateParams);\n    };\n\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n\n      el.useStates(newStates);\n    }\n\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n          if (chartView.__alive) {\n            chartView.eachRendered(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n      chartView.eachRendered(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DONT mark the element dirty. In case element is incremental and don't wan't to rerender.\n          el.style.blend = blendMode;\n        }\n      });\n    }\n\n    ;\n\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      }\n\n      var z = model.get('z') || 0;\n      var zlevel = model.get('zlevel') || 0; // Set z and zlevel\n\n      view.eachRendered(function (el) {\n        doUpdateZ(el, z, zlevel, -Infinity); // Don't traverse the children because it has been traversed in _updateZ.\n\n        return true;\n      });\n    }\n\n    ;\n\n    function doUpdateZ(el, z, zlevel, maxZ2) {\n      // Group may also have textContent\n      var label = el.getTextContent();\n      var labelLine = el.getTextGuideLine();\n      var isGroup = el.isGroup;\n\n      if (isGroup) {\n        // set z & zlevel of children elements of Group\n        var children = el.childrenRef();\n\n        for (var i = 0; i < children.length; i++) {\n          maxZ2 = Math.max(doUpdateZ(children[i], z, zlevel, maxZ2), maxZ2);\n        }\n      } else {\n        // not Group\n        el.z = z;\n        el.zlevel = zlevel;\n        maxZ2 = Math.max(el.z2, maxZ2);\n      } // always set z and zlevel if label/labelLine exists\n\n\n      if (label) {\n        label.z = z;\n        label.zlevel = zlevel; // lift z2 of text content\n        // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n        isFinite(maxZ2) && (label.z2 = maxZ2 + 2);\n      }\n\n      if (labelLine) {\n        var textGuideLineConfig = el.textGuideLineConfig;\n        labelLine.z = z;\n        labelLine.zlevel = zlevel;\n        isFinite(maxZ2) && (labelLine.z2 = maxZ2 + (textGuideLineConfig && textGuideLineConfig.showAbove ? 1 : -1));\n      }\n\n      return maxZ2;\n    } // Clear states without animation.\n    // TODO States on component.\n\n\n    function clearStates(model, view) {\n      view.eachRendered(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n\n      } : null;\n      view.eachRendered(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          } // Only updated on changed element. In case element is incremental and don't wan't to rerender.\n          // TODO, a more proper way?\n\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // The use higlighted and selected flag to toggle states.\n\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n\n    ;\n\n    createExtensionAPI = function (ecIns) {\n      return new (\n      /** @class */\n      function (_super) {\n        __extends(class_1, _super);\n\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n\n            el = el.parent;\n          }\n        };\n\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n\n      each(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n  }();\n\n  return ECharts;\n}(Eventful);\n\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n\n  function wrapped() {\n    var args2 = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n};\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Instance ' + id + ' has been disposed');\n  }\n}\n\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.locale Specify the locale.\n * @param opts.useDirtyRect Enable dirty rectangle rendering or not.\n */\n\nexport function init(dom, theme, opts) {\n  var isClient = !(opts && opts.ssr);\n\n  if (isClient) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!dom) {\n        throw new Error('Initialize failed: invalid dom.');\n      }\n    }\n\n    var existInstance = getInstanceByDom(dom);\n\n    if (existInstance) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('There is a chart instance already initialized on the dom.');\n      }\n\n      return existInstance;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n        console.warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n      }\n    }\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  isClient && modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  lifecycle.trigger('afterinit', chart);\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\nexport function connect(groupId) {\n  // Is array of charts\n  if (isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\nexport function disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backword compat\n */\n\nexport var disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexport function dispose(chart) {\n  if (isString(chart)) {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\nexport function registerPostInit(postInitFunc) {\n  registerUpdateLifecycle('afterinit', postInitFunc);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nexport function registerPostUpdate(postUpdateFunc) {\n  registerUpdateLifecycle('afterupdate', postUpdateFunc);\n}\nexport function registerUpdateLifecycle(name, cb) {\n  lifecycle.on(name, cb);\n}\nexport function registerAction(actionInfo, eventName, action) {\n  if (isFunction(eventName)) {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport { registerLocale } from './locale.js';\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\n\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n *\n * @deprecated use setPlatformAPI({ createCanvas }) instead.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nexport function setCanvasCreator(creator) {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateLog('setCanvasCreator is deprecated. Use setPlatformAPI({ createCanvas }) instead.');\n  }\n\n  setPlatformAPI({\n    createCanvas: creator\n  });\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\nexport function registerMap(mapName, geoJson, specialAreas) {\n  var registerMap = getImpl('registerMap');\n  registerMap && registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  var getMap = getImpl('getMap');\n  return getMap && getMap(mapName);\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Buitlin global visual\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_ACTION_TYPE,\n  update: SELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: UNSELECT_ACTION_TYPE,\n  update: UNSELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: TOGGLE_SELECT_ACTION_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE\n}, noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nexport var dataTool = {};"],"mappings":"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"},"metadata":{},"sourceType":"script"}