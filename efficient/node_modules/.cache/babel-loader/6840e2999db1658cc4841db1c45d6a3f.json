{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nvar _interopRequireWildcard = require(\"C:/Users/Z/Desktop/efficient/efficient/node_modules/@babel/runtime/helpers/interopRequireWildcard.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.normalizeArcAngles = normalizeArcAngles;\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/esnext.typed-array.find-last.js\");\n\nrequire(\"core-js/modules/esnext.typed-array.find-last-index.js\");\n\nvar vec2 = _interopRequireWildcard(require(\"./vector.js\"));\n\nvar _BoundingRect = _interopRequireDefault(require(\"./BoundingRect.js\"));\n\nvar _config = require(\"../config.js\");\n\nvar _bbox = require(\"./bbox.js\");\n\nvar _curve = require(\"./curve.js\");\n\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  R: 7\n};\nvar tmpOutX = [];\nvar tmpOutY = [];\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathAbs = Math.abs;\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar hasTypedArray = typeof Float32Array !== 'undefined';\nvar tmpAngles = [];\n\nfunction modPI2(radian) {\n  var n = Math.round(radian / PI * 1e8) / 1e8;\n  return n % 2 * PI;\n}\n\nfunction normalizeArcAngles(angles, anticlockwise) {\n  var newStartAngle = modPI2(angles[0]);\n\n  if (newStartAngle < 0) {\n    newStartAngle += PI2;\n  }\n\n  var delta = newStartAngle - angles[0];\n  var newEndAngle = angles[1];\n  newEndAngle += delta;\n\n  if (!anticlockwise && newEndAngle - newStartAngle >= PI2) {\n    newEndAngle = newStartAngle + PI2;\n  } else if (anticlockwise && newStartAngle - newEndAngle >= PI2) {\n    newEndAngle = newStartAngle - PI2;\n  } else if (!anticlockwise && newStartAngle > newEndAngle) {\n    newEndAngle = newStartAngle + (PI2 - modPI2(newStartAngle - newEndAngle));\n  } else if (anticlockwise && newStartAngle < newEndAngle) {\n    newEndAngle = newStartAngle - (PI2 - modPI2(newEndAngle - newStartAngle));\n  }\n\n  angles[0] = newStartAngle;\n  angles[1] = newEndAngle;\n}\n\nvar PathProxy = function () {\n  function PathProxy(notSaveData) {\n    this.dpr = 1;\n    this._xi = 0;\n    this._yi = 0;\n    this._x0 = 0;\n    this._y0 = 0;\n    this._len = 0;\n\n    if (notSaveData) {\n      this._saveData = false;\n    }\n\n    if (this._saveData) {\n      this.data = [];\n    }\n  }\n\n  PathProxy.prototype.increaseVersion = function () {\n    this._version++;\n  };\n\n  PathProxy.prototype.getVersion = function () {\n    return this._version;\n  };\n\n  PathProxy.prototype.setScale = function (sx, sy, segmentIgnoreThreshold) {\n    segmentIgnoreThreshold = segmentIgnoreThreshold || 0;\n\n    if (segmentIgnoreThreshold > 0) {\n      this._ux = mathAbs(segmentIgnoreThreshold / _config.devicePixelRatio / sx) || 0;\n      this._uy = mathAbs(segmentIgnoreThreshold / _config.devicePixelRatio / sy) || 0;\n    }\n  };\n\n  PathProxy.prototype.setDPR = function (dpr) {\n    this.dpr = dpr;\n  };\n\n  PathProxy.prototype.setContext = function (ctx) {\n    this._ctx = ctx;\n  };\n\n  PathProxy.prototype.getContext = function () {\n    return this._ctx;\n  };\n\n  PathProxy.prototype.beginPath = function () {\n    this._ctx && this._ctx.beginPath();\n    this.reset();\n    return this;\n  };\n\n  PathProxy.prototype.reset = function () {\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._pathSegLen) {\n      this._pathSegLen = null;\n      this._pathLen = 0;\n    }\n\n    this._version++;\n  };\n\n  PathProxy.prototype.moveTo = function (x, y) {\n    this._drawPendingPt();\n\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y);\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  };\n\n  PathProxy.prototype.lineTo = function (x, y) {\n    var dx = mathAbs(x - this._xi);\n    var dy = mathAbs(y - this._yi);\n    var exceedUnit = dx > this._ux || dy > this._uy;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n      this._pendingPtDist = 0;\n    } else {\n      var d2 = dx * dx + dy * dy;\n\n      if (d2 > this._pendingPtDist) {\n        this._pendingPtX = x;\n        this._pendingPtY = y;\n        this._pendingPtDist = d2;\n      }\n    }\n\n    return this;\n  };\n\n  PathProxy.prototype.bezierCurveTo = function (x1, y1, x2, y2, x3, y3) {\n    this._drawPendingPt();\n\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  };\n\n  PathProxy.prototype.quadraticCurveTo = function (x1, y1, x2, y2) {\n    this._drawPendingPt();\n\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  };\n\n  PathProxy.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this._drawPendingPt();\n\n    tmpAngles[0] = startAngle;\n    tmpAngles[1] = endAngle;\n    normalizeArcAngles(tmpAngles, anticlockwise);\n    startAngle = tmpAngles[0];\n    endAngle = tmpAngles[1];\n    var delta = endAngle - startAngle;\n    this.addData(CMD.A, cx, cy, r, r, startAngle, delta, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cy;\n    return this;\n  };\n\n  PathProxy.prototype.arcTo = function (x1, y1, x2, y2, radius) {\n    this._drawPendingPt();\n\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  };\n\n  PathProxy.prototype.rect = function (x, y, w, h) {\n    this._drawPendingPt();\n\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  };\n\n  PathProxy.prototype.closePath = function () {\n    this._drawPendingPt();\n\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  };\n\n  PathProxy.prototype.fill = function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  };\n\n  PathProxy.prototype.stroke = function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  };\n\n  PathProxy.prototype.len = function () {\n    return this._len;\n  };\n\n  PathProxy.prototype.setData = function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length === len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  };\n\n  PathProxy.prototype.appendPath = function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  };\n\n  PathProxy.prototype.addData = function (cmd, a, b, c, d, e, f, g, h) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n  };\n\n  PathProxy.prototype._drawPendingPt = function () {\n    if (this._pendingPtDist > 0) {\n      this._ctx && this._ctx.lineTo(this._pendingPtX, this._pendingPtY);\n      this._pendingPtDist = 0;\n    }\n  };\n\n  PathProxy.prototype._expandData = function () {\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  };\n\n  PathProxy.prototype.toStatic = function () {\n    if (!this._saveData) {\n      return;\n    }\n\n    this._drawPendingPt();\n\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray && this._len > 11) {\n        this.data = new Float32Array(data);\n      }\n    }\n  };\n\n  PathProxy.prototype.getBoundingRect = function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n    var i;\n\n    for (i = 0; i < this._len;) {\n      var cmd = data[i++];\n      var isFirst = i === 1;\n\n      if (isFirst) {\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          xi = x0 = data[i++];\n          yi = y0 = data[i++];\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          (0, _bbox.fromLine)(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          (0, _bbox.fromCubic)(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          (0, _bbox.fromQuadratic)(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle;\n          i += 1;\n          var anticlockwise = !data[i++];\n\n          if (isFirst) {\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          (0, _bbox.fromArc)(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++];\n          (0, _bbox.fromLine)(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      }\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    }\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new _BoundingRect.default(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  };\n\n  PathProxy.prototype._calculateLength = function () {\n    var data = this.data;\n    var len = this._len;\n    var ux = this._ux;\n    var uy = this._uy;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    if (!this._pathSegLen) {\n      this._pathSegLen = [];\n    }\n\n    var pathSegLen = this._pathSegLen;\n    var pathTotalLen = 0;\n    var segCount = 0;\n\n    for (var i = 0; i < len;) {\n      var cmd = data[i++];\n      var isFirst = i === 1;\n\n      if (isFirst) {\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      var l = -1;\n\n      switch (cmd) {\n        case CMD.M:\n          xi = x0 = data[i++];\n          yi = y0 = data[i++];\n          break;\n\n        case CMD.L:\n          {\n            var x2 = data[i++];\n            var y2 = data[i++];\n            var dx = x2 - xi;\n            var dy = y2 - yi;\n\n            if (mathAbs(dx) > ux || mathAbs(dy) > uy || i === len - 1) {\n              l = Math.sqrt(dx * dx + dy * dy);\n              xi = x2;\n              yi = y2;\n            }\n\n            break;\n          }\n\n        case CMD.C:\n          {\n            var x1 = data[i++];\n            var y1 = data[i++];\n            var x2 = data[i++];\n            var y2 = data[i++];\n            var x3 = data[i++];\n            var y3 = data[i++];\n            l = (0, _curve.cubicLength)(xi, yi, x1, y1, x2, y2, x3, y3, 10);\n            xi = x3;\n            yi = y3;\n            break;\n          }\n\n        case CMD.Q:\n          {\n            var x1 = data[i++];\n            var y1 = data[i++];\n            var x2 = data[i++];\n            var y2 = data[i++];\n            l = (0, _curve.quadraticLength)(xi, yi, x1, y1, x2, y2, 10);\n            xi = x2;\n            yi = y2;\n            break;\n          }\n\n        case CMD.A:\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var delta = data[i++];\n          var endAngle = delta + startAngle;\n          i += 1;\n          var anticlockwise = !data[i++];\n\n          if (isFirst) {\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          l = mathMax(rx, ry) * mathMin(PI2, Math.abs(delta));\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          {\n            x0 = xi = data[i++];\n            y0 = yi = data[i++];\n            var width = data[i++];\n            var height = data[i++];\n            l = width * 2 + height * 2;\n            break;\n          }\n\n        case CMD.Z:\n          {\n            var dx = x0 - xi;\n            var dy = y0 - yi;\n            l = Math.sqrt(dx * dx + dy * dy);\n            xi = x0;\n            yi = y0;\n            break;\n          }\n      }\n\n      if (l >= 0) {\n        pathSegLen[segCount++] = l;\n        pathTotalLen += l;\n      }\n    }\n\n    this._pathLen = pathTotalLen;\n    return pathTotalLen;\n  };\n\n  PathProxy.prototype.rebuildPath = function (ctx, percent) {\n    var d = this.data;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n    var x0;\n    var y0;\n    var xi;\n    var yi;\n    var x;\n    var y;\n    var drawPart = percent < 1;\n    var pathSegLen;\n    var pathTotalLen;\n    var accumLength = 0;\n    var segCount = 0;\n    var displayedLength;\n    var pendingPtDist = 0;\n    var pendingPtX;\n    var pendingPtY;\n\n    if (drawPart) {\n      if (!this._pathSegLen) {\n        this._calculateLength();\n      }\n\n      pathSegLen = this._pathSegLen;\n      pathTotalLen = this._pathLen;\n      displayedLength = percent * pathTotalLen;\n\n      if (!displayedLength) {\n        return;\n      }\n    }\n\n    lo: for (var i = 0; i < len;) {\n      var cmd = d[i++];\n      var isFirst = i === 1;\n\n      if (isFirst) {\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      if (cmd !== CMD.L && pendingPtDist > 0) {\n        ctx.lineTo(pendingPtX, pendingPtY);\n        pendingPtDist = 0;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          {\n            x = d[i++];\n            y = d[i++];\n            var dx = mathAbs(x - xi);\n            var dy = mathAbs(y - yi);\n\n            if (dx > ux || dy > uy) {\n              if (drawPart) {\n                var l = pathSegLen[segCount++];\n\n                if (accumLength + l > displayedLength) {\n                  var t = (displayedLength - accumLength) / l;\n                  ctx.lineTo(xi * (1 - t) + x * t, yi * (1 - t) + y * t);\n                  break lo;\n                }\n\n                accumLength += l;\n              }\n\n              ctx.lineTo(x, y);\n              xi = x;\n              yi = y;\n              pendingPtDist = 0;\n            } else {\n              var d2 = dx * dx + dy * dy;\n\n              if (d2 > pendingPtDist) {\n                pendingPtX = x;\n                pendingPtY = y;\n                pendingPtDist = d2;\n              }\n            }\n\n            break;\n          }\n\n        case CMD.C:\n          {\n            var x1 = d[i++];\n            var y1 = d[i++];\n            var x2 = d[i++];\n            var y2 = d[i++];\n            var x3 = d[i++];\n            var y3 = d[i++];\n\n            if (drawPart) {\n              var l = pathSegLen[segCount++];\n\n              if (accumLength + l > displayedLength) {\n                var t = (displayedLength - accumLength) / l;\n                (0, _curve.cubicSubdivide)(xi, x1, x2, x3, t, tmpOutX);\n                (0, _curve.cubicSubdivide)(yi, y1, y2, y3, t, tmpOutY);\n                ctx.bezierCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2], tmpOutX[3], tmpOutY[3]);\n                break lo;\n              }\n\n              accumLength += l;\n            }\n\n            ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            xi = x3;\n            yi = y3;\n            break;\n          }\n\n        case CMD.Q:\n          {\n            var x1 = d[i++];\n            var y1 = d[i++];\n            var x2 = d[i++];\n            var y2 = d[i++];\n\n            if (drawPart) {\n              var l = pathSegLen[segCount++];\n\n              if (accumLength + l > displayedLength) {\n                var t = (displayedLength - accumLength) / l;\n                (0, _curve.quadraticSubdivide)(xi, x1, x2, t, tmpOutX);\n                (0, _curve.quadraticSubdivide)(yi, y1, y2, t, tmpOutY);\n                ctx.quadraticCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2]);\n                break lo;\n              }\n\n              accumLength += l;\n            }\n\n            ctx.quadraticCurveTo(x1, y1, x2, y2);\n            xi = x2;\n            yi = y2;\n            break;\n          }\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var startAngle = d[i++];\n          var delta = d[i++];\n          var psi = d[i++];\n          var anticlockwise = !d[i++];\n          var r = rx > ry ? rx : ry;\n          var isEllipse = mathAbs(rx - ry) > 1e-3;\n          var endAngle = startAngle + delta;\n          var breakBuild = false;\n\n          if (drawPart) {\n            var l = pathSegLen[segCount++];\n\n            if (accumLength + l > displayedLength) {\n              endAngle = startAngle + delta * (displayedLength - accumLength) / l;\n              breakBuild = true;\n            }\n\n            accumLength += l;\n          }\n\n          if (isEllipse && ctx.ellipse) {\n            ctx.ellipse(cx, cy, rx, ry, psi, startAngle, endAngle, anticlockwise);\n          } else {\n            ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n          }\n\n          if (breakBuild) {\n            break lo;\n          }\n\n          if (isFirst) {\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          x = d[i++];\n          y = d[i++];\n          var width = d[i++];\n          var height = d[i++];\n\n          if (drawPart) {\n            var l = pathSegLen[segCount++];\n\n            if (accumLength + l > displayedLength) {\n              var d_1 = displayedLength - accumLength;\n              ctx.moveTo(x, y);\n              ctx.lineTo(x + mathMin(d_1, width), y);\n              d_1 -= width;\n\n              if (d_1 > 0) {\n                ctx.lineTo(x + width, y + mathMin(d_1, height));\n              }\n\n              d_1 -= height;\n\n              if (d_1 > 0) {\n                ctx.lineTo(x + mathMax(width - d_1, 0), y + height);\n              }\n\n              d_1 -= width;\n\n              if (d_1 > 0) {\n                ctx.lineTo(x, y + mathMax(height - d_1, 0));\n              }\n\n              break lo;\n            }\n\n            accumLength += l;\n          }\n\n          ctx.rect(x, y, width, height);\n          break;\n\n        case CMD.Z:\n          if (drawPart) {\n            var l = pathSegLen[segCount++];\n\n            if (accumLength + l > displayedLength) {\n              var t = (displayedLength - accumLength) / l;\n              ctx.lineTo(xi * (1 - t) + x0 * t, yi * (1 - t) + y0 * t);\n              break lo;\n            }\n\n            accumLength += l;\n          }\n\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  };\n\n  PathProxy.prototype.clone = function () {\n    var newProxy = new PathProxy();\n    var data = this.data;\n    newProxy.data = data.slice ? data.slice() : Array.prototype.slice.call(data);\n    newProxy._len = this._len;\n    return newProxy;\n  };\n\n  PathProxy.CMD = CMD;\n\n  PathProxy.initDefaultProps = function () {\n    var proto = PathProxy.prototype;\n    proto._saveData = true;\n    proto._ux = 0;\n    proto._uy = 0;\n    proto._pendingPtDist = 0;\n    proto._version = 0;\n  }();\n\n  return PathProxy;\n}();\n\nvar _default = PathProxy;\nexports.default = _default;","map":{"version":3,"names":["CMD","M","L","C","Q","A","Z","R","tmpOutX","tmpOutY","min","max","min2","max2","mathMin","Math","mathMax","mathCos","cos","mathSin","sin","mathAbs","abs","PI","PI2","hasTypedArray","Float32Array","tmpAngles","modPI2","radian","n","round","normalizeArcAngles","angles","anticlockwise","newStartAngle","delta","newEndAngle","PathProxy","notSaveData","dpr","_xi","_yi","_x0","_y0","_len","_saveData","data","prototype","increaseVersion","_version","getVersion","setScale","sx","sy","segmentIgnoreThreshold","_ux","_uy","setDPR","setContext","ctx","_ctx","getContext","beginPath","reset","_pathSegLen","_pathLen","moveTo","x","y","_drawPendingPt","addData","lineTo","dx","dy","exceedUnit","_pendingPtDist","d2","_pendingPtX","_pendingPtY","bezierCurveTo","x1","y1","x2","y2","x3","y3","quadraticCurveTo","arc","cx","cy","r","startAngle","endAngle","arcTo","radius","rect","w","h","closePath","x0","y0","fill","toStatic","stroke","len","setData","length","i","appendPath","path","Array","appendSize","offset","appendPathData","k","cmd","a","b","c","d","e","f","g","arguments","_expandData","newData","getBoundingRect","Number","MAX_VALUE","xi","yi","isFirst","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","width","height","vec2","BoundingRect","_calculateLength","ux","uy","pathSegLen","pathTotalLen","segCount","l","sqrt","cubicLength","quadraticLength","rebuildPath","percent","drawPart","accumLength","displayedLength","pendingPtDist","pendingPtX","pendingPtY","lo","t","cubicSubdivide","quadraticSubdivide","psi","isEllipse","breakBuild","ellipse","d_1","clone","newProxy","slice","call","initDefaultProps","proto"],"sources":["C:/Users/Z/Desktop/efficient/node_modules/zrender/lib/core/PathProxy.js"],"sourcesContent":["import * as vec2 from './vector.js';\nimport BoundingRect from './BoundingRect.js';\nimport { devicePixelRatio as dpr } from '../config.js';\nimport { fromLine, fromCubic, fromQuadratic, fromArc } from './bbox.js';\nimport { cubicLength, cubicSubdivide, quadraticLength, quadraticSubdivide } from './curve.js';\nvar CMD = {\n    M: 1,\n    L: 2,\n    C: 3,\n    Q: 4,\n    A: 5,\n    Z: 6,\n    R: 7\n};\nvar tmpOutX = [];\nvar tmpOutY = [];\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathAbs = Math.abs;\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar hasTypedArray = typeof Float32Array !== 'undefined';\nvar tmpAngles = [];\nfunction modPI2(radian) {\n    var n = Math.round(radian / PI * 1e8) / 1e8;\n    return (n % 2) * PI;\n}\nexport function normalizeArcAngles(angles, anticlockwise) {\n    var newStartAngle = modPI2(angles[0]);\n    if (newStartAngle < 0) {\n        newStartAngle += PI2;\n    }\n    var delta = newStartAngle - angles[0];\n    var newEndAngle = angles[1];\n    newEndAngle += delta;\n    if (!anticlockwise && newEndAngle - newStartAngle >= PI2) {\n        newEndAngle = newStartAngle + PI2;\n    }\n    else if (anticlockwise && newStartAngle - newEndAngle >= PI2) {\n        newEndAngle = newStartAngle - PI2;\n    }\n    else if (!anticlockwise && newStartAngle > newEndAngle) {\n        newEndAngle = newStartAngle + (PI2 - modPI2(newStartAngle - newEndAngle));\n    }\n    else if (anticlockwise && newStartAngle < newEndAngle) {\n        newEndAngle = newStartAngle - (PI2 - modPI2(newEndAngle - newStartAngle));\n    }\n    angles[0] = newStartAngle;\n    angles[1] = newEndAngle;\n}\nvar PathProxy = (function () {\n    function PathProxy(notSaveData) {\n        this.dpr = 1;\n        this._xi = 0;\n        this._yi = 0;\n        this._x0 = 0;\n        this._y0 = 0;\n        this._len = 0;\n        if (notSaveData) {\n            this._saveData = false;\n        }\n        if (this._saveData) {\n            this.data = [];\n        }\n    }\n    PathProxy.prototype.increaseVersion = function () {\n        this._version++;\n    };\n    PathProxy.prototype.getVersion = function () {\n        return this._version;\n    };\n    PathProxy.prototype.setScale = function (sx, sy, segmentIgnoreThreshold) {\n        segmentIgnoreThreshold = segmentIgnoreThreshold || 0;\n        if (segmentIgnoreThreshold > 0) {\n            this._ux = mathAbs(segmentIgnoreThreshold / dpr / sx) || 0;\n            this._uy = mathAbs(segmentIgnoreThreshold / dpr / sy) || 0;\n        }\n    };\n    PathProxy.prototype.setDPR = function (dpr) {\n        this.dpr = dpr;\n    };\n    PathProxy.prototype.setContext = function (ctx) {\n        this._ctx = ctx;\n    };\n    PathProxy.prototype.getContext = function () {\n        return this._ctx;\n    };\n    PathProxy.prototype.beginPath = function () {\n        this._ctx && this._ctx.beginPath();\n        this.reset();\n        return this;\n    };\n    PathProxy.prototype.reset = function () {\n        if (this._saveData) {\n            this._len = 0;\n        }\n        if (this._pathSegLen) {\n            this._pathSegLen = null;\n            this._pathLen = 0;\n        }\n        this._version++;\n    };\n    PathProxy.prototype.moveTo = function (x, y) {\n        this._drawPendingPt();\n        this.addData(CMD.M, x, y);\n        this._ctx && this._ctx.moveTo(x, y);\n        this._x0 = x;\n        this._y0 = y;\n        this._xi = x;\n        this._yi = y;\n        return this;\n    };\n    PathProxy.prototype.lineTo = function (x, y) {\n        var dx = mathAbs(x - this._xi);\n        var dy = mathAbs(y - this._yi);\n        var exceedUnit = dx > this._ux || dy > this._uy;\n        this.addData(CMD.L, x, y);\n        if (this._ctx && exceedUnit) {\n            this._ctx.lineTo(x, y);\n        }\n        if (exceedUnit) {\n            this._xi = x;\n            this._yi = y;\n            this._pendingPtDist = 0;\n        }\n        else {\n            var d2 = dx * dx + dy * dy;\n            if (d2 > this._pendingPtDist) {\n                this._pendingPtX = x;\n                this._pendingPtY = y;\n                this._pendingPtDist = d2;\n            }\n        }\n        return this;\n    };\n    PathProxy.prototype.bezierCurveTo = function (x1, y1, x2, y2, x3, y3) {\n        this._drawPendingPt();\n        this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n        if (this._ctx) {\n            this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n        }\n        this._xi = x3;\n        this._yi = y3;\n        return this;\n    };\n    PathProxy.prototype.quadraticCurveTo = function (x1, y1, x2, y2) {\n        this._drawPendingPt();\n        this.addData(CMD.Q, x1, y1, x2, y2);\n        if (this._ctx) {\n            this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n        }\n        this._xi = x2;\n        this._yi = y2;\n        return this;\n    };\n    PathProxy.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n        this._drawPendingPt();\n        tmpAngles[0] = startAngle;\n        tmpAngles[1] = endAngle;\n        normalizeArcAngles(tmpAngles, anticlockwise);\n        startAngle = tmpAngles[0];\n        endAngle = tmpAngles[1];\n        var delta = endAngle - startAngle;\n        this.addData(CMD.A, cx, cy, r, r, startAngle, delta, 0, anticlockwise ? 0 : 1);\n        this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n        this._xi = mathCos(endAngle) * r + cx;\n        this._yi = mathSin(endAngle) * r + cy;\n        return this;\n    };\n    PathProxy.prototype.arcTo = function (x1, y1, x2, y2, radius) {\n        this._drawPendingPt();\n        if (this._ctx) {\n            this._ctx.arcTo(x1, y1, x2, y2, radius);\n        }\n        return this;\n    };\n    PathProxy.prototype.rect = function (x, y, w, h) {\n        this._drawPendingPt();\n        this._ctx && this._ctx.rect(x, y, w, h);\n        this.addData(CMD.R, x, y, w, h);\n        return this;\n    };\n    PathProxy.prototype.closePath = function () {\n        this._drawPendingPt();\n        this.addData(CMD.Z);\n        var ctx = this._ctx;\n        var x0 = this._x0;\n        var y0 = this._y0;\n        if (ctx) {\n            ctx.closePath();\n        }\n        this._xi = x0;\n        this._yi = y0;\n        return this;\n    };\n    PathProxy.prototype.fill = function (ctx) {\n        ctx && ctx.fill();\n        this.toStatic();\n    };\n    PathProxy.prototype.stroke = function (ctx) {\n        ctx && ctx.stroke();\n        this.toStatic();\n    };\n    PathProxy.prototype.len = function () {\n        return this._len;\n    };\n    PathProxy.prototype.setData = function (data) {\n        var len = data.length;\n        if (!(this.data && this.data.length === len) && hasTypedArray) {\n            this.data = new Float32Array(len);\n        }\n        for (var i = 0; i < len; i++) {\n            this.data[i] = data[i];\n        }\n        this._len = len;\n    };\n    PathProxy.prototype.appendPath = function (path) {\n        if (!(path instanceof Array)) {\n            path = [path];\n        }\n        var len = path.length;\n        var appendSize = 0;\n        var offset = this._len;\n        for (var i = 0; i < len; i++) {\n            appendSize += path[i].len();\n        }\n        if (hasTypedArray && (this.data instanceof Float32Array)) {\n            this.data = new Float32Array(offset + appendSize);\n        }\n        for (var i = 0; i < len; i++) {\n            var appendPathData = path[i].data;\n            for (var k = 0; k < appendPathData.length; k++) {\n                this.data[offset++] = appendPathData[k];\n            }\n        }\n        this._len = offset;\n    };\n    PathProxy.prototype.addData = function (cmd, a, b, c, d, e, f, g, h) {\n        if (!this._saveData) {\n            return;\n        }\n        var data = this.data;\n        if (this._len + arguments.length > data.length) {\n            this._expandData();\n            data = this.data;\n        }\n        for (var i = 0; i < arguments.length; i++) {\n            data[this._len++] = arguments[i];\n        }\n    };\n    PathProxy.prototype._drawPendingPt = function () {\n        if (this._pendingPtDist > 0) {\n            this._ctx && this._ctx.lineTo(this._pendingPtX, this._pendingPtY);\n            this._pendingPtDist = 0;\n        }\n    };\n    PathProxy.prototype._expandData = function () {\n        if (!(this.data instanceof Array)) {\n            var newData = [];\n            for (var i = 0; i < this._len; i++) {\n                newData[i] = this.data[i];\n            }\n            this.data = newData;\n        }\n    };\n    PathProxy.prototype.toStatic = function () {\n        if (!this._saveData) {\n            return;\n        }\n        this._drawPendingPt();\n        var data = this.data;\n        if (data instanceof Array) {\n            data.length = this._len;\n            if (hasTypedArray && this._len > 11) {\n                this.data = new Float32Array(data);\n            }\n        }\n    };\n    PathProxy.prototype.getBoundingRect = function () {\n        min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n        max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n        var data = this.data;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n        var i;\n        for (i = 0; i < this._len;) {\n            var cmd = data[i++];\n            var isFirst = i === 1;\n            if (isFirst) {\n                xi = data[i];\n                yi = data[i + 1];\n                x0 = xi;\n                y0 = yi;\n            }\n            switch (cmd) {\n                case CMD.M:\n                    xi = x0 = data[i++];\n                    yi = y0 = data[i++];\n                    min2[0] = x0;\n                    min2[1] = y0;\n                    max2[0] = x0;\n                    max2[1] = y0;\n                    break;\n                case CMD.L:\n                    fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var startAngle = data[i++];\n                    var endAngle = data[i++] + startAngle;\n                    i += 1;\n                    var anticlockwise = !data[i++];\n                    if (isFirst) {\n                        x0 = mathCos(startAngle) * rx + cx;\n                        y0 = mathSin(startAngle) * ry + cy;\n                    }\n                    fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n                    xi = mathCos(endAngle) * rx + cx;\n                    yi = mathSin(endAngle) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                    break;\n                case CMD.Z:\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n            vec2.min(min, min, min2);\n            vec2.max(max, max, max2);\n        }\n        if (i === 0) {\n            min[0] = min[1] = max[0] = max[1] = 0;\n        }\n        return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    };\n    PathProxy.prototype._calculateLength = function () {\n        var data = this.data;\n        var len = this._len;\n        var ux = this._ux;\n        var uy = this._uy;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n        if (!this._pathSegLen) {\n            this._pathSegLen = [];\n        }\n        var pathSegLen = this._pathSegLen;\n        var pathTotalLen = 0;\n        var segCount = 0;\n        for (var i = 0; i < len;) {\n            var cmd = data[i++];\n            var isFirst = i === 1;\n            if (isFirst) {\n                xi = data[i];\n                yi = data[i + 1];\n                x0 = xi;\n                y0 = yi;\n            }\n            var l = -1;\n            switch (cmd) {\n                case CMD.M:\n                    xi = x0 = data[i++];\n                    yi = y0 = data[i++];\n                    break;\n                case CMD.L: {\n                    var x2 = data[i++];\n                    var y2 = data[i++];\n                    var dx = x2 - xi;\n                    var dy = y2 - yi;\n                    if (mathAbs(dx) > ux || mathAbs(dy) > uy || i === len - 1) {\n                        l = Math.sqrt(dx * dx + dy * dy);\n                        xi = x2;\n                        yi = y2;\n                    }\n                    break;\n                }\n                case CMD.C: {\n                    var x1 = data[i++];\n                    var y1 = data[i++];\n                    var x2 = data[i++];\n                    var y2 = data[i++];\n                    var x3 = data[i++];\n                    var y3 = data[i++];\n                    l = cubicLength(xi, yi, x1, y1, x2, y2, x3, y3, 10);\n                    xi = x3;\n                    yi = y3;\n                    break;\n                }\n                case CMD.Q: {\n                    var x1 = data[i++];\n                    var y1 = data[i++];\n                    var x2 = data[i++];\n                    var y2 = data[i++];\n                    l = quadraticLength(xi, yi, x1, y1, x2, y2, 10);\n                    xi = x2;\n                    yi = y2;\n                    break;\n                }\n                case CMD.A:\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var startAngle = data[i++];\n                    var delta = data[i++];\n                    var endAngle = delta + startAngle;\n                    i += 1;\n                    var anticlockwise = !data[i++];\n                    if (isFirst) {\n                        x0 = mathCos(startAngle) * rx + cx;\n                        y0 = mathSin(startAngle) * ry + cy;\n                    }\n                    l = mathMax(rx, ry) * mathMin(PI2, Math.abs(delta));\n                    xi = mathCos(endAngle) * rx + cx;\n                    yi = mathSin(endAngle) * ry + cy;\n                    break;\n                case CMD.R: {\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    l = width * 2 + height * 2;\n                    break;\n                }\n                case CMD.Z: {\n                    var dx = x0 - xi;\n                    var dy = y0 - yi;\n                    l = Math.sqrt(dx * dx + dy * dy);\n                    xi = x0;\n                    yi = y0;\n                    break;\n                }\n            }\n            if (l >= 0) {\n                pathSegLen[segCount++] = l;\n                pathTotalLen += l;\n            }\n        }\n        this._pathLen = pathTotalLen;\n        return pathTotalLen;\n    };\n    PathProxy.prototype.rebuildPath = function (ctx, percent) {\n        var d = this.data;\n        var ux = this._ux;\n        var uy = this._uy;\n        var len = this._len;\n        var x0;\n        var y0;\n        var xi;\n        var yi;\n        var x;\n        var y;\n        var drawPart = percent < 1;\n        var pathSegLen;\n        var pathTotalLen;\n        var accumLength = 0;\n        var segCount = 0;\n        var displayedLength;\n        var pendingPtDist = 0;\n        var pendingPtX;\n        var pendingPtY;\n        if (drawPart) {\n            if (!this._pathSegLen) {\n                this._calculateLength();\n            }\n            pathSegLen = this._pathSegLen;\n            pathTotalLen = this._pathLen;\n            displayedLength = percent * pathTotalLen;\n            if (!displayedLength) {\n                return;\n            }\n        }\n        lo: for (var i = 0; i < len;) {\n            var cmd = d[i++];\n            var isFirst = i === 1;\n            if (isFirst) {\n                xi = d[i];\n                yi = d[i + 1];\n                x0 = xi;\n                y0 = yi;\n            }\n            if (cmd !== CMD.L && pendingPtDist > 0) {\n                ctx.lineTo(pendingPtX, pendingPtY);\n                pendingPtDist = 0;\n            }\n            switch (cmd) {\n                case CMD.M:\n                    x0 = xi = d[i++];\n                    y0 = yi = d[i++];\n                    ctx.moveTo(xi, yi);\n                    break;\n                case CMD.L: {\n                    x = d[i++];\n                    y = d[i++];\n                    var dx = mathAbs(x - xi);\n                    var dy = mathAbs(y - yi);\n                    if (dx > ux || dy > uy) {\n                        if (drawPart) {\n                            var l = pathSegLen[segCount++];\n                            if (accumLength + l > displayedLength) {\n                                var t = (displayedLength - accumLength) / l;\n                                ctx.lineTo(xi * (1 - t) + x * t, yi * (1 - t) + y * t);\n                                break lo;\n                            }\n                            accumLength += l;\n                        }\n                        ctx.lineTo(x, y);\n                        xi = x;\n                        yi = y;\n                        pendingPtDist = 0;\n                    }\n                    else {\n                        var d2 = dx * dx + dy * dy;\n                        if (d2 > pendingPtDist) {\n                            pendingPtX = x;\n                            pendingPtY = y;\n                            pendingPtDist = d2;\n                        }\n                    }\n                    break;\n                }\n                case CMD.C: {\n                    var x1 = d[i++];\n                    var y1 = d[i++];\n                    var x2 = d[i++];\n                    var y2 = d[i++];\n                    var x3 = d[i++];\n                    var y3 = d[i++];\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var t = (displayedLength - accumLength) / l;\n                            cubicSubdivide(xi, x1, x2, x3, t, tmpOutX);\n                            cubicSubdivide(yi, y1, y2, y3, t, tmpOutY);\n                            ctx.bezierCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2], tmpOutX[3], tmpOutY[3]);\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n                    xi = x3;\n                    yi = y3;\n                    break;\n                }\n                case CMD.Q: {\n                    var x1 = d[i++];\n                    var y1 = d[i++];\n                    var x2 = d[i++];\n                    var y2 = d[i++];\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var t = (displayedLength - accumLength) / l;\n                            quadraticSubdivide(xi, x1, x2, t, tmpOutX);\n                            quadraticSubdivide(yi, y1, y2, t, tmpOutY);\n                            ctx.quadraticCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2]);\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.quadraticCurveTo(x1, y1, x2, y2);\n                    xi = x2;\n                    yi = y2;\n                    break;\n                }\n                case CMD.A:\n                    var cx = d[i++];\n                    var cy = d[i++];\n                    var rx = d[i++];\n                    var ry = d[i++];\n                    var startAngle = d[i++];\n                    var delta = d[i++];\n                    var psi = d[i++];\n                    var anticlockwise = !d[i++];\n                    var r = (rx > ry) ? rx : ry;\n                    var isEllipse = mathAbs(rx - ry) > 1e-3;\n                    var endAngle = startAngle + delta;\n                    var breakBuild = false;\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            endAngle = startAngle + delta * (displayedLength - accumLength) / l;\n                            breakBuild = true;\n                        }\n                        accumLength += l;\n                    }\n                    if (isEllipse && ctx.ellipse) {\n                        ctx.ellipse(cx, cy, rx, ry, psi, startAngle, endAngle, anticlockwise);\n                    }\n                    else {\n                        ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n                    }\n                    if (breakBuild) {\n                        break lo;\n                    }\n                    if (isFirst) {\n                        x0 = mathCos(startAngle) * rx + cx;\n                        y0 = mathSin(startAngle) * ry + cy;\n                    }\n                    xi = mathCos(endAngle) * rx + cx;\n                    yi = mathSin(endAngle) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = d[i];\n                    y0 = yi = d[i + 1];\n                    x = d[i++];\n                    y = d[i++];\n                    var width = d[i++];\n                    var height = d[i++];\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var d_1 = displayedLength - accumLength;\n                            ctx.moveTo(x, y);\n                            ctx.lineTo(x + mathMin(d_1, width), y);\n                            d_1 -= width;\n                            if (d_1 > 0) {\n                                ctx.lineTo(x + width, y + mathMin(d_1, height));\n                            }\n                            d_1 -= height;\n                            if (d_1 > 0) {\n                                ctx.lineTo(x + mathMax(width - d_1, 0), y + height);\n                            }\n                            d_1 -= width;\n                            if (d_1 > 0) {\n                                ctx.lineTo(x, y + mathMax(height - d_1, 0));\n                            }\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.rect(x, y, width, height);\n                    break;\n                case CMD.Z:\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var t = (displayedLength - accumLength) / l;\n                            ctx.lineTo(xi * (1 - t) + x0 * t, yi * (1 - t) + y0 * t);\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.closePath();\n                    xi = x0;\n                    yi = y0;\n            }\n        }\n    };\n    PathProxy.prototype.clone = function () {\n        var newProxy = new PathProxy();\n        var data = this.data;\n        newProxy.data = data.slice ? data.slice()\n            : Array.prototype.slice.call(data);\n        newProxy._len = this._len;\n        return newProxy;\n    };\n    PathProxy.CMD = CMD;\n    PathProxy.initDefaultProps = (function () {\n        var proto = PathProxy.prototype;\n        proto._saveData = true;\n        proto._ux = 0;\n        proto._uy = 0;\n        proto._pendingPtDist = 0;\n        proto._version = 0;\n    })();\n    return PathProxy;\n}());\nexport default PathProxy;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}